{
  "version": 3,
  "sources": ["<stdin>"],
  "sourcesContent": ["// enterprise-modules/master-detail/src/masterDetailModule.ts\nimport { ModuleNames } from \"@ag-grid-community/core\";\nimport { EnterpriseCoreModule, GroupCellRenderer, GroupCellRendererCtrl } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/master-detail/src/masterDetail/detailCellRenderer.ts\nimport {\n  Component,\n  ModuleRegistry,\n  RefPlaceholder,\n  _cloneObject,\n  _missing as _missing2,\n  _warnOnce as _warnOnce2,\n  createGrid\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/master-detail/src/masterDetail/detailCellRendererCtrl.ts\nimport { BeanStub, _missing, _warnOnce } from \"@ag-grid-community/core\";\nvar DetailCellRendererCtrl = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.loadRowDataVersion = 0;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.rowPositionUtils = beans.rowPositionUtils;\n    this.environment = beans.environment;\n  }\n  init(comp, params) {\n    this.params = params;\n    this.comp = comp;\n    const doNothingBecauseInsidePinnedSection = params.pinned != null;\n    if (doNothingBecauseInsidePinnedSection) {\n      return;\n    }\n    this.setAutoHeightClasses();\n    this.setupRefreshStrategy();\n    this.addThemeToDetailGrid();\n    this.createDetailGrid();\n    this.loadRowData();\n    this.addManagedEventListeners({ fullWidthRowFocused: this.onFullWidthRowFocused.bind(this) });\n  }\n  onFullWidthRowFocused(e) {\n    const params = this.params;\n    const row = { rowIndex: params.node.rowIndex, rowPinned: params.node.rowPinned };\n    const eventRow = { rowIndex: e.rowIndex, rowPinned: e.rowPinned };\n    const isSameRow = this.rowPositionUtils.sameRow(row, eventRow);\n    if (!isSameRow) {\n      return;\n    }\n    this.focusService.focusInto(this.comp.getGui(), e.fromBelow);\n  }\n  setAutoHeightClasses() {\n    const autoHeight = this.gos.get(\"detailRowAutoHeight\");\n    const parentClass = autoHeight ? \"ag-details-row-auto-height\" : \"ag-details-row-fixed-height\";\n    const detailClass = autoHeight ? \"ag-details-grid-auto-height\" : \"ag-details-grid-fixed-height\";\n    this.comp.addOrRemoveCssClass(parentClass, true);\n    this.comp.addOrRemoveDetailGridCssClass(detailClass, true);\n  }\n  setupRefreshStrategy() {\n    const providedStrategy = this.params.refreshStrategy;\n    const validSelection = providedStrategy == \"everything\" || providedStrategy == \"nothing\" || providedStrategy == \"rows\";\n    if (validSelection) {\n      this.refreshStrategy = providedStrategy;\n      return;\n    }\n    if (providedStrategy != null) {\n      _warnOnce(\n        \"invalid cellRendererParams.refreshStrategy = '\" + providedStrategy + \"' supplied, defaulting to refreshStrategy = 'rows'.\"\n      );\n    }\n    this.refreshStrategy = \"rows\";\n  }\n  addThemeToDetailGrid() {\n    for (const themeClass of this.environment.getThemeClasses()) {\n      this.comp.addOrRemoveDetailGridCssClass(themeClass, true);\n    }\n  }\n  createDetailGrid() {\n    if (_missing(this.params.detailGridOptions)) {\n      _warnOnce(\n        \"could not find detail grid options for master detail, please set gridOptions.detailCellRendererParams.detailGridOptions\"\n      );\n      return;\n    }\n    const autoHeight = this.gos.get(\"detailRowAutoHeight\");\n    const gridOptions = { ...this.params.detailGridOptions };\n    if (autoHeight) {\n      gridOptions.domLayout = \"autoHeight\";\n    }\n    this.comp.setDetailGrid(gridOptions);\n  }\n  registerDetailWithMaster(api) {\n    const rowId = this.params.node.id;\n    const masterGridApi = this.params.api;\n    const gridInfo = {\n      id: rowId,\n      api\n    };\n    const rowNode = this.params.node;\n    if (masterGridApi.isDestroyed()) {\n      return;\n    }\n    masterGridApi.addDetailGridInfo(rowId, gridInfo);\n    rowNode.detailGridInfo = gridInfo;\n    this.addDestroyFunc(() => {\n      if (rowNode.detailGridInfo !== gridInfo) {\n        return;\n      }\n      if (!masterGridApi.isDestroyed()) {\n        masterGridApi.removeDetailGridInfo(rowId);\n      }\n      rowNode.detailGridInfo = null;\n    });\n  }\n  loadRowData() {\n    this.loadRowDataVersion++;\n    const versionThisCall = this.loadRowDataVersion;\n    if (this.params.detailGridOptions?.rowModelType === \"serverSide\") {\n      const node = this.params.node;\n      node.detailGridInfo?.api?.refreshServerSide({ purge: true });\n      return;\n    }\n    const userFunc = this.params.getDetailRowData;\n    if (!userFunc) {\n      _warnOnce(\n        \"could not find getDetailRowData for master / detail, please set gridOptions.detailCellRendererParams.getDetailRowData\"\n      );\n      return;\n    }\n    const successCallback = (rowData) => {\n      const mostRecentCall = this.loadRowDataVersion === versionThisCall;\n      if (mostRecentCall) {\n        this.comp.setRowData(rowData);\n      }\n    };\n    const funcParams = {\n      node: this.params.node,\n      // we take data from node, rather than params.data\n      // as the data could have been updated with new instance\n      data: this.params.node.data,\n      successCallback,\n      context: this.gos.getGridCommonParams().context\n    };\n    userFunc(funcParams);\n  }\n  refresh() {\n    const GET_GRID_TO_REFRESH = false;\n    const GET_GRID_TO_DO_NOTHING = true;\n    switch (this.refreshStrategy) {\n      case \"nothing\":\n        return GET_GRID_TO_DO_NOTHING;\n      case \"everything\":\n        return GET_GRID_TO_REFRESH;\n    }\n    this.loadRowData();\n    return GET_GRID_TO_DO_NOTHING;\n  }\n};\n\n// enterprise-modules/master-detail/src/masterDetail/detailCellRenderer.ts\nvar DetailCellRenderer = class extends Component {\n  constructor() {\n    super(...arguments);\n    this.eDetailGrid = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.context = beans.context;\n  }\n  init(params) {\n    this.params = params;\n    this.selectAndSetTemplate();\n    const compProxy = {\n      addOrRemoveCssClass: (cssClassName, on) => this.addOrRemoveCssClass(cssClassName, on),\n      addOrRemoveDetailGridCssClass: (cssClassName, on) => this.eDetailGrid.classList.toggle(cssClassName, on),\n      setDetailGrid: (gridOptions) => this.setDetailGrid(gridOptions),\n      setRowData: (rowData) => this.setRowData(rowData),\n      getGui: () => this.eDetailGrid\n    };\n    this.ctrl = this.createManagedBean(new DetailCellRendererCtrl());\n    this.ctrl.init(compProxy, params);\n  }\n  refresh() {\n    return this.ctrl && this.ctrl.refresh();\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n  destroy() {\n    super.destroy();\n  }\n  selectAndSetTemplate() {\n    if (this.params.pinned) {\n      this.setTemplate(\n        /* html*/\n        `<div class=\"ag-details-row\"></div>`\n      );\n      return;\n    }\n    const setDefaultTemplate = () => {\n      this.setTemplate(\n        /* html */\n        `<div class=\"ag-details-row\" role=\"gridcell\">\n                <div data-ref=\"eDetailGrid\" class=\"ag-details-grid\" role=\"presentation\"></div>\n            </div>`\n      );\n    };\n    if (_missing2(this.params.template)) {\n      setDefaultTemplate();\n    } else {\n      if (typeof this.params.template === \"string\") {\n        this.setTemplate(this.params.template, []);\n      } else if (typeof this.params.template === \"function\") {\n        const templateFunc = this.params.template;\n        const template = templateFunc(this.params);\n        this.setTemplate(template, []);\n      } else {\n        _warnOnce2(\"detailCellRendererParams.template should be function or string\");\n        setDefaultTemplate();\n      }\n    }\n    if (this.eDetailGrid == null) {\n      _warnOnce2(\n        'Reference to eDetailGrid was missing from the details template. Please add data-ref=\"eDetailGrid\" to the template.'\n      );\n    }\n  }\n  setDetailGrid(gridOptions) {\n    if (!this.eDetailGrid) {\n      return;\n    }\n    const agGridReact = this.context.getBean(\"agGridReact\");\n    const agGridReactCloned = agGridReact ? _cloneObject(agGridReact) : void 0;\n    const frameworkComponentWrapper = this.context.getBean(\"frameworkComponentWrapper\");\n    const frameworkOverrides = this.getFrameworkOverrides();\n    const api = createGrid(this.eDetailGrid, gridOptions, {\n      frameworkOverrides,\n      providedBeanInstances: {\n        agGridReact: agGridReactCloned,\n        frameworkComponentWrapper\n      },\n      modules: ModuleRegistry.__getGridRegisteredModules(this.params.api.getGridId())\n    });\n    this.detailApi = api;\n    this.ctrl.registerDetailWithMaster(api);\n    this.addDestroyFunc(() => {\n      api?.destroy();\n    });\n  }\n  setRowData(rowData) {\n    this.detailApi && this.detailApi.setGridOption(\"rowData\", rowData);\n  }\n};\n\n// enterprise-modules/master-detail/src/masterDetail/detailGridApiService.ts\nimport { BeanStub as BeanStub2, _exists, _iterateObject } from \"@ag-grid-community/core\";\nvar DetailGridApiService = class extends BeanStub2 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"detailGridApiService\";\n    this.detailGridInfoMap = {};\n  }\n  addDetailGridInfo(id, gridInfo) {\n    this.detailGridInfoMap[id] = gridInfo;\n  }\n  removeDetailGridInfo(id) {\n    delete this.detailGridInfoMap[id];\n  }\n  getDetailGridInfo(id) {\n    return this.detailGridInfoMap[id];\n  }\n  forEachDetailGridInfo(callback) {\n    let index = 0;\n    _iterateObject(this.detailGridInfoMap, (id, gridInfo) => {\n      if (_exists(gridInfo)) {\n        callback(gridInfo, index);\n        index++;\n      }\n    });\n  }\n  destroy() {\n    this.detailGridInfoMap = {};\n    super.destroy();\n  }\n};\n\n// enterprise-modules/master-detail/src/masterDetail/masterDetailApi.ts\nfunction addDetailGridInfo(beans, id, gridInfo) {\n  beans.detailGridApiService?.addDetailGridInfo(id, gridInfo);\n}\nfunction removeDetailGridInfo(beans, id) {\n  beans.detailGridApiService?.removeDetailGridInfo(id);\n}\nfunction getDetailGridInfo(beans, id) {\n  return beans.detailGridApiService?.getDetailGridInfo(id);\n}\nfunction forEachDetailGridInfo(beans, callback) {\n  beans.detailGridApiService?.forEachDetailGridInfo(callback);\n}\n\n// enterprise-modules/master-detail/src/version.ts\nvar VERSION = \"32.0.0\";\n\n// enterprise-modules/master-detail/src/masterDetailModule.ts\nvar MasterDetailCoreModule = {\n  version: VERSION,\n  moduleName: `${ModuleNames.MasterDetailModule}-core`,\n  userComponents: [\n    {\n      name: \"agGroupRowRenderer\",\n      classImp: GroupCellRenderer\n    },\n    {\n      name: \"agGroupCellRenderer\",\n      classImp: GroupCellRenderer\n    },\n    { name: \"agDetailCellRenderer\", classImp: DetailCellRenderer }\n  ],\n  controllers: [\n    { name: \"detailCellRenderer\", classImp: DetailCellRendererCtrl },\n    { name: \"groupCellRendererCtrl\", classImp: GroupCellRendererCtrl }\n  ],\n  dependantModules: [EnterpriseCoreModule]\n};\nvar MasterDetailApiModule = {\n  version: VERSION,\n  moduleName: `${ModuleNames.MasterDetailModule}-api`,\n  beans: [DetailGridApiService],\n  apiFunctions: {\n    addDetailGridInfo,\n    removeDetailGridInfo,\n    getDetailGridInfo,\n    forEachDetailGridInfo\n  },\n  dependantModules: [MasterDetailCoreModule]\n};\nvar MasterDetailModule = {\n  version: VERSION,\n  moduleName: ModuleNames.MasterDetailModule,\n  dependantModules: [MasterDetailCoreModule, MasterDetailApiModule]\n};\nexport {\n  MasterDetailModule\n};\n"],
  "mappings": "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",
  "names": ["ModuleNames", "EnterpriseCoreModule", "GroupCellRenderer", "GroupCellRendererCtrl", "Component", "ModuleRegistry", "RefPlaceholder", "_cloneObject", "_missing2", "_warnOnce2", "createGrid", "BeanStub", "_missing", "_warnOnce", "DetailCellRendererCtrl", "beans", "comp", "params", "row", "eventRow", "autoHeight", "parentClass", "detailClass", "providedStrategy", "themeClass", "gridOptions", "api", "rowId", "masterGridApi", "gridInfo", "rowNode", "versionThisCall", "userFunc", "successCallback", "rowData", "funcParams", "DetailCellRenderer", "compProxy", "cssClassName", "on", "setDefaultTemplate", "templateFunc", "template", "agGridReact", "agGridReactCloned", "frameworkComponentWrapper", "frameworkOverrides", "BeanStub2", "_exists", "_iterateObject", "DetailGridApiService", "id", "callback", "index", "addDetailGridInfo", "removeDetailGridInfo", "getDetailGridInfo", "forEachDetailGridInfo", "VERSION", "MasterDetailCoreModule", "MasterDetailApiModule", "MasterDetailModule"]
}
