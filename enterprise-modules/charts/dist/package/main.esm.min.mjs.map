{
  "version": 3,
  "sources": ["<stdin>"],
  "sourcesContent": ["// enterprise-modules/charts/src/main.ts\nimport { AgCharts as AgCharts2, time } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/gridChartsModule.ts\nimport { ModuleNames as ModuleNames2 } from \"@ag-grid-community/core\";\nimport { AgMenuItemRenderer, EnterpriseCoreModule } from \"@ag-grid-enterprise/core\";\nimport { RangeSelectionModule } from \"@ag-grid-enterprise/range-selection\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/advancedSettingsMenuFactory.ts\nimport { BeanStub as BeanStub2, TabGuardComp } from \"@ag-grid-community/core\";\nimport { AgDialog as AgDialog2 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/advancedSettingsPanel.ts\nimport { Component as Component6 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/utils/seriesTypeMapper.ts\nimport { ChartMappings } from \"@ag-grid-community/core\";\nvar SERIES_TYPES = {\n  area: {\n    isCartesian: true,\n    canInvert: true\n  },\n  bar: {\n    isCartesian: true,\n    canInvert: true\n  },\n  histogram: {\n    isCartesian: true\n  },\n  line: {\n    isCartesian: true,\n    canInvert: true\n  },\n  pie: {\n    isPie: true\n  },\n  donut: {\n    isPie: true,\n    canInvert: true\n  },\n  scatter: {\n    isCartesian: true\n  },\n  bubble: {\n    isCartesian: true\n  },\n  \"radial-column\": {\n    isPolar: true,\n    isEnterprise: true,\n    isRadial: true,\n    canInvert: true\n  },\n  \"radial-bar\": {\n    isPolar: true,\n    isEnterprise: true,\n    isRadial: true,\n    canInvert: true\n  },\n  \"radar-line\": {\n    isPolar: true,\n    isEnterprise: true,\n    canInvert: true\n  },\n  \"radar-area\": {\n    isPolar: true,\n    isEnterprise: true,\n    canInvert: true\n  },\n  nightingale: {\n    isPolar: true,\n    isEnterprise: true,\n    canInvert: true\n  },\n  \"range-bar\": {\n    isCartesian: true,\n    isEnterprise: true,\n    canSwitchDirection: true\n  },\n  \"range-area\": {\n    isCartesian: true,\n    isEnterprise: true\n  },\n  \"box-plot\": {\n    isCartesian: true,\n    isEnterprise: true,\n    canSwitchDirection: true\n  },\n  treemap: {\n    isEnterprise: true,\n    isHierarchical: true\n  },\n  sunburst: {\n    isEnterprise: true,\n    isHierarchical: true\n  },\n  heatmap: {\n    isCartesian: true,\n    isEnterprise: true\n  },\n  waterfall: {\n    isCartesian: true,\n    isEnterprise: true,\n    canSwitchDirection: true\n  }\n};\nfunction isSeriesType(seriesType) {\n  return !!SERIES_TYPES[seriesType];\n}\nfunction isComboChart(chartType) {\n  return ChartMappings.COMBO_CHART_TYPES.includes(chartType);\n}\nfunction doesSeriesHaveProperty(seriesType, prop) {\n  return !!SERIES_TYPES[seriesType]?.[prop];\n}\nfunction isEnterpriseChartType(chartType) {\n  return doesSeriesHaveProperty(getSeriesType(chartType), \"isEnterprise\");\n}\nvar stackedChartTypes = /* @__PURE__ */ new Set([\"stackedColumn\", \"normalizedColumn\", \"stackedBar\", \"normalizedBar\"]);\nfunction isStacked(chartType) {\n  return stackedChartTypes.has(chartType);\n}\nfunction isCartesian(seriesType) {\n  return doesSeriesHaveProperty(seriesType, \"isCartesian\");\n}\nfunction isPolar(seriesType) {\n  return doesSeriesHaveProperty(seriesType, \"isPolar\");\n}\nfunction isRadial(seriesType) {\n  return doesSeriesHaveProperty(seriesType, \"isRadial\");\n}\nfunction isHierarchical(seriesType) {\n  return doesSeriesHaveProperty(seriesType, \"isHierarchical\");\n}\nfunction getCanonicalChartType(chartType) {\n  return chartType === \"doughnut\" ? \"donut\" : chartType;\n}\nfunction getSeriesTypeIfExists(chartType) {\n  return ChartMappings.CHART_TYPE_TO_SERIES_TYPE[chartType];\n}\nfunction getSeriesType(chartType) {\n  return getSeriesTypeIfExists(chartType) ?? \"line\";\n}\nfunction isPieChartSeries(seriesType) {\n  return doesSeriesHaveProperty(seriesType, \"isPie\");\n}\nfunction canOnlyHaveSingleSeries(chartType) {\n  return chartType === \"pie\" || chartType === \"waterfall\" || chartType === \"histogram\";\n}\nfunction getMaxNumCategories(chartType) {\n  return isHierarchical(getSeriesType(chartType)) ? void 0 : 1;\n}\nfunction getMaxNumSeries(chartType) {\n  if (isHierarchical(getSeriesType(chartType))) {\n    return 2;\n  } else if (canOnlyHaveSingleSeries(chartType)) {\n    return 1;\n  } else {\n    return void 0;\n  }\n}\nfunction supportsInvertedCategorySeries(chartType) {\n  return !isComboChart(chartType) && doesSeriesHaveProperty(getSeriesType(chartType), \"canInvert\");\n}\nfunction canSwitchDirection(chartType) {\n  return doesSeriesHaveProperty(getSeriesType(chartType), \"canSwitchDirection\");\n}\nfunction getFullChartNameTranslationKey(chartType) {\n  switch (chartType) {\n    case \"groupedColumn\":\n    case \"stackedColumn\":\n    case \"normalizedColumn\":\n    case \"groupedBar\":\n    case \"stackedBar\":\n    case \"normalizedBar\":\n    case \"stackedArea\":\n    case \"normalizedArea\":\n      return `${chartType}Full`;\n    case \"doughnut\":\n      return \"donut\";\n    case \"areaColumnCombo\":\n      return \"AreaColumnCombo\";\n    default:\n      return chartType;\n  }\n}\n\n// enterprise-modules/charts/src/charts/chartComp/menu/chartPanelFeature.ts\nimport { BeanStub, _removeFromParent } from \"@ag-grid-community/core\";\nvar ChartPanelFeature = class extends BeanStub {\n  constructor(chartController, eGui, cssClass, createPanels) {\n    super();\n    this.chartController = chartController;\n    this.eGui = eGui;\n    this.cssClass = cssClass;\n    this.createPanels = createPanels;\n    this.panels = [];\n  }\n  postConstruct() {\n    this.addManagedListeners(this.chartController, {\n      chartUpdated: () => this.refreshPanels(true),\n      chartApiUpdate: () => this.refreshPanels(false)\n    });\n  }\n  addComponent(component) {\n    this.createBean(component);\n    this.panels.push(component);\n    component.addCssClass(this.cssClass);\n    this.eGui.appendChild(component.getGui());\n  }\n  refreshPanels(reuse) {\n    const chartType = this.chartController.getChartType();\n    const isGrouping = this.chartController.isGrouping();\n    const seriesType = getSeriesType(chartType);\n    if (reuse && chartType === this.chartType && isGrouping === this.isGrouping) {\n      return;\n    }\n    this.destroyPanels();\n    this.createPanels(chartType, seriesType);\n    this.chartType = chartType;\n    this.isGrouping = isGrouping;\n  }\n  destroyPanels() {\n    this.panels.forEach((panel) => {\n      _removeFromParent(panel.getGui());\n      this.destroyBean(panel);\n    });\n    this.panels = [];\n  }\n  destroy() {\n    this.destroyPanels();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/interactivity/animationPanel.ts\nimport { AgInputNumberFieldSelector, Component } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector } from \"@ag-grid-enterprise/core\";\nvar AnimationPanel = class extends Component {\n  constructor(chartMenuParamsFactory) {\n    super();\n    this.chartMenuParamsFactory = chartMenuParamsFactory;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const animationGroupParams = this.chartMenuParamsFactory.addEnableParams(\n      \"animation.enabled\",\n      {\n        cssIdentifier: \"charts-advanced-settings-top-level\",\n        direction: \"vertical\",\n        suppressOpenCloseIcons: true,\n        title: this.chartTranslationService.translate(\"animation\"),\n        suppressEnabledCheckbox: true,\n        useToggle: true\n      }\n    );\n    const animationHeightInputParams = this.chartMenuParamsFactory.getDefaultNumberInputParams(\n      \"animation.duration\",\n      \"durationMillis\",\n      {\n        min: 0\n      }\n    );\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"animationGroup\">\n                <ag-input-number-field data-ref=\"animationHeightInput\"></ag-input>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector, AgInputNumberFieldSelector],\n      {\n        animationGroup: animationGroupParams,\n        animationHeightInput: animationHeightInputParams\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/interactivity/crosshairPanel.ts\nimport { AgCheckboxSelector, Component as Component3 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector2 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/widgets/agColorPicker.ts\nimport { AgPickerField } from \"@ag-grid-community/core\";\nimport { AgDialog } from \"@ag-grid-enterprise/core\";\nimport { _Util as _Util3 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/widgets/agColorPanel.ts\nimport { Component as Component2, KeyCode, RefPlaceholder as RefPlaceholder2, _exists, _setDisplayed } from \"@ag-grid-community/core\";\nimport { _Util as _Util2 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/widgets/agColorInput.ts\nimport { AgInputTextField, RefPlaceholder } from \"@ag-grid-community/core\";\nimport { _Util } from \"ag-charts-community\";\nvar AgColorInput = class extends AgInputTextField {\n  constructor() {\n    super({\n      template: (\n        /* html */\n        `\n            <div role=\"presentation\" class=\"ag-color-input\">\n                <div data-ref=\"eLabel\" class=\"ag-input-field-label\"></div>\n                <div data-ref=\"eWrapper\" class=\"ag-wrapper ag-input-wrapper\" role=\"presentation\">\n                    <input data-ref=\"eInput\" class=\"ag-input-field-input\">\n                    <div data-ref=\"eColor\" class=\"ag-color-input-color\"></div>\n                </div>\n            </div>`\n      )\n    });\n    this.eColor = RefPlaceholder;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  setColor(color) {\n    const rgbaColor = color.toRgbaString();\n    this.setValue(_Util.Color.fromString(rgbaColor).toHexString().toUpperCase(), true);\n    this.eColor.style.backgroundColor = rgbaColor;\n  }\n  setValue(value, silent) {\n    const isValid = _Util.Color.validColorString(value ?? \"\");\n    this.eInput.setCustomValidity(isValid ? \"\" : this.chartTranslationService.translate(\"invalidColor\"));\n    super.setValue(value, silent);\n    if (isValid && !silent) {\n      this.dispatchLocalEvent({ type: \"colorChanged\" });\n    }\n    return this;\n  }\n  onColorChanged(callback) {\n    this.addManagedListeners(this, { colorChanged: () => callback(_Util.Color.fromString(this.value)) });\n  }\n};\nvar AgColorInputSelector = {\n  selector: \"AG-COLOR-INPUT\",\n  component: AgColorInput\n};\n\n// enterprise-modules/charts/src/widgets/agColorPanel.ts\nvar _AgColorPanel = class _AgColorPanel extends Component2 {\n  constructor(config) {\n    super(\n      /* html */\n      `<div class=\"ag-color-panel\" tabindex=\"-1\">\n            <div data-ref=\"spectrumColor\" class=\"ag-spectrum-color\">\n                <div class=\"ag-spectrum-sat ag-spectrum-fill\">\n                    <div data-ref=\"spectrumVal\" class=\"ag-spectrum-val ag-spectrum-fill\">\n                        <div data-ref=\"spectrumDragger\" class=\"ag-spectrum-dragger\"></div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"ag-spectrum-tools\">\n                <div data-ref=\"spectrumHue\" class=\"ag-spectrum-hue ag-spectrum-tool\">\n                    <div class=\"ag-spectrum-hue-background\"></div>\n                    <div data-ref=\"spectrumHueSlider\" class=\"ag-spectrum-slider\"></div>\n                </div>\n                <div data-ref=\"spectrumAlpha\" class=\"ag-spectrum-alpha ag-spectrum-tool\">\n                    <div class=\"ag-spectrum-alpha-background\"></div>\n                    <div data-ref=\"spectrumAlphaSlider\" class=\"ag-spectrum-slider\"></div>\n                </div>\n                <ag-color-input data-ref=\"colorInput\"></ag-color-input>\n                <div data-ref=\"recentColors\" class=\"ag-recent-colors\"></div>\n            </div>\n        </div>`,\n      [AgColorInputSelector]\n    );\n    this.H = 1;\n    // in the [0, 1] range\n    this.S = 1;\n    // in the [0, 1] range\n    this.B = 1;\n    // in the [0, 1] range\n    this.A = 1;\n    this.isSpectrumDragging = false;\n    this.isSpectrumHueDragging = false;\n    this.isSpectrumAlphaDragging = false;\n    this.colorChanged = false;\n    this.spectrumColor = RefPlaceholder2;\n    this.spectrumVal = RefPlaceholder2;\n    this.spectrumDragger = RefPlaceholder2;\n    this.spectrumHue = RefPlaceholder2;\n    this.spectrumHueSlider = RefPlaceholder2;\n    this.spectrumAlpha = RefPlaceholder2;\n    this.spectrumAlphaSlider = RefPlaceholder2;\n    this.colorInput = RefPlaceholder2;\n    this.recentColors = RefPlaceholder2;\n    this.picker = config.picker;\n  }\n  postConstruct() {\n    this.initTabIndex();\n    this.initRecentColors();\n    this.addGuiEventListener(\"focus\", () => this.spectrumColor.focus());\n    this.addGuiEventListener(\"keydown\", (e) => {\n      if (e.key === KeyCode.ENTER && !e.defaultPrevented) {\n        this.destroy();\n      }\n    });\n    this.addManagedListeners(this.spectrumColor, { keydown: (e) => this.moveDragger(e) });\n    this.addManagedListeners(this.spectrumAlphaSlider, { keydown: (e) => this.moveAlphaSlider(e) });\n    this.addManagedListeners(this.spectrumHueSlider, { keydown: (e) => this.moveHueSlider(e) });\n    this.addManagedListeners(this.spectrumVal, { mousedown: this.onSpectrumDraggerDown.bind(this) });\n    this.addManagedListeners(this.spectrumHue, { mousedown: this.onSpectrumHueDown.bind(this) });\n    this.addManagedListeners(this.spectrumAlpha, { mousedown: this.onSpectrumAlphaDown.bind(this) });\n    this.addGuiEventListener(\"mousemove\", (e) => {\n      this.onSpectrumDraggerMove(e);\n      this.onSpectrumHueMove(e);\n      this.onSpectrumAlphaMove(e);\n    });\n    this.addManagedListeners(document, { mouseup: this.onMouseUp.bind(this) });\n    this.colorInput.onColorChanged(this.setColor.bind(this));\n    this.addManagedListeners(this.recentColors, {\n      click: this.onRecentColorClick.bind(this),\n      keydown: (e) => {\n        if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\n          e.preventDefault();\n          this.onRecentColorClick(e);\n        }\n      }\n    });\n  }\n  initTabIndex() {\n    const tabIndex = this.tabIndex = this.gos.get(\"tabIndex\").toString();\n    this.spectrumColor.setAttribute(\"tabindex\", tabIndex);\n    this.spectrumHueSlider.setAttribute(\"tabindex\", tabIndex);\n    this.spectrumAlphaSlider.setAttribute(\"tabindex\", tabIndex);\n  }\n  refreshSpectrumRect() {\n    return this.spectrumValRect = this.spectrumVal.getBoundingClientRect();\n  }\n  refreshHueRect() {\n    return this.spectrumHueRect = this.spectrumHue.getBoundingClientRect();\n  }\n  refreshAlphaRect() {\n    return this.spectrumAlphaRect = this.spectrumAlpha.getBoundingClientRect();\n  }\n  onSpectrumDraggerDown(e) {\n    this.refreshSpectrumRect();\n    this.isSpectrumDragging = true;\n    this.moveDragger(e);\n  }\n  onSpectrumDraggerMove(e) {\n    if (this.isSpectrumDragging) {\n      this.moveDragger(e);\n    }\n  }\n  onSpectrumHueDown(e) {\n    this.refreshHueRect();\n    this.isSpectrumHueDragging = true;\n    this.moveHueSlider(e);\n  }\n  onSpectrumHueMove(e) {\n    if (this.isSpectrumHueDragging) {\n      this.moveHueSlider(e);\n    }\n  }\n  onSpectrumAlphaDown(e) {\n    this.refreshAlphaRect();\n    this.isSpectrumAlphaDragging = true;\n    this.moveAlphaSlider(e);\n  }\n  onSpectrumAlphaMove(e) {\n    if (this.isSpectrumAlphaDragging) {\n      this.moveAlphaSlider(e);\n    }\n  }\n  onMouseUp() {\n    this.isSpectrumDragging = false;\n    this.isSpectrumHueDragging = false;\n    this.isSpectrumAlphaDragging = false;\n  }\n  moveDragger(e) {\n    const valRect = this.spectrumValRect;\n    if (!valRect) {\n      return;\n    }\n    let x;\n    let y;\n    if (e instanceof MouseEvent) {\n      x = e.clientX - valRect.left;\n      y = e.clientY - valRect.top;\n    } else {\n      const isLeft = e.key === KeyCode.LEFT;\n      const isRight = e.key === KeyCode.RIGHT;\n      const isUp = e.key === KeyCode.UP;\n      const isDown = e.key === KeyCode.DOWN;\n      const isVertical = isUp || isDown;\n      const isHorizontal = isLeft || isRight;\n      if (!isVertical && !isHorizontal) {\n        return;\n      }\n      e.preventDefault();\n      const { x: currentX, y: currentY } = this.getSpectrumValue();\n      x = currentX + (isHorizontal ? isLeft ? -5 : 5 : 0);\n      y = currentY + (isVertical ? isUp ? -5 : 5 : 0);\n    }\n    x = Math.max(x, 0);\n    x = Math.min(x, valRect.width);\n    y = Math.max(y, 0);\n    y = Math.min(y, valRect.height);\n    this.setSpectrumValue(x / valRect.width, 1 - y / valRect.height);\n  }\n  moveHueSlider(e) {\n    const rect = this.spectrumHueRect;\n    if (!rect) {\n      return;\n    }\n    const x = this.moveSlider(this.spectrumHueSlider, e);\n    if (x == null) {\n      return;\n    }\n    this.H = 1 - x / rect.width;\n    this.update();\n  }\n  moveAlphaSlider(e) {\n    const rect = this.spectrumAlphaRect;\n    if (!rect) {\n      return;\n    }\n    const x = this.moveSlider(this.spectrumAlphaSlider, e);\n    if (x == null) {\n      return;\n    }\n    this.A = x / rect.width;\n    this.update();\n  }\n  moveSlider(slider, e) {\n    const sliderRect = slider.getBoundingClientRect();\n    const parentRect = slider.parentElement?.getBoundingClientRect();\n    if (!slider || !parentRect) {\n      return null;\n    }\n    const offset = sliderRect.width / 2;\n    let x;\n    if (e instanceof MouseEvent) {\n      x = Math.floor(e.clientX - parentRect.left);\n    } else {\n      const isLeft = e.key === KeyCode.LEFT;\n      const isRight = e.key === KeyCode.RIGHT;\n      if (!isLeft && !isRight) {\n        return null;\n      }\n      e.preventDefault();\n      const diff = isLeft ? -5 : 5;\n      x = parseFloat(slider.style.left) + offset + diff;\n    }\n    x = Math.max(x, 0);\n    x = Math.min(x, parentRect.width);\n    slider.style.left = x - offset + \"px\";\n    return x;\n  }\n  update(suppressColorInputUpdate) {\n    const hue = this.H * 360;\n    const color = _Util2.Color.fromHSB(hue, this.S, this.B, this.A);\n    const rgbaColor = color.toRgbaString();\n    const colorWithoutAlpha = _Util2.Color.fromHSB(hue, this.S, this.B);\n    const rgbaColorWithoutAlpha = colorWithoutAlpha.toRgbaString();\n    const spectrumColor = _Util2.Color.fromHSB(hue, 1, 1);\n    const spectrumRgbaColor = spectrumColor.toRgbaString();\n    const colorPicker = this.picker;\n    const existingColor = _Util2.Color.fromString(colorPicker.getValue());\n    if (existingColor.toRgbaString() !== rgbaColor) {\n      this.colorChanged = true;\n    }\n    colorPicker.setValue(rgbaColor);\n    this.spectrumColor.style.backgroundColor = spectrumRgbaColor;\n    this.spectrumDragger.style.backgroundColor = rgbaColorWithoutAlpha;\n    this.spectrumHueSlider.style.backgroundColor = spectrumRgbaColor;\n    this.spectrumAlpha.style.setProperty(\n      \"--ag-internal-spectrum-alpha-color-from\",\n      _Util2.Color.fromHSB(hue, this.S, this.B, 0).toRgbaString()\n    );\n    this.spectrumAlpha.style.setProperty(\"--ag-internal-spectrum-alpha-color-to\", rgbaColorWithoutAlpha);\n    this.spectrumAlpha.style.setProperty(\"--ag-internal-spectrum-alpha-color\", rgbaColor);\n    if (!suppressColorInputUpdate) {\n      this.colorInput.setColor(color);\n    }\n  }\n  /**\n   * @param saturation In the [0, 1] interval.\n   * @param brightness In the [0, 1] interval.\n   */\n  setSpectrumValue(saturation, brightness, suppressColorInputUpdate) {\n    const valRect = this.spectrumValRect || this.refreshSpectrumRect();\n    if (valRect == null) {\n      return;\n    }\n    const dragger = this.spectrumDragger;\n    const draggerRect = dragger.getBoundingClientRect();\n    saturation = Math.max(0, saturation);\n    saturation = Math.min(1, saturation);\n    brightness = Math.max(0, brightness);\n    brightness = Math.min(1, brightness);\n    this.S = saturation;\n    this.B = brightness;\n    dragger.style.left = saturation * valRect.width - draggerRect.width / 2 + \"px\";\n    dragger.style.top = (1 - brightness) * valRect.height - draggerRect.height / 2 + \"px\";\n    this.update(suppressColorInputUpdate);\n  }\n  getSpectrumValue() {\n    const dragger = this.spectrumDragger;\n    const draggerRect = dragger.getBoundingClientRect();\n    const x = parseFloat(dragger.style.left) + draggerRect.width / 2;\n    const y = parseFloat(dragger.style.top) + draggerRect.height / 2;\n    return { x, y };\n  }\n  initRecentColors() {\n    const recentColors = _AgColorPanel.recentColors;\n    const innerHtml = recentColors.map((color, index) => {\n      return (\n        /* html */\n        `<div class=\"ag-recent-color\" id=${index} style=\"background-color: ${color}; width: 15px; height: 15px;\" recent-color=\"${color}\" tabIndex=\"${this.tabIndex}\"></div>`\n      );\n    });\n    this.recentColors.innerHTML = innerHtml.join(\"\");\n    _setDisplayed(this.recentColors, !!recentColors.length);\n  }\n  setValue(val) {\n    const color = _Util2.Color.fromString(val);\n    this.setColor(color, true);\n  }\n  setColor(color, updateColorInput) {\n    const [h, s, b] = color.toHSB();\n    this.H = (isNaN(h) ? 0 : h) / 360;\n    this.A = color.a;\n    const spectrumHueRect = this.spectrumHueRect || this.refreshHueRect();\n    const spectrumAlphaRect = this.spectrumAlphaRect || this.refreshAlphaRect();\n    this.spectrumHueSlider.style.left = `${(this.H - 1) * -spectrumHueRect.width - this.spectrumHueSlider.getBoundingClientRect().width / 2}px`;\n    this.spectrumAlphaSlider.style.left = `${this.A * spectrumAlphaRect.width - this.spectrumAlphaSlider.getBoundingClientRect().width / 2}px`;\n    this.setSpectrumValue(s, b, !updateColorInput);\n  }\n  onRecentColorClick(e) {\n    const target = e.target;\n    if (!_exists(target.id)) {\n      return;\n    }\n    const id = parseInt(target.id, 10);\n    this.setValue(_AgColorPanel.recentColors[id]);\n    this.destroy();\n  }\n  addRecentColor() {\n    const color = _Util2.Color.fromHSB(this.H * 360, this.S, this.B, this.A);\n    const rgbaColor = color.toRgbaString();\n    let recentColors = _AgColorPanel.recentColors;\n    if (!this.colorChanged || recentColors[0] === rgbaColor) {\n      return;\n    }\n    recentColors = recentColors.filter((currentColor) => currentColor != rgbaColor);\n    recentColors = [rgbaColor].concat(recentColors);\n    if (recentColors.length > _AgColorPanel.maxRecentColors) {\n      recentColors = recentColors.slice(0, _AgColorPanel.maxRecentColors);\n    }\n    _AgColorPanel.recentColors = recentColors;\n  }\n  destroy() {\n    this.addRecentColor();\n    super.destroy();\n  }\n};\n_AgColorPanel.maxRecentColors = 8;\n_AgColorPanel.recentColors = [];\nvar AgColorPanel = _AgColorPanel;\n\n// enterprise-modules/charts/src/widgets/agColorPicker.ts\nvar AgColorPicker = class extends AgPickerField {\n  constructor(config) {\n    super({\n      pickerAriaLabelKey: \"ariaLabelColorPicker\",\n      pickerAriaLabelValue: \"Color Picker\",\n      pickerType: \"ag-list\",\n      className: \"ag-color-picker\",\n      pickerIcon: \"smallDown\",\n      ...config\n    });\n  }\n  postConstruct() {\n    const eDocument = this.gos.getDocument();\n    this.eDisplayFieldColor = eDocument.createElement(\"span\");\n    this.eDisplayFieldColor.classList.add(\"ag-color-picker-color\");\n    this.eDisplayFieldText = eDocument.createElement(\"span\");\n    this.eDisplayFieldText.classList.add(\"ag-color-picker-value\");\n    this.eDisplayField.appendChild(this.eDisplayFieldColor);\n    this.eDisplayField.appendChild(this.eDisplayFieldText);\n    super.postConstruct();\n    if (this.value) {\n      this.setValue(this.value);\n    }\n  }\n  createPickerComponent() {\n    const eGuiRect = this.eWrapper.getBoundingClientRect();\n    const parentRect = this.popupService.getParentRect();\n    const colorDialog = this.createBean(\n      new AgDialog({\n        closable: false,\n        modal: true,\n        hideTitleBar: true,\n        minWidth: 190,\n        width: 190,\n        height: 250,\n        x: eGuiRect.right - parentRect.left - 190,\n        y: eGuiRect.top - parentRect.top - 250 - (this.config.pickerGap ?? 0)\n      })\n    );\n    return colorDialog;\n  }\n  renderAndPositionPicker() {\n    const pickerComponent = this.pickerComponent;\n    const colorPanel = this.createBean(new AgColorPanel({ picker: this }));\n    pickerComponent.addCssClass(\"ag-color-dialog\");\n    colorPanel.addDestroyFunc(() => {\n      if (pickerComponent.isAlive()) {\n        this.destroyBean(pickerComponent);\n      }\n    });\n    pickerComponent.setParentComponent(this);\n    pickerComponent.setBodyComponent(colorPanel);\n    colorPanel.setValue(this.getValue());\n    colorPanel.getGui().focus();\n    pickerComponent.addDestroyFunc(() => {\n      if (!this.isDestroyingPicker) {\n        this.beforeHidePicker();\n        this.isDestroyingPicker = true;\n        if (colorPanel.isAlive()) {\n          this.destroyBean(colorPanel);\n        }\n        if (this.isAlive()) {\n          this.getFocusableElement().focus();\n        }\n      } else {\n        this.isDestroyingPicker = false;\n      }\n    });\n    return () => this.pickerComponent?.close();\n  }\n  setValue(color) {\n    if (this.value === color) {\n      return this;\n    }\n    this.eDisplayFieldColor.style.backgroundColor = color;\n    this.eDisplayFieldText.textContent = _Util3.Color.fromString(color).toHexString().toUpperCase();\n    return super.setValue(color);\n  }\n  getValue() {\n    return this.value;\n  }\n};\nvar AgColorPickerSelector = {\n  selector: \"AG-COLOR-PICKER\",\n  component: AgColorPicker\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/interactivity/crosshairPanel.ts\nvar CrosshairPanel = class extends Component3 {\n  constructor(chartMenuParamsFactory) {\n    super();\n    this.chartMenuParamsFactory = chartMenuParamsFactory;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const crosshairGroupParams = this.chartMenuParamsFactory.addEnableParams(\n      \"crosshair.enabled\",\n      {\n        cssIdentifier: \"charts-advanced-settings-top-level\",\n        direction: \"vertical\",\n        suppressOpenCloseIcons: true,\n        title: this.chartTranslationService.translate(\"crosshair\"),\n        suppressEnabledCheckbox: true,\n        useToggle: true\n      }\n    );\n    const crosshairLabelCheckboxParams = this.chartMenuParamsFactory.getDefaultCheckboxParams(\n      \"crosshair.label.enabled\",\n      \"crosshairLabel\"\n    );\n    const crosshairSnapCheckboxParams = this.chartMenuParamsFactory.getDefaultCheckboxParams(\n      \"crosshair.snap\",\n      \"crosshairSnap\"\n    );\n    const crosshairStrokeColorPickerParams = this.chartMenuParamsFactory.getDefaultColorPickerParams(\n      \"crosshair.stroke\",\n      \"color\"\n    );\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"crosshairGroup\">\n                <ag-checkbox data-ref=\"crosshairLabelCheckbox\"></ag-checkbox>\n                <ag-checkbox data-ref=\"crosshairSnapCheckbox\"></ag-checkbox>\n                <ag-color-picker data-ref=\"crosshairStrokeColorPicker\"></ag-color-picker>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector2, AgCheckboxSelector, AgColorPickerSelector],\n      {\n        crosshairGroup: crosshairGroupParams,\n        crosshairLabelCheckbox: crosshairLabelCheckboxParams,\n        crosshairSnapCheckbox: crosshairSnapCheckboxParams,\n        crosshairStrokeColorPicker: crosshairStrokeColorPickerParams\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/interactivity/navigatorPanel.ts\nimport { AgCheckboxSelector as AgCheckboxSelector2, Component as Component4 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector3 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/widgets/agSlider.ts\nimport { AgAbstractLabel, AgInputNumberFieldSelector as AgInputNumberFieldSelector2, RefPlaceholder as RefPlaceholder3 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/widgets/agInputRange.ts\nimport { AgAbstractInputField } from \"@ag-grid-community/core\";\nvar AgInputRange = class extends AgAbstractInputField {\n  constructor(config) {\n    super(config, \"ag-range-field\", \"range\");\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { min, max, step } = this.config;\n    if (min != null) {\n      this.setMinValue(min);\n    }\n    if (max != null) {\n      this.setMaxValue(max);\n    }\n    this.setStep(step || 1);\n  }\n  addInputListeners() {\n    this.addManagedElementListeners(this.eInput, {\n      input: (e) => {\n        const value = e.target.value;\n        this.setValue(value);\n      }\n    });\n  }\n  setMinValue(value) {\n    this.min = value;\n    this.eInput.setAttribute(\"min\", value.toString());\n    return this;\n  }\n  setMaxValue(value) {\n    this.max = value;\n    this.eInput.setAttribute(\"max\", value.toString());\n    return this;\n  }\n  setStep(value) {\n    this.eInput.setAttribute(\"step\", value.toString());\n    return this;\n  }\n  setValue(value, silent) {\n    if (this.min != null) {\n      value = Math.max(parseFloat(value), this.min).toString();\n    }\n    if (this.max != null) {\n      value = Math.min(parseFloat(value), this.max).toString();\n    }\n    const ret = super.setValue(value, silent);\n    this.eInput.value = value;\n    return ret;\n  }\n};\nvar AgInputRangeSelector = {\n  selector: \"AG-INPUT-RANGE\",\n  component: AgInputRange\n};\n\n// enterprise-modules/charts/src/widgets/agSlider.ts\nvar AgSlider = class extends AgAbstractLabel {\n  constructor(config) {\n    super(\n      config,\n      /* html */\n      `<div class=\"ag-slider\">\n            <label data-ref=\"eLabel\"></label>\n            <div class=\"ag-wrapper ag-slider-wrapper\">\n                <ag-input-range data-ref=\"eSlider\"></ag-input-range>\n                <ag-input-number-field data-ref=\"eText\"></ag-input-number-field>\n            </div>\n        </div>`,\n      [AgInputRangeSelector, AgInputNumberFieldSelector2]\n    );\n    this.eLabel = RefPlaceholder3;\n    this.eSlider = RefPlaceholder3;\n    this.eText = RefPlaceholder3;\n    this.labelAlignment = \"top\";\n  }\n  postConstruct() {\n    super.postConstruct();\n    this.eSlider.addCssClass(\"ag-slider-field\");\n    const { minValue, maxValue, textFieldWidth, step, value, onValueChange } = this.config;\n    if (minValue != null) {\n      this.setMinValue(minValue);\n    }\n    if (maxValue != null) {\n      this.setMaxValue(maxValue);\n    }\n    if (textFieldWidth != null) {\n      this.setTextFieldWidth(textFieldWidth);\n    }\n    if (step != null) {\n      this.setStep(step);\n    }\n    if (value != null) {\n      this.setValue(value);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListeners(this.eText, {\n      fieldValueChanged: () => {\n        const textValue = parseFloat(this.eText.getValue());\n        this.eSlider.setValue(textValue.toString(), true);\n        callbackFn(textValue || 0);\n      }\n    });\n    this.addManagedListeners(this.eSlider, {\n      fieldValueChanged: () => {\n        const sliderValue = this.eSlider.getValue();\n        this.eText.setValue(sliderValue, true);\n        callbackFn(parseFloat(sliderValue));\n      }\n    });\n    return this;\n  }\n  setSliderWidth(width) {\n    this.eSlider.setWidth(width);\n    return this;\n  }\n  setTextFieldWidth(width) {\n    this.eText.setWidth(width);\n    return this;\n  }\n  setMinValue(minValue) {\n    this.eSlider.setMinValue(minValue);\n    this.eText.setMin(minValue);\n    return this;\n  }\n  setMaxValue(maxValue) {\n    this.eSlider.setMaxValue(maxValue);\n    this.eText.setMax(maxValue);\n    return this;\n  }\n  getValue() {\n    return this.eText.getValue();\n  }\n  setValue(value, silent) {\n    if (this.getValue() === value) {\n      return this;\n    }\n    this.eText.setValue(value, true);\n    this.eSlider.setValue(value, true);\n    if (!silent) {\n      this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\n    }\n    return this;\n  }\n  setStep(step) {\n    this.eSlider.setStep(step);\n    this.eText.setStep(step);\n    return this;\n  }\n};\nvar AgSliderSelector = {\n  selector: \"AG-SLIDER\",\n  component: AgSlider\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/interactivity/navigatorPanel.ts\nvar NavigatorPanel = class extends Component4 {\n  constructor(chartMenuParamsFactory) {\n    super();\n    this.chartMenuParamsFactory = chartMenuParamsFactory;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const navigatorGroupParams = this.chartMenuParamsFactory.addEnableParams(\n      \"navigator.enabled\",\n      {\n        cssIdentifier: \"charts-advanced-settings-top-level\",\n        direction: \"vertical\",\n        suppressOpenCloseIcons: true,\n        title: this.chartTranslationService.translate(\"navigator\"),\n        suppressEnabledCheckbox: true,\n        useToggle: true\n      }\n    );\n    const navigatorHeightSliderParams = this.chartMenuParamsFactory.getDefaultSliderParams(\n      \"navigator.height\",\n      \"height\",\n      60\n    );\n    navigatorHeightSliderParams.minValue = 10;\n    const navigatorMiniChartCheckboxParams = this.chartMenuParamsFactory.getDefaultCheckboxParams(\n      \"navigator.miniChart.enabled\",\n      \"miniChart\"\n    );\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"navigatorGroup\">\n                <ag-slider data-ref=\"navigatorHeightSlider\"></ag-slider>\n                <ag-checkbox data-ref=\"navigatorMiniChartCheckbox\"></ag-checkbox>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector3, AgSliderSelector, AgCheckboxSelector2],\n      {\n        navigatorGroup: navigatorGroupParams,\n        navigatorHeightSlider: navigatorHeightSliderParams,\n        navigatorMiniChartCheckbox: navigatorMiniChartCheckboxParams\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/interactivity/zoomPanel.ts\nimport { AgCheckboxSelector as AgCheckboxSelector3, Component as Component5, RefPlaceholder as RefPlaceholder4 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector4 } from \"@ag-grid-enterprise/core\";\nvar ZoomPanel = class extends Component5 {\n  constructor(chartMenuParamsFactory) {\n    super();\n    this.chartMenuParamsFactory = chartMenuParamsFactory;\n    this.zoomScrollingStepInput = RefPlaceholder4;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const zoomGroupParams = this.chartMenuParamsFactory.addEnableParams(\"zoom.enabled\", {\n      cssIdentifier: \"charts-advanced-settings-top-level\",\n      direction: \"vertical\",\n      suppressOpenCloseIcons: true,\n      title: this.chartTranslationService.translate(\"zoom\"),\n      suppressEnabledCheckbox: true,\n      useToggle: true\n    });\n    const zoomScrollingCheckboxParams = this.chartMenuParamsFactory.getDefaultCheckboxParams(\n      \"zoom.enableScrolling\",\n      \"scrollingZoom\"\n    );\n    const zoomScrollingStepSliderParams = this.chartMenuParamsFactory.getDefaultSliderParams(\n      \"zoom.scrollingStep\",\n      \"scrollingStep\",\n      1\n    );\n    zoomScrollingStepSliderParams.step = 0.01;\n    zoomScrollingStepSliderParams.minValue = zoomScrollingStepSliderParams.step;\n    const zoomSelectingCheckboxParams = this.chartMenuParamsFactory.getDefaultCheckboxParams(\n      \"zoom.enableSelecting\",\n      \"selectingZoom\"\n    );\n    zoomScrollingCheckboxParams.onValueChange = /* @__PURE__ */ ((onValueChange) => (value) => {\n      if (!onValueChange)\n        return;\n      onValueChange(value);\n      this.zoomScrollingStepInput.setDisabled(!value);\n    })(zoomScrollingCheckboxParams.onValueChange);\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"zoomGroup\">\n                <ag-checkbox data-ref=\"zoomSelectingCheckbox\"></ag-checkbox>\n                <ag-checkbox data-ref=\"zoomScrollingCheckbox\"></ag-checkbox>\n                <ag-slider data-ref=\"zoomScrollingStepInput\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector4, AgCheckboxSelector3, AgSliderSelector],\n      {\n        zoomGroup: zoomGroupParams,\n        zoomScrollingCheckbox: zoomScrollingCheckboxParams,\n        zoomScrollingStepInput: zoomScrollingStepSliderParams,\n        zoomSelectingCheckbox: zoomSelectingCheckboxParams\n      }\n    );\n    this.zoomScrollingStepInput.setDisabled(!zoomScrollingCheckboxParams.value);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/advancedSettingsPanel.ts\nvar INTERACTIVITY_GROUPS = [\"navigator\", \"zoom\", \"animation\", \"crosshair\"];\nvar AdvancedSettingsPanel = class extends Component6 {\n  constructor(chartMenuContext) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-advanced-settings-wrapper\"></div>`\n    );\n    this.chartMenuContext = chartMenuContext;\n  }\n  postConstruct() {\n    this.chartPanelFeature = this.createManagedBean(\n      new ChartPanelFeature(\n        this.chartMenuContext.chartController,\n        this.getGui(),\n        \"ag-chart-advanced-settings-section\",\n        (chartType, seriesType) => this.createPanels(chartType, seriesType)\n      )\n    );\n    this.chartPanelFeature.refreshPanels();\n  }\n  createPanels(chartType, seriesType) {\n    INTERACTIVITY_GROUPS.forEach((group) => {\n      if (!this.isGroupPanelShownForSeries(group, seriesType)) {\n        return;\n      }\n      const comp = this.createPanel(group);\n      this.chartPanelFeature.addComponent(comp);\n    });\n  }\n  isGroupPanelShownForSeries(group, seriesType) {\n    return group === \"animation\" || isCartesian(seriesType);\n  }\n  createPanel(group) {\n    const { chartMenuParamsFactory, chartAxisMenuParamsFactory } = this.chartMenuContext;\n    switch (group) {\n      case \"navigator\":\n        return new NavigatorPanel(chartMenuParamsFactory);\n      case \"zoom\":\n        return new ZoomPanel(chartMenuParamsFactory);\n      case \"animation\":\n        return new AnimationPanel(chartMenuParamsFactory);\n      case \"crosshair\":\n        return new CrosshairPanel(chartAxisMenuParamsFactory);\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/advancedSettings/advancedSettingsMenuFactory.ts\nvar AdvancedSettingsMenuFactory = class extends BeanStub2 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"advancedSettingsMenuFactory\";\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  showMenu(chartMenuContext, eventSource) {\n    this.hideMenu();\n    const menu = this.createBean(new AdvancedSettingsMenu(chartMenuContext));\n    this.activeDialog = this.createBean(\n      new AgDialog2({\n        title: this.chartTranslationService.translate(\"advancedSettings\"),\n        component: menu,\n        width: 300,\n        height: 400,\n        resizable: true,\n        movable: true,\n        centered: true,\n        closable: true,\n        afterGuiAttached: () => {\n          this.focusService.findFocusableElements(menu.getGui())[0]?.focus();\n        },\n        closedCallback: () => {\n          this.activeMenu = this.destroyBean(this.activeMenu);\n          this.activeDialog = void 0;\n          eventSource?.focus({ preventScroll: true });\n        }\n      })\n    );\n    this.activeMenu = menu;\n  }\n  hideMenu() {\n    if (this.activeDialog) {\n      this.destroyBean(this.activeDialog);\n    }\n  }\n  destroy() {\n    this.activeMenu = this.destroyBean(this.activeMenu);\n    this.activeDialog = this.destroyBean(this.activeDialog);\n    super.destroy();\n  }\n};\nvar AdvancedSettingsMenu = class extends TabGuardComp {\n  constructor(chartMenuContext) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-advanced-settings\"></div>`\n    );\n    this.chartMenuContext = chartMenuContext;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n  }\n  postConstruct() {\n    this.advancedSettingsPanel = this.createManagedBean(new AdvancedSettingsPanel(this.chartMenuContext));\n    this.getGui().appendChild(this.advancedSettingsPanel.getGui());\n    this.initialiseTabGuard({\n      onTabKeyDown: this.onTabKeyDown.bind(this),\n      focusTrapActive: true\n    });\n  }\n  onTabKeyDown(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    e.preventDefault();\n    const backwards = e.shiftKey;\n    const panelGui = this.advancedSettingsPanel.getGui();\n    const nextEl = this.focusService.findNextFocusableElement(panelGui, false, backwards);\n    if (nextEl) {\n      nextEl.focus();\n    } else {\n      const focusableElements = this.focusService.findFocusableElements(panelGui);\n      if (focusableElements.length) {\n        focusableElements[backwards ? focusableElements.length - 1 : 0].focus();\n      }\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/chartMenuList.ts\nimport { BeanStub as BeanStub3, Component as Component7, RefPlaceholder as RefPlaceholder5, _createIconNoSpan } from \"@ag-grid-community/core\";\nimport { AgMenuList } from \"@ag-grid-enterprise/core\";\nvar ChartMenuListFactory = class extends BeanStub3 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"chartMenuListFactory\";\n  }\n  wireBeans(beans) {\n    this.popupService = beans.popupService;\n    this.chartMenuService = beans.chartMenuService;\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  showMenuList(params) {\n    const { eventSource, showMenu, chartMenuContext } = params;\n    const areChartToolPanelsEnabled = this.chartMenuService.doChartToolPanelsExist(\n      chartMenuContext.chartController\n    );\n    const menuItems = this.mapWithStockItems(\n      this.getMenuItems(chartMenuContext.chartController, areChartToolPanelsEnabled),\n      chartMenuContext,\n      showMenu,\n      eventSource,\n      areChartToolPanelsEnabled\n    );\n    if (!menuItems.length) {\n      return;\n    }\n    const chartMenuList = this.createBean(new ChartMenuList(menuItems));\n    this.activeChartMenuList = chartMenuList;\n    let multiplier = -1;\n    let alignSide = \"left\";\n    if (this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    const eGui = chartMenuList.getGui();\n    this.popupService.addPopup({\n      modal: true,\n      eChild: eGui,\n      closeOnEsc: true,\n      closedCallback: () => {\n        this.destroyBean(chartMenuList);\n        this.activeChartMenuList = void 0;\n        const eDocument = this.gos.getDocument();\n        const activeEl = this.gos.getActiveDomElement();\n        if (!activeEl || activeEl === eDocument.body) {\n          eventSource.focus({ preventScroll: true });\n        }\n      },\n      afterGuiAttached: (params2) => chartMenuList.afterGuiAttached(params2),\n      positionCallback: () => {\n        {\n          this.popupService.positionPopupByComponent({\n            type: \"chartMenu\",\n            eventSource,\n            ePopup: eGui,\n            alignSide,\n            nudgeX: 4 * multiplier,\n            nudgeY: 4,\n            position: \"under\",\n            keepWithinBounds: true\n          });\n        }\n      },\n      ariaLabel: \"Chart Menu\"\n    });\n  }\n  getMenuItems(chartController, areChartToolPanelsEnabled) {\n    const defaultItems = [\n      ...areChartToolPanelsEnabled ? [\"chartEdit\"] : [],\n      ...chartController.isEnterprise() ? [\"chartAdvancedSettings\"] : [],\n      chartController.isChartLinked() ? \"chartUnlink\" : \"chartLink\",\n      \"chartDownload\"\n    ];\n    const chartMenuItems = this.gos.get(\"chartMenuItems\");\n    if (!chartMenuItems) {\n      return defaultItems;\n    } else if (Array.isArray(chartMenuItems)) {\n      return chartMenuItems;\n    } else {\n      return chartMenuItems(\n        this.gos.addGridCommonParams({\n          defaultItems\n        })\n      );\n    }\n  }\n  mapWithStockItems(originalList, chartMenuContext, showMenu, eventSource, areChartToolPanelsEnabled) {\n    if (!originalList) {\n      return [];\n    }\n    const resultList = [];\n    originalList.forEach((menuItemOrString) => {\n      let result;\n      if (typeof menuItemOrString === \"string\") {\n        result = this.getStockMenuItem(\n          menuItemOrString,\n          chartMenuContext,\n          showMenu,\n          eventSource,\n          areChartToolPanelsEnabled\n        );\n      } else {\n        result = { ...menuItemOrString };\n      }\n      if (!result) {\n        return;\n      }\n      const { subMenu } = result;\n      if (Array.isArray(subMenu)) {\n        result.subMenu = this.mapWithStockItems(\n          subMenu,\n          chartMenuContext,\n          showMenu,\n          eventSource,\n          areChartToolPanelsEnabled\n        );\n      }\n      resultList.push(result);\n    });\n    return resultList;\n  }\n  getStockMenuItem(key, chartMenuContext, showMenu, eventSource, areChartToolPanelsEnabled) {\n    switch (key) {\n      case \"chartEdit\":\n        return areChartToolPanelsEnabled ? this.createMenuItem(\n          this.chartTranslationService.translate(\"chartEdit\"),\n          \"chartsMenuEdit\",\n          showMenu\n        ) : null;\n      case \"chartAdvancedSettings\":\n        return this.createMenuItem(\n          this.chartTranslationService.translate(\"chartAdvancedSettings\"),\n          \"chartsMenuAdvancedSettings\",\n          () => this.chartMenuService.openAdvancedSettings(chartMenuContext, eventSource)\n        );\n      case \"chartUnlink\":\n        return chartMenuContext.chartController.isChartLinked() ? this.createMenuItem(\n          this.chartTranslationService.translate(\"chartUnlink\"),\n          \"unlinked\",\n          () => this.chartMenuService.toggleLinked(chartMenuContext)\n        ) : null;\n      case \"chartLink\":\n        return !chartMenuContext.chartController.isChartLinked() ? this.createMenuItem(\n          this.chartTranslationService.translate(\"chartLink\"),\n          \"linked\",\n          () => this.chartMenuService.toggleLinked(chartMenuContext)\n        ) : null;\n      case \"chartDownload\":\n        return this.createMenuItem(\n          this.chartTranslationService.translate(\"chartDownload\"),\n          \"save\",\n          () => this.chartMenuService.downloadChart(chartMenuContext)\n        );\n    }\n    return null;\n  }\n  createMenuItem(name, iconName, action) {\n    return {\n      name,\n      icon: _createIconNoSpan(iconName, this.gos, null),\n      action\n    };\n  }\n  destroy() {\n    this.destroyBean(this.activeChartMenuList);\n    super.destroy();\n  }\n};\nvar ChartMenuList = class extends Component7 {\n  constructor(menuItems) {\n    super(\n      /* html */\n      `\n            <div data-ref=\"eChartsMenu\" role=\"presentation\" class=\"ag-menu ag-chart-menu-popup\"></div>\n        `\n    );\n    this.menuItems = menuItems;\n    this.eChartsMenu = RefPlaceholder5;\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n  }\n  postConstruct() {\n    this.mainMenuList = this.createManagedBean(new AgMenuList(0));\n    this.mainMenuList.addMenuItems(this.menuItems);\n    this.mainMenuList.addEventListener(\"closeMenu\", this.onHidePopup.bind(this));\n    this.eChartsMenu.appendChild(this.mainMenuList.getGui());\n  }\n  onHidePopup() {\n    this.hidePopupFunc?.();\n  }\n  afterGuiAttached({ hidePopup }) {\n    if (hidePopup) {\n      this.hidePopupFunc = hidePopup;\n      this.addDestroyFunc(hidePopup);\n    }\n    this.focusService.focusInto(this.mainMenuList.getGui());\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/services/chartCrossFilterService.ts\nimport { BeanStub as BeanStub4, _includes, _warnOnce } from \"@ag-grid-community/core\";\nvar ChartCrossFilterService = class _ChartCrossFilterService extends BeanStub4 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"chartCrossFilterService\";\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.valueService = beans.valueService;\n    this.filterManager = beans.filterManager;\n    if (beans.rowModel.getType() === \"clientSide\") {\n      this.clientSideRowModel = beans.rowModel;\n    }\n  }\n  filter(event, reset = false) {\n    const filterModel = this.filterManager?.getFilterModel() ?? {};\n    if (reset) {\n      this.resetFilters(filterModel);\n      return;\n    }\n    const colId = _ChartCrossFilterService.extractFilterColId(event);\n    if (this.isValidColumnFilter(colId)) {\n      this.updateFilters(filterModel, event, colId);\n    } else {\n      _warnOnce(\n        \"cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' to be defined on the column with id: '\" + colId + \"'\"\n      );\n    }\n  }\n  resetFilters(filterModel) {\n    const filtersExist = Object.keys(filterModel).length > 0;\n    if (filtersExist) {\n      this.filterManager?.setFilterModel(null);\n      this.filterManager?.onFilterChanged({ source: \"api\" });\n    }\n  }\n  updateFilters(filterModel, event, colId) {\n    const dataKey = _ChartCrossFilterService.extractFilterColId(event);\n    const rawValue = event.datum[dataKey];\n    if (rawValue === void 0) {\n      return;\n    }\n    const selectedValue = rawValue.toString();\n    if (event.event.metaKey || event.event.ctrlKey) {\n      const existingGridValues = this.getCurrentGridValuesForCategory(colId);\n      const valueAlreadyExists = _includes(existingGridValues, selectedValue);\n      let updatedValues;\n      if (valueAlreadyExists) {\n        updatedValues = existingGridValues.filter((v) => v !== selectedValue);\n      } else {\n        updatedValues = existingGridValues;\n        updatedValues.push(selectedValue);\n      }\n      filterModel[colId] = this.getUpdatedFilterModel(colId, updatedValues);\n    } else {\n      const updatedValues = [selectedValue];\n      filterModel = { [colId]: this.getUpdatedFilterModel(colId, updatedValues) };\n    }\n    this.filterManager?.setFilterModel(filterModel);\n  }\n  getUpdatedFilterModel(colId, updatedValues) {\n    const columnFilterType = this.getColumnFilterType(colId);\n    if (columnFilterType === \"agMultiColumnFilter\") {\n      return { filterType: \"multi\", filterModels: [null, { filterType: \"set\", values: updatedValues }] };\n    }\n    return { filterType: \"set\", values: updatedValues };\n  }\n  getCurrentGridValuesForCategory(colId) {\n    const filteredValues = [];\n    const column = this.getColumnById(colId);\n    this.clientSideRowModel?.forEachNodeAfterFilter((rowNode) => {\n      if (column && !rowNode.group) {\n        const value = this.valueService.getValue(column, rowNode) + \"\";\n        if (!filteredValues.includes(value)) {\n          filteredValues.push(value);\n        }\n      }\n    });\n    return filteredValues;\n  }\n  static extractFilterColId(event) {\n    return event.xKey || event.calloutLabelKey;\n  }\n  isValidColumnFilter(colId) {\n    if (colId.indexOf(\"-filtered-out\")) {\n      colId = colId.replace(\"-filtered-out\", \"\");\n    }\n    const filterType = this.getColumnFilterType(colId);\n    if (typeof filterType === \"boolean\") {\n      return filterType;\n    }\n    return _includes([\"agSetColumnFilter\", \"agMultiColumnFilter\"], filterType);\n  }\n  getColumnFilterType(colId) {\n    const gridColumn = this.getColumnById(colId);\n    if (gridColumn) {\n      const colDef = gridColumn.getColDef();\n      return colDef.filter;\n    }\n  }\n  getColumnById(colId) {\n    return this.columnModel.getCol(colId);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/services/chartMenuService.ts\nimport { BeanStub as BeanStub5, _warnOnce as _warnOnce2 } from \"@ag-grid-community/core\";\nvar CHART_TOOLBAR_ALLOW_LIST = [\n  \"chartUnlink\",\n  \"chartLink\",\n  \"chartDownload\",\n  \"chartMenu\"\n];\nvar CHART_TOOL_PANEL_MENU_OPTIONS = {\n  settings: \"chartSettings\",\n  data: \"chartData\",\n  format: \"chartFormat\"\n};\nvar ChartMenuService = class extends BeanStub5 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"chartMenuService\";\n  }\n  wireBeans(beans) {\n    this.advancedSettingsMenuFactory = beans.advancedSettingsMenuFactory;\n  }\n  downloadChart(chartMenuContext, dimensions, fileName, fileFormat) {\n    chartMenuContext.chartController.getChartProxy().downloadChart(dimensions, fileName, fileFormat);\n  }\n  toggleLinked(chartMenuContext) {\n    chartMenuContext.chartController.detachChartRange();\n  }\n  openAdvancedSettings(chartMenuContext, eventSource) {\n    this.advancedSettingsMenuFactory.showMenu(chartMenuContext, eventSource);\n  }\n  hideAdvancedSettings() {\n    this.advancedSettingsMenuFactory.hideMenu();\n  }\n  getChartToolbarOptions() {\n    const defaultChartToolbarOptions = [\"chartMenu\"];\n    const toolbarItemsFunc = this.gos.getCallback(\"getChartToolbarItems\");\n    const params = {\n      defaultItems: defaultChartToolbarOptions\n    };\n    return toolbarItemsFunc ? toolbarItemsFunc(params).filter((option) => {\n      if (!CHART_TOOLBAR_ALLOW_LIST.includes(option)) {\n        _warnOnce2(`'${option}' is not a valid Chart Toolbar Option`);\n        return false;\n      }\n      return true;\n    }) : defaultChartToolbarOptions;\n  }\n  getChartToolPanels(chartController) {\n    const chartToolPanelsDef = this.gos.get(\"chartToolPanelsDef\");\n    const panelsOverride = chartToolPanelsDef?.panels?.map((panel) => {\n      const menuOption = CHART_TOOL_PANEL_MENU_OPTIONS[panel];\n      if (!menuOption) {\n        _warnOnce2(`Invalid panel in chartToolPanelsDef.panels: '${panel}'`);\n      }\n      return menuOption;\n    }).filter((panel) => Boolean(panel));\n    let panels = panelsOverride ?? Object.values(CHART_TOOL_PANEL_MENU_OPTIONS);\n    if (chartController.isPivotChart()) {\n      panels = panels.filter((panel) => panel !== \"chartData\");\n    }\n    const defaultToolPanel = chartToolPanelsDef?.defaultToolPanel;\n    const defaultPanel = defaultToolPanel && CHART_TOOL_PANEL_MENU_OPTIONS[defaultToolPanel] || panels[0];\n    return {\n      panels,\n      defaultPanel\n    };\n  }\n  doesChartToolbarExist() {\n    const chartToolbarOptions = this.getChartToolbarOptions();\n    return chartToolbarOptions.length > 0;\n  }\n  doChartToolPanelsExist(chartController) {\n    const { panels } = this.getChartToolPanels(chartController);\n    return panels.length > 0;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/services/chartTranslationService.ts\nimport { BeanStub as BeanStub6 } from \"@ag-grid-community/core\";\nvar _ChartTranslationService = class _ChartTranslationService extends BeanStub6 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"chartTranslationService\";\n  }\n  translate(toTranslate) {\n    const translate = this.localeService.getLocaleTextFunc();\n    const defaultTranslation = _ChartTranslationService.DEFAULT_TRANSLATIONS[toTranslate];\n    return translate(toTranslate, defaultTranslation);\n  }\n};\n_ChartTranslationService.DEFAULT_TRANSLATIONS = {\n  pivotChartTitle: \"Pivot Chart\",\n  rangeChartTitle: \"Range Chart\",\n  settings: \"Chart\",\n  data: \"Set Up\",\n  format: \"Customize\",\n  categories: \"Categories\",\n  defaultCategory: \"(None)\",\n  series: \"Series\",\n  switchCategorySeries: \"Switch Category / Series\",\n  categoryValues: \"Category Values\",\n  seriesLabels: \"Series Labels\",\n  aggregate: \"Aggregate\",\n  xyValues: \"X Y Values\",\n  paired: \"Paired Mode\",\n  axis: \"Axis\",\n  xAxis: \"Horizontal Axis\",\n  yAxis: \"Vertical Axis\",\n  polarAxis: \"Polar Axis\",\n  radiusAxis: \"Radius Axis\",\n  navigator: \"Navigator\",\n  zoom: \"Zoom\",\n  animation: \"Animation\",\n  crosshair: \"Crosshair\",\n  color: \"Color\",\n  thickness: \"Thickness\",\n  preferredLength: \"Preferred Length\",\n  xType: \"X Type\",\n  axisType: \"Axis Type\",\n  automatic: \"Automatic\",\n  category: \"Category\",\n  number: \"Number\",\n  time: \"Time\",\n  timeFormat: \"Time Format\",\n  autoRotate: \"Auto Rotate\",\n  labelRotation: \"Rotation\",\n  circle: \"Circle\",\n  polygon: \"Polygon\",\n  square: \"Square\",\n  cross: \"Cross\",\n  diamond: \"Diamond\",\n  plus: \"Plus\",\n  triangle: \"Triangle\",\n  heart: \"Heart\",\n  orientation: \"Orientation\",\n  fixed: \"Fixed\",\n  parallel: \"Parallel\",\n  perpendicular: \"Perpendicular\",\n  radiusAxisPosition: \"Position\",\n  ticks: \"Ticks\",\n  gridLines: \"Grid Lines\",\n  width: \"Width\",\n  height: \"Height\",\n  length: \"Length\",\n  padding: \"Padding\",\n  spacing: \"Spacing\",\n  chartStyle: \"Chart Style\",\n  title: \"Title\",\n  chartTitles: \"Titles\",\n  chartTitle: \"Chart Title\",\n  chartSubtitle: \"Subtitle\",\n  horizontalAxisTitle: \"Horizontal Axis Title\",\n  verticalAxisTitle: \"Vertical Axis Title\",\n  polarAxisTitle: \"Polar Axis Title\",\n  titlePlaceholder: \"Chart Title\",\n  background: \"Background\",\n  font: \"Font\",\n  weight: \"Weight\",\n  top: \"Top\",\n  right: \"Right\",\n  bottom: \"Bottom\",\n  left: \"Left\",\n  labels: \"Labels\",\n  calloutLabels: \"Callout Labels\",\n  sectorLabels: \"Sector Labels\",\n  positionRatio: \"Position Ratio\",\n  size: \"Size\",\n  shape: \"Shape\",\n  minSize: \"Minimum Size\",\n  maxSize: \"Maximum Size\",\n  legend: \"Legend\",\n  position: \"Position\",\n  markerSize: \"Marker Size\",\n  markerStroke: \"Marker Stroke\",\n  markerPadding: \"Marker Padding\",\n  itemSpacing: \"Item Spacing\",\n  itemPaddingX: \"Item Padding X\",\n  itemPaddingY: \"Item Padding Y\",\n  layoutHorizontalSpacing: \"Horizontal Spacing\",\n  layoutVerticalSpacing: \"Vertical Spacing\",\n  strokeWidth: \"Stroke Width\",\n  offset: \"Offset\",\n  offsets: \"Offsets\",\n  tooltips: \"Tooltips\",\n  callout: \"Callout\",\n  markers: \"Markers\",\n  shadow: \"Shadow\",\n  blur: \"Blur\",\n  xOffset: \"X Offset\",\n  yOffset: \"Y Offset\",\n  lineWidth: \"Line Width\",\n  lineDash: \"Line Dash\",\n  lineDashOffset: \"Dash Offset\",\n  scrollingZoom: \"Scrolling\",\n  scrollingStep: \"Scrolling Step\",\n  selectingZoom: \"Selecting\",\n  durationMillis: \"Duration (ms)\",\n  crosshairLabel: \"Label\",\n  crosshairSnap: \"Snap to Node\",\n  normal: \"Normal\",\n  bold: \"Bold\",\n  italic: \"Italic\",\n  boldItalic: \"Bold Italic\",\n  predefined: \"Predefined\",\n  fillOpacity: \"Fill Opacity\",\n  strokeColor: \"Line Color\",\n  strokeOpacity: \"Line Opacity\",\n  miniChart: \"Mini-Chart\",\n  histogramBinCount: \"Bin count\",\n  connectorLine: \"Connector Line\",\n  seriesItems: \"Series Items\",\n  seriesItemType: \"Item Type\",\n  seriesItemPositive: \"Positive\",\n  seriesItemNegative: \"Negative\",\n  seriesItemLabels: \"Item Labels\",\n  columnGroup: \"Column\",\n  barGroup: \"Bar\",\n  pieGroup: \"Pie\",\n  lineGroup: \"Line\",\n  scatterGroup: \"X Y (Scatter)\",\n  areaGroup: \"Area\",\n  polarGroup: \"Polar\",\n  statisticalGroup: \"Statistical\",\n  hierarchicalGroup: \"Hierarchical\",\n  specializedGroup: \"Specialized\",\n  combinationGroup: \"Combination\",\n  groupedColumnTooltip: \"Grouped\",\n  stackedColumnTooltip: \"Stacked\",\n  normalizedColumnTooltip: \"100% Stacked\",\n  groupedBarTooltip: \"Grouped\",\n  stackedBarTooltip: \"Stacked\",\n  normalizedBarTooltip: \"100% Stacked\",\n  pieTooltip: \"Pie\",\n  donutTooltip: \"Donut\",\n  lineTooltip: \"Line\",\n  groupedAreaTooltip: \"Area\",\n  stackedAreaTooltip: \"Stacked\",\n  normalizedAreaTooltip: \"100% Stacked\",\n  scatterTooltip: \"Scatter\",\n  bubbleTooltip: \"Bubble\",\n  histogramTooltip: \"Histogram\",\n  radialColumnTooltip: \"Radial Column\",\n  radialBarTooltip: \"Radial Bar\",\n  radarLineTooltip: \"Radar Line\",\n  radarAreaTooltip: \"Radar Area\",\n  nightingaleTooltip: \"Nightingale\",\n  rangeBarTooltip: \"Range Bar\",\n  rangeAreaTooltip: \"Range Area\",\n  boxPlotTooltip: \"Box Plot\",\n  treemapTooltip: \"Treemap\",\n  sunburstTooltip: \"Sunburst\",\n  waterfallTooltip: \"Waterfall\",\n  heatmapTooltip: \"Heatmap\",\n  columnLineComboTooltip: \"Column & Line\",\n  areaColumnComboTooltip: \"Area & Column\",\n  customComboTooltip: \"Custom Combination\",\n  innerRadius: \"Inner Radius\",\n  startAngle: \"Start Angle\",\n  endAngle: \"End Angle\",\n  reverseDirection: \"Reverse Direction\",\n  groupPadding: \"Group Padding\",\n  seriesPadding: \"Series Padding\",\n  tile: \"Tile\",\n  whisker: \"Whisker\",\n  cap: \"Cap\",\n  capLengthRatio: \"Length Ratio\",\n  labelPlacement: \"Placement\",\n  inside: \"Inside\",\n  outside: \"Outside\",\n  noDataToChart: \"No data available to be charted.\",\n  pivotChartRequiresPivotMode: \"Pivot Chart requires Pivot Mode enabled.\",\n  chartSettingsToolbarTooltip: \"Menu\",\n  chartLinkToolbarTooltip: \"Linked to Grid\",\n  chartUnlinkToolbarTooltip: \"Unlinked from Grid\",\n  chartDownloadToolbarTooltip: \"Download Chart\",\n  chartMenuToolbarTooltip: \"Menu\",\n  chartEdit: \"Edit Chart\",\n  chartAdvancedSettings: \"Advanced Settings\",\n  chartLink: \"Link to Grid\",\n  chartUnlink: \"Unlink from Grid\",\n  chartDownload: \"Download Chart\",\n  histogramFrequency: \"Frequency\",\n  seriesChartType: \"Series Chart Type\",\n  seriesType: \"Series Type\",\n  secondaryAxis: \"Secondary Axis\",\n  seriesAdd: \"Add a series\",\n  categoryAdd: \"Add a category\",\n  bar: \"Bar\",\n  column: \"Column\",\n  histogram: \"Histogram\",\n  advancedSettings: \"Advanced Settings\",\n  direction: \"Direction\",\n  horizontal: \"Horizontal\",\n  vertical: \"Vertical\",\n  seriesGroupType: \"Group Type\",\n  groupedSeriesGroupType: \"Grouped\",\n  stackedSeriesGroupType: \"Stacked\",\n  normalizedSeriesGroupType: \"100% Stacked\",\n  legendEnabled: \"Enabled\",\n  invalidColor: \"Color value is invalid\",\n  groupedColumnFull: \"Grouped Column\",\n  stackedColumnFull: \"Stacked Column\",\n  normalizedColumnFull: \"100% Stacked Column\",\n  groupedBarFull: \"Grouped Bar\",\n  stackedBarFull: \"Stacked Bar\",\n  normalizedBarFull: \"100% Stacked Bar\",\n  stackedAreaFull: \"Stacked Area\",\n  normalizedAreaFull: \"100% Stacked Area\",\n  customCombo: \"Custom Combination\",\n  // menu items\n  groupedColumn: \"Grouped\",\n  stackedColumn: \"Stacked\",\n  pie: \"Pie\",\n  donut: \"Donut\",\n  line: \"Line\",\n  scatter: \"Scatter\",\n  bubble: \"Bubble\",\n  area: \"Area\",\n  stackedArea: \"Stacked\",\n  radarLine: \"Radar Line\",\n  radarArea: \"Radar Area\",\n  nightingale: \"Nightingale\",\n  radialColumn: \"Radial Column\",\n  radialBar: \"Radial Bar\",\n  boxPlot: \"Box Plot\",\n  rangeBar: \"Range Bar\",\n  rangeArea: \"Range Area\",\n  treemap: \"Treemap\",\n  sunburst: \"Sunburst\",\n  waterfall: \"Waterfall\",\n  heatmap: \"Heatmap\",\n  columnLineCombo: \"Column & Line\",\n  AreaColumnCombo: \"Area & Column\",\n  // aria\n  ariaChartMenuClose: \"Close Chart Edit Menu\",\n  ariaChartSelected: \"Selected\",\n  // group\n  group: \"Group\",\n  // time formats\n  timeFormatSlashesDDMMYYYY: \"DD/MM/YYYY\",\n  timeFormatSlashesMMDDYYYY: \"MM/DD/YYYY\",\n  timeFormatSlashesDDMMYY: \"DD/MM/YY\",\n  timeFormatSlashesMMDDYY: \"MM/DD/YY\",\n  timeFormatDotsDDMYY: \"DD.M.YY\",\n  timeFormatDotsMDDYY: \"M.DD.YY\",\n  timeFormatDashesYYYYMMDD: \"YYYY-MM-DD\",\n  timeFormatSpacesDDMMMMYYYY: \"DD MMMM YYYY\",\n  timeFormatHHMMSS: \"HH:MM:SS\",\n  timeFormatHHMMSSAmPm: \"HH:MM:SS AM/PM\",\n  // agg funcs\n  sum: \"Sum\",\n  first: \"First\",\n  last: \"Last\",\n  min: \"Min\",\n  max: \"Max\",\n  count: \"Count\",\n  avg: \"Average\"\n};\nvar ChartTranslationService = _ChartTranslationService;\n\n// enterprise-modules/charts/src/charts/chartService.ts\nimport { BeanStub as BeanStub15, _warnOnce as _warnOnce14 } from \"@ag-grid-community/core\";\nimport { VERSION as CHARTS_VERSION, _ModuleSupport as _ModuleSupport4 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/version.ts\nvar VERSION = \"32.0.0\";\n\n// enterprise-modules/charts/src/charts/chartComp/gridChartComp.ts\nimport {\n  Component as Component40,\n  RefPlaceholder as RefPlaceholder19,\n  _clearElement as _clearElement4,\n  _getAbsoluteHeight,\n  _getAbsoluteWidth as _getAbsoluteWidth2,\n  _includes as _includes7,\n  _removeFromParent as _removeFromParent7,\n  _setDisplayed as _setDisplayed5,\n  _warnOnce as _warnOnce13\n} from \"@ag-grid-community/core\";\nimport { AgDialog as AgDialog3 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/chartController.ts\nimport { BeanStub as BeanStub11, _warnOnce as _warnOnce8 } from \"@ag-grid-community/core\";\nimport { _ModuleSupport as _ModuleSupport2, _Theme as _Theme2 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/chartTheme.ts\nimport { _includes as _includes2, _warnOnce as _warnOnce3 } from \"@ag-grid-community/core\";\nimport { _Theme } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/charts/chartComp/utils/axisTypeMapper.ts\nvar ALL_AXIS_TYPES = [\"number\", \"category\", \"grouped-category\", \"log\", \"time\"];\nfunction getLegacyAxisType(chartType) {\n  switch (chartType) {\n    case \"bar\":\n    case \"stackedBar\":\n    case \"normalizedBar\":\n      return [\"number\", \"category\"];\n    case \"groupedBar\":\n      return [\"number\", \"grouped-category\"];\n    case \"column\":\n    case \"stackedColumn\":\n    case \"normalizedColumn\":\n    case \"line\":\n    case \"area\":\n    case \"stackedArea\":\n    case \"normalizedArea\":\n    case \"histogram\":\n      return [\"category\", \"number\"];\n    case \"groupedColumn\":\n      return [\"grouped-category\", \"number\"];\n    case \"scatter\":\n    case \"bubble\":\n      return [\"number\", \"number\"];\n    default:\n      return void 0;\n  }\n}\n\n// enterprise-modules/charts/src/charts/chartComp/utils/object.ts\nfunction emptyTarget(value) {\n  return Array.isArray(value) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepMerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function(element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepMerge;\n  }\n  const customMerge = options.customMerge(key);\n  return typeof customMerge === \"function\" ? customMerge : deepMerge;\n}\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? (\n    // @ts-ignore\n    Object.getOwnPropertySymbols(target).filter(function(symbol) {\n      return target.propertyIsEnumerable(symbol);\n    })\n  ) : [];\n}\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n}\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) && // Properties are safe to merge if they don't exist in the target yet,\n  !(Object.hasOwnProperty.call(target, key) && // unsafe if they exist up the prototype chain,\n  Object.propertyIsEnumerable.call(target, key));\n}\nfunction mergeObject(target = {}, source = {}, options) {\n  const destination = {};\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function(key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n  getKeys(source).forEach(function(key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\nfunction defaultIsMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n}\nfunction isNonNullObject(value) {\n  return !!value && typeof value === \"object\";\n}\nfunction isSpecial(value) {\n  const stringValue = Object.prototype.toString.call(value);\n  return stringValue === \"[object RegExp]\" || stringValue === \"[object Date]\";\n}\nfunction deepMerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject;\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  const sourceIsArray = Array.isArray(source);\n  const targetIsArray = Array.isArray(target);\n  const sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\nfunction get(source, expression, defaultValue) {\n  if (source == null) {\n    return defaultValue;\n  }\n  const keys = expression.split(\".\");\n  let objectToRead = source;\n  while (keys.length > 1) {\n    objectToRead = objectToRead[keys.shift()];\n    if (objectToRead == null) {\n      return defaultValue;\n    }\n  }\n  const value = objectToRead[keys[0]];\n  return value != null ? value : defaultValue;\n}\nfunction set(target, expression, value) {\n  if (target == null) {\n    return;\n  }\n  const keys = expression.split(\".\");\n  let objectToUpdate = target;\n  keys.forEach((key, i) => {\n    if (!objectToUpdate[key]) {\n      objectToUpdate[key] = {};\n    }\n    if (i < keys.length - 1) {\n      objectToUpdate = objectToUpdate[key];\n    }\n  });\n  objectToUpdate[keys[keys.length - 1]] = value;\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/chartTheme.ts\nfunction createAgChartTheme(chartProxyParams, proxy, isEnterprise, chartThemeDefaults, updatedOverrides) {\n  const { chartOptionsToRestore, chartPaletteToRestore, chartThemeToRestore } = chartProxyParams;\n  const themeName = getSelectedTheme(chartProxyParams);\n  const stockTheme = isStockTheme(themeName);\n  const rootTheme = stockTheme ? { baseTheme: themeName } : lookupCustomChartTheme(chartProxyParams, themeName) ?? {};\n  const gridOptionsThemeOverrides = chartProxyParams.getGridOptionsChartThemeOverrides();\n  const apiThemeOverrides = chartProxyParams.apiChartThemeOverrides;\n  const standaloneChartType = getSeriesType(chartProxyParams.chartType);\n  const crossFilteringOverrides = chartProxyParams.crossFiltering ? createCrossFilterThemeOverrides(proxy, chartProxyParams, standaloneChartType) : void 0;\n  const isTitleEnabled = () => {\n    const isTitleEnabled2 = (obj) => {\n      if (!obj) {\n        return false;\n      }\n      return Object.keys(obj).some((key) => get(obj[key], \"title.enabled\", false));\n    };\n    return isTitleEnabled2(gridOptionsThemeOverrides) || isTitleEnabled2(apiThemeOverrides);\n  };\n  const overrides = [\n    stockTheme ? inbuiltStockThemeOverrides(chartProxyParams, isEnterprise, isTitleEnabled()) : void 0,\n    chartThemeDefaults,\n    crossFilteringOverrides,\n    gridOptionsThemeOverrides,\n    apiThemeOverrides,\n    { ...chartOptionsToRestore ?? {} },\n    updatedOverrides\n  ];\n  const theme = overrides.filter((v) => !!v).reduce(\n    (r, n) => ({\n      baseTheme: r,\n      overrides: n\n    }),\n    rootTheme\n  );\n  if (chartPaletteToRestore && themeName === chartThemeToRestore) {\n    const rootThemePalette = _Theme.getChartTheme(rootTheme).palette;\n    if (!isIdenticalPalette(chartPaletteToRestore, rootThemePalette)) {\n      theme.palette = chartPaletteToRestore;\n    }\n  }\n  return theme;\n}\nfunction isIdenticalPalette(paletteA, paletteB) {\n  const arrayCompare = (arrA, arrB) => {\n    if (arrA === arrB)\n      return true;\n    if (arrA?.length !== arrB?.length)\n      return false;\n    return arrA?.every((v, i) => v === arrB?.[i]) ?? false;\n  };\n  return arrayCompare(paletteA.fills, paletteB.fills) && arrayCompare(paletteA.strokes, paletteB.strokes);\n}\nfunction isStockTheme(themeName) {\n  return _includes2(Object.keys(_Theme.themes), themeName);\n}\nfunction createCrossFilterThemeOverrides(proxy, chartProxyParams, seriesType) {\n  const legend = {\n    listeners: {\n      legendItemClick: (e) => {\n        const chart = proxy.getChart();\n        chart.series.forEach((s) => {\n          s.toggleSeriesItem(e.itemId, e.enabled);\n          s.toggleSeriesItem(`${e.itemId}-filtered-out`, e.enabled);\n        });\n      }\n    }\n  };\n  return {\n    [seriesType]: {\n      tooltip: {\n        delay: 500\n      },\n      legend,\n      listeners: {\n        click: (e) => chartProxyParams.crossFilterCallback(e, true)\n      }\n    }\n  };\n}\nvar STATIC_INBUILT_STOCK_THEME_AXES_OVERRIDES = ALL_AXIS_TYPES.reduce(\n  (r, n) => ({ ...r, [n]: { title: { _enabledFromTheme: true } } }),\n  {}\n);\nfunction inbuiltStockThemeOverrides(params, isEnterprise, titleEnabled) {\n  const extraPadding = params.getExtraPaddingDirections();\n  return {\n    common: {\n      ...isEnterprise ? { animation: { duration: 500 } } : void 0,\n      axes: STATIC_INBUILT_STOCK_THEME_AXES_OVERRIDES,\n      padding: {\n        // don't add extra padding when a title is present!\n        top: !titleEnabled && extraPadding.includes(\"top\") ? 40 : 20,\n        right: extraPadding.includes(\"right\") ? 30 : 20,\n        bottom: extraPadding.includes(\"bottom\") ? 40 : 20,\n        left: extraPadding.includes(\"left\") ? 30 : 20\n      }\n    },\n    pie: {\n      series: {\n        title: { _enabledFromTheme: true },\n        calloutLabel: { _enabledFromTheme: true },\n        sectorLabel: {\n          enabled: false,\n          _enabledFromTheme: true\n        }\n      }\n    },\n    donut: {\n      series: {\n        title: { _enabledFromTheme: true },\n        calloutLabel: { _enabledFromTheme: true },\n        sectorLabel: {\n          enabled: false,\n          _enabledFromTheme: true\n        }\n      }\n    }\n  };\n}\nfunction getSelectedTheme(chartProxyParams) {\n  let chartThemeName = chartProxyParams.getChartThemeName();\n  const availableThemes = chartProxyParams.getChartThemes();\n  if (!_includes2(availableThemes, chartThemeName)) {\n    chartThemeName = availableThemes[0];\n  }\n  return chartThemeName;\n}\nfunction lookupCustomChartTheme(chartProxyParams, name) {\n  const { customChartThemes } = chartProxyParams;\n  const customChartTheme = customChartThemes && customChartThemes[name];\n  if (!customChartTheme) {\n    _warnOnce3(\n      `no stock theme exists with the name '${name}' and no custom chart theme with that name was supplied to 'customChartThemes'`\n    );\n  }\n  return customChartTheme;\n}\n\n// enterprise-modules/charts/src/charts/chartComp/model/chartDataModel.ts\nimport { BeanStub as BeanStub10, CellRangeType, _includes as _includes4 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/datasource/chartDatasource.ts\nimport { BeanStub as BeanStub7, ModuleNames, ModuleRegistry, _includes as _includes3, _last, _values, _warnOnce as _warnOnce4 } from \"@ag-grid-community/core\";\nvar ChartDatasource = class _ChartDatasource extends BeanStub7 {\n  wireBeans(beans) {\n    this.sortController = beans.sortController;\n    this.gridRowModel = beans.rowModel;\n    this.columnModel = beans.columnModel;\n    this.valueService = beans.valueService;\n    this.pivotResultColsService = beans.pivotResultColsService;\n    this.rowNodeSorter = beans.rowNodeSorter;\n    this.aggregationStage = beans.aggregationStage;\n  }\n  getData(params) {\n    if (params.crossFiltering) {\n      if (params.grouping) {\n        _warnOnce4(\"crossing filtering with row grouping is not supported.\");\n        return { chartData: [], columnNames: {} };\n      }\n      if (!this.gos.isRowModelType(\"clientSide\")) {\n        _warnOnce4(\"crossing filtering is only supported in the client side row model.\");\n        return { chartData: [], columnNames: {} };\n      }\n    }\n    const isServerSide = this.gos.isRowModelType(\"serverSide\");\n    if (isServerSide && params.pivoting) {\n      this.updatePivotKeysForSSRM();\n    }\n    const result = this.extractRowsFromGridRowModel(params);\n    result.chartData = this.aggregateRowsByDimension(params, result.chartData);\n    return result;\n  }\n  extractRowsFromGridRowModel(params) {\n    const { crossFiltering, startRow, endRow, valueCols, dimensionCols, grouping } = params;\n    let extractedRowData = [];\n    const columnNames = {};\n    const groupNodeIndexes = {};\n    const groupsToRemove = {};\n    let filteredNodes = {};\n    let allRowNodes = [];\n    let numRows;\n    if (crossFiltering) {\n      filteredNodes = this.getFilteredRowNodes();\n      allRowNodes = this.getAllRowNodes();\n      numRows = allRowNodes.length;\n    } else {\n      const modelLastRow = this.gridRowModel.getRowCount() - 1;\n      const hasNoRange = startRow === endRow && startRow === 0 && dimensionCols.length === 0 && valueCols.length === 0;\n      if (hasNoRange) {\n        numRows = 0;\n      } else {\n        const rangeLastRow = endRow >= 0 ? Math.min(endRow, modelLastRow) : modelLastRow;\n        numRows = rangeLastRow - startRow + 1;\n      }\n    }\n    if (numRows > 0) {\n      valueCols.forEach((col) => {\n        let columnNamesArr = [];\n        const pivotKeys = col.getColDef().pivotKeys;\n        if (pivotKeys) {\n          columnNamesArr = pivotKeys.slice();\n        }\n        const headerName = col.getColDef().headerName;\n        if (headerName) {\n          columnNamesArr.push(headerName);\n        }\n        if (columnNamesArr.length > 0) {\n          columnNames[col.getId()] = columnNamesArr;\n        }\n      });\n    }\n    let numRemovedNodes = 0;\n    let id = 0;\n    for (let i = 0; i < numRows; i++) {\n      const rowNode = crossFiltering ? allRowNodes[i] : this.gridRowModel.getRow(i + startRow);\n      if (rowNode.footer || rowNode.detail) {\n        numRemovedNodes++;\n        continue;\n      }\n      const data = {};\n      dimensionCols.forEach((col) => {\n        const colId = col.colId;\n        const column = this.columnModel.getCol(colId);\n        if (column) {\n          const valueObject = this.valueService.getValue(column, rowNode);\n          if (grouping) {\n            const valueString = valueObject && valueObject.toString ? String(valueObject.toString()) : \"\";\n            const labels2 = _ChartDatasource.getGroupLabels(rowNode, valueString);\n            data[colId] = {\n              labels: labels2,\n              // this is needed so that standalone can handle animations properly when data updates\n              id: id++,\n              toString: function() {\n                return this.labels.filter((l) => !!l).reverse().join(\" - \");\n              }\n            };\n            if (rowNode.group) {\n              groupNodeIndexes[labels2.toString()] = i - numRemovedNodes;\n            }\n            const groupKey = labels2.slice(1, labels2.length).toString();\n            if (groupKey) {\n              groupsToRemove[groupKey] = groupNodeIndexes[groupKey];\n            }\n          } else {\n            data[colId] = valueObject;\n          }\n        } else {\n          data[ChartDataModel.DEFAULT_CATEGORY] = i + 1;\n        }\n      });\n      valueCols.forEach((col) => {\n        const colId = col.getColId();\n        if (crossFiltering) {\n          const filteredOutColId = colId + \"-filtered-out\";\n          const value = this.valueService.getValue(col, rowNode);\n          const actualValue = value != null && typeof value.toNumber === \"function\" ? value.toNumber() : value;\n          if (filteredNodes[rowNode.id]) {\n            data[colId] = actualValue;\n            data[filteredOutColId] = params.aggFunc || params.isScatter ? void 0 : 0;\n          } else {\n            data[colId] = params.aggFunc || params.isScatter ? void 0 : 0;\n            data[filteredOutColId] = actualValue;\n          }\n        } else {\n          let value = this.valueService.getValue(col, rowNode);\n          if (value && Object.prototype.hasOwnProperty.call(value, \"toString\")) {\n            value = parseFloat(value.toString());\n          }\n          data[colId] = value != null && typeof value.toNumber === \"function\" ? value.toNumber() : value;\n        }\n      });\n      extractedRowData.push(data);\n    }\n    let groupChartData;\n    if (grouping) {\n      const groupIndexesToRemove = _values(groupsToRemove);\n      const allData = extractedRowData;\n      extractedRowData = [];\n      groupChartData = [];\n      for (let i = 0; i < allData.length; i++) {\n        (_includes3(groupIndexesToRemove, i) ? groupChartData : extractedRowData).push(allData[i]);\n      }\n    }\n    return { chartData: extractedRowData, columnNames, groupChartData };\n  }\n  aggregateRowsByDimension(params, dataFromGrid) {\n    const dimensionCols = params.dimensionCols;\n    if (!params.aggFunc || dimensionCols.length === 0) {\n      return dataFromGrid;\n    }\n    const lastCol = _last(dimensionCols);\n    const lastColId = lastCol && lastCol.colId;\n    const map = {};\n    const dataAggregated = [];\n    dataFromGrid.forEach((data) => {\n      let currentMap = map;\n      dimensionCols.forEach((col) => {\n        const colId = col.colId;\n        const key = data[colId];\n        if (colId === lastColId) {\n          let groupItem = currentMap[key];\n          if (!groupItem) {\n            groupItem = { __children: [] };\n            dimensionCols.forEach((dimCol) => {\n              const dimColId = dimCol.colId;\n              groupItem[dimColId] = data[dimColId];\n            });\n            currentMap[key] = groupItem;\n            dataAggregated.push(groupItem);\n          }\n          groupItem.__children.push(data);\n        } else {\n          if (!currentMap[key]) {\n            currentMap[key] = {};\n          }\n          currentMap = currentMap[key];\n        }\n      });\n    });\n    if (ModuleRegistry.__assertRegistered(ModuleNames.RowGroupingModule, \"Charting Aggregation\", this.gridId)) {\n      const aggStage = this.aggregationStage;\n      dataAggregated.forEach(\n        (groupItem) => params.valueCols.forEach((col) => {\n          if (params.crossFiltering) {\n            params.valueCols.forEach((valueCol) => {\n              const colId = valueCol.getColId();\n              const dataToAgg = groupItem.__children.filter((child) => typeof child[colId] !== \"undefined\").map((child) => child[colId]);\n              const aggResult = aggStage.aggregateValues(dataToAgg, params.aggFunc);\n              groupItem[valueCol.getId()] = aggResult && typeof aggResult.value !== \"undefined\" ? aggResult.value : aggResult;\n              const filteredOutColId = `${colId}-filtered-out`;\n              const dataToAggFiltered = groupItem.__children.filter((child) => typeof child[filteredOutColId] !== \"undefined\").map((child) => child[filteredOutColId]);\n              const aggResultFiltered = aggStage.aggregateValues(dataToAggFiltered, params.aggFunc);\n              groupItem[filteredOutColId] = aggResultFiltered && typeof aggResultFiltered.value !== \"undefined\" ? aggResultFiltered.value : aggResultFiltered;\n            });\n          } else {\n            const dataToAgg = groupItem.__children.map((child) => child[col.getId()]);\n            const aggResult = aggStage.aggregateValues(dataToAgg, params.aggFunc);\n            groupItem[col.getId()] = aggResult && typeof aggResult.value !== \"undefined\" ? aggResult.value : aggResult;\n          }\n        })\n      );\n    }\n    return dataAggregated;\n  }\n  updatePivotKeysForSSRM() {\n    const secondaryColumns = this.pivotResultColsService.getPivotResultCols()?.list;\n    if (!secondaryColumns) {\n      return;\n    }\n    const pivotKeySeparator = this.extractPivotKeySeparator(secondaryColumns);\n    secondaryColumns.forEach((col) => {\n      if (pivotKeySeparator === \"\") {\n        col.getColDef().pivotKeys = [];\n      } else {\n        const keys = col.getColId().split(pivotKeySeparator);\n        col.getColDef().pivotKeys = keys.slice(0, keys.length - 1);\n      }\n    });\n  }\n  extractPivotKeySeparator(secondaryColumns) {\n    if (secondaryColumns.length === 0) {\n      return \"\";\n    }\n    const extractSeparator = (columnGroup, childId) => {\n      const groupId = columnGroup.getGroupId();\n      if (!columnGroup.getParent()) {\n        return childId.split(groupId)[1][0];\n      }\n      return extractSeparator(columnGroup.getParent(), groupId);\n    };\n    const firstSecondaryCol = secondaryColumns[0];\n    if (firstSecondaryCol.getParent() == null) {\n      return \"\";\n    }\n    return extractSeparator(firstSecondaryCol.getParent(), firstSecondaryCol.getColId());\n  }\n  static getGroupLabels(rowNode, initialLabel) {\n    const labels2 = [initialLabel];\n    while (rowNode && rowNode.level !== 0) {\n      rowNode = rowNode.parent;\n      if (rowNode) {\n        labels2.push(rowNode.key);\n      }\n    }\n    return labels2;\n  }\n  getFilteredRowNodes() {\n    const filteredNodes = {};\n    this.gridRowModel.forEachNodeAfterFilterAndSort((rowNode) => {\n      filteredNodes[rowNode.id] = rowNode;\n    });\n    return filteredNodes;\n  }\n  getAllRowNodes() {\n    const allRowNodes = [];\n    this.gridRowModel.forEachNode((rowNode) => {\n      allRowNodes.push(rowNode);\n    });\n    return this.sortRowNodes(allRowNodes);\n  }\n  sortRowNodes(rowNodes) {\n    const sortOptions = this.sortController.getSortOptions();\n    const noSort = !sortOptions || sortOptions.length == 0;\n    if (noSort)\n      return rowNodes;\n    return this.rowNodeSorter.doFullSort(rowNodes, sortOptions);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/services/chartColumnService.ts\nimport { BeanStub as BeanStub8, _warnOnce as _warnOnce5 } from \"@ag-grid-community/core\";\nvar ChartColumnService = class extends BeanStub8 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"chartColumnService\";\n    this.valueColsWithoutSeriesType = /* @__PURE__ */ new Set();\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n    this.showRowGroupColsService = beans.showRowGroupColsService;\n    this.columnNameService = beans.columnNameService;\n    this.visibleColsService = beans.visibleColsService;\n    this.funcColsService = beans.funcColsService;\n    this.valueService = beans.valueService;\n    this.rowPositionUtils = beans.rowPositionUtils;\n  }\n  postConstruct() {\n    const clearValueCols = () => this.valueColsWithoutSeriesType.clear();\n    this.addManagedEventListeners({\n      newColumnsLoaded: clearValueCols,\n      rowDataUpdated: clearValueCols\n    });\n  }\n  getColumn(colId) {\n    return this.columnModel.getColDefCol(colId);\n  }\n  getAllDisplayedColumns() {\n    return this.visibleColsService.getAllCols();\n  }\n  getColDisplayName(col) {\n    return this.columnNameService.getDisplayNameForColumn(col, \"chart\");\n  }\n  getRowGroupColumns() {\n    return this.funcColsService.getRowGroupColumns();\n  }\n  getGroupDisplayColumns() {\n    return this.showRowGroupColsService?.getShowRowGroupCols() ?? [];\n  }\n  isPivotMode() {\n    return this.columnModel.isPivotMode();\n  }\n  isPivotActive() {\n    return this.columnModel.isPivotActive();\n  }\n  getChartColumns() {\n    const gridCols = this.columnModel.getCols();\n    const dimensionCols = /* @__PURE__ */ new Set();\n    const valueCols = /* @__PURE__ */ new Set();\n    gridCols.forEach((col) => {\n      const colDef = col.getColDef();\n      const chartDataType = colDef.chartDataType;\n      if (chartDataType) {\n        switch (chartDataType) {\n          case \"category\":\n          case \"time\":\n            dimensionCols.add(col);\n            return;\n          case \"series\":\n            valueCols.add(col);\n            return;\n          case \"excluded\":\n            return;\n          default:\n            _warnOnce5(\n              `unexpected chartDataType value '${chartDataType}' supplied, instead use 'category', 'series' or 'excluded'`\n            );\n            break;\n        }\n      }\n      if (colDef.colId === \"ag-Grid-AutoColumn\") {\n        dimensionCols.add(col);\n        return;\n      }\n      if (!col.isPrimary()) {\n        valueCols.add(col);\n        return;\n      }\n      (this.isInferredValueCol(col) ? valueCols : dimensionCols).add(col);\n    });\n    return { dimensionCols, valueCols };\n  }\n  isInferredValueCol(col) {\n    const colId = col.getColId();\n    if (colId === \"ag-Grid-AutoColumn\") {\n      return false;\n    }\n    const row = this.rowPositionUtils.getRowNode({ rowIndex: 0, rowPinned: null });\n    if (!row) {\n      return this.valueColsWithoutSeriesType.has(colId);\n    }\n    let cellValue = this.valueService.getValue(col, row);\n    if (cellValue == null) {\n      cellValue = this.extractLeafData(row, col);\n    }\n    if (cellValue != null && typeof cellValue.toNumber === \"function\") {\n      cellValue = cellValue.toNumber();\n    }\n    const isNumber = typeof cellValue === \"number\";\n    if (isNumber) {\n      this.valueColsWithoutSeriesType.add(colId);\n    }\n    return isNumber;\n  }\n  extractLeafData(row, col) {\n    if (!row.allLeafChildren) {\n      return null;\n    }\n    for (let i = 0; i < row.allLeafChildren.length; i++) {\n      const childRow = row.allLeafChildren[i];\n      const value = this.valueService.getValue(col, childRow);\n      if (value != null) {\n        return value;\n      }\n    }\n    return null;\n  }\n  destroy() {\n    this.valueColsWithoutSeriesType.clear();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/model/comboChartModel.ts\nimport { BeanStub as BeanStub9, _warnOnce as _warnOnce6 } from \"@ag-grid-community/core\";\nvar _ComboChartModel = class _ComboChartModel extends BeanStub9 {\n  constructor(chartDataModel) {\n    super();\n    // this control flag is used to only log warning for the initial user config\n    this.suppressComboChartWarnings = false;\n    this.chartDataModel = chartDataModel;\n    this.seriesChartTypes = chartDataModel.params.seriesChartTypes ?? [];\n  }\n  postConstruct() {\n    this.initComboCharts();\n  }\n  update(seriesChartTypes) {\n    this.seriesChartTypes = seriesChartTypes ?? this.seriesChartTypes;\n    this.initComboCharts();\n    this.updateSeriesChartTypes();\n  }\n  initComboCharts() {\n    const seriesChartTypesExist = this.seriesChartTypes && this.seriesChartTypes.length > 0;\n    const customCombo = this.chartDataModel.chartType === \"customCombo\" || seriesChartTypesExist;\n    if (customCombo) {\n      this.chartDataModel.chartType = \"customCombo\";\n      this.savedCustomSeriesChartTypes = this.seriesChartTypes || [];\n    }\n  }\n  updateSeriesChartTypes() {\n    if (!this.chartDataModel.isComboChart()) {\n      return;\n    }\n    this.seriesChartTypes = this.seriesChartTypes.map((seriesChartType) => {\n      const primaryOnly = [\"groupedColumn\", \"stackedColumn\", \"stackedArea\"].includes(seriesChartType.chartType);\n      seriesChartType.secondaryAxis = primaryOnly ? false : seriesChartType.secondaryAxis;\n      return seriesChartType;\n    });\n    if (this.chartDataModel.chartType === \"customCombo\") {\n      this.updateSeriesChartTypesForCustomCombo();\n      return;\n    }\n    this.updateChartSeriesTypesForBuiltInCombos();\n  }\n  updateSeriesChartTypesForCustomCombo() {\n    const seriesChartTypesSupplied = this.seriesChartTypes && this.seriesChartTypes.length > 0;\n    if (!seriesChartTypesSupplied && !this.suppressComboChartWarnings) {\n      _warnOnce6(`'seriesChartTypes' are required when the 'customCombo' chart type is specified.`);\n    }\n    this.seriesChartTypes = this.seriesChartTypes.map((s) => {\n      if (!_ComboChartModel.SUPPORTED_COMBO_CHART_TYPES.includes(s.chartType)) {\n        _warnOnce6(\n          `invalid chartType '${s.chartType}' supplied in 'seriesChartTypes', converting to 'line' instead.`\n        );\n        s.chartType = \"line\";\n      }\n      return s;\n    });\n    const getSeriesChartType = (valueCol) => {\n      if (!this.savedCustomSeriesChartTypes || this.savedCustomSeriesChartTypes.length === 0) {\n        this.savedCustomSeriesChartTypes = this.seriesChartTypes;\n      }\n      const providedSeriesChartType = this.savedCustomSeriesChartTypes.find((s) => s.colId === valueCol.colId);\n      if (!providedSeriesChartType) {\n        if (valueCol.selected && !this.suppressComboChartWarnings) {\n          _warnOnce6(`no 'seriesChartType' found for colId = '${valueCol.colId}', defaulting to 'line'.`);\n        }\n        return {\n          colId: valueCol.colId,\n          chartType: \"line\",\n          secondaryAxis: false\n        };\n      }\n      return providedSeriesChartType;\n    };\n    const updatedSeriesChartTypes = this.chartDataModel.valueColState.map(getSeriesChartType);\n    this.seriesChartTypes = updatedSeriesChartTypes;\n    this.savedCustomSeriesChartTypes = updatedSeriesChartTypes;\n    this.suppressComboChartWarnings = true;\n  }\n  updateChartSeriesTypesForBuiltInCombos() {\n    const { chartType, valueColState } = this.chartDataModel;\n    const primaryChartType = chartType === \"columnLineCombo\" ? \"groupedColumn\" : \"stackedArea\";\n    const secondaryChartType = chartType === \"columnLineCombo\" ? \"line\" : \"groupedColumn\";\n    const selectedCols = valueColState.filter((cs) => cs.selected);\n    const lineIndex = Math.ceil(selectedCols.length / 2);\n    this.seriesChartTypes = selectedCols.map((valueCol, i) => {\n      const seriesType = i >= lineIndex ? secondaryChartType : primaryChartType;\n      return { colId: valueCol.colId, chartType: seriesType, secondaryAxis: false };\n    });\n  }\n};\n_ComboChartModel.SUPPORTED_COMBO_CHART_TYPES = [\"line\", \"groupedColumn\", \"stackedColumn\", \"area\", \"stackedArea\"];\nvar ComboChartModel = _ComboChartModel;\n\n// enterprise-modules/charts/src/charts/chartComp/model/chartDataModel.ts\nvar _ChartDataModel = class _ChartDataModel extends BeanStub10 {\n  constructor(params) {\n    super();\n    this.unlinked = false;\n    this.chartData = [];\n    this.valueColState = [];\n    this.dimensionColState = [];\n    this.columnNames = {};\n    this.crossFiltering = false;\n    this.grouping = false;\n    this.params = params;\n    this.chartId = params.chartId;\n    this.setParams(params);\n  }\n  wireBeans(beans) {\n    this.rangeService = beans.rangeService;\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  setParams(params) {\n    const {\n      chartType,\n      pivotChart,\n      chartThemeName,\n      switchCategorySeries,\n      aggFunc,\n      cellRange,\n      suppressChartRanges,\n      unlinkChart,\n      crossFiltering,\n      seriesGroupType\n    } = params;\n    this.chartType = chartType;\n    this.pivotChart = pivotChart ?? false;\n    this.chartThemeName = chartThemeName;\n    this.switchCategorySeries = !!switchCategorySeries;\n    this.aggFunc = aggFunc;\n    this.referenceCellRange = cellRange;\n    this.suppliedCellRange = cellRange;\n    this.suppressChartRanges = suppressChartRanges ?? false;\n    this.unlinked = !!unlinkChart;\n    this.crossFiltering = !!crossFiltering;\n    this.seriesGroupType = seriesGroupType;\n  }\n  postConstruct() {\n    this.datasource = this.createManagedBean(new ChartDatasource());\n    this.chartColumnService = this.createManagedBean(new ChartColumnService());\n    this.comboChartModel = this.createManagedBean(new ComboChartModel(this));\n    this.updateCellRanges({ setColsFromRange: true });\n    this.updateData();\n  }\n  updateModel(params) {\n    const { cellRange, seriesChartTypes } = params;\n    if (cellRange !== this.suppliedCellRange) {\n      this.dimensionCellRange = void 0;\n      this.valueCellRange = void 0;\n    }\n    this.setParams(params);\n    this.updateSelectedDimensions(cellRange?.columns);\n    this.updateCellRanges({ setColsFromRange: true });\n    const shouldUpdateComboModel = this.isComboChart() || seriesChartTypes;\n    if (shouldUpdateComboModel) {\n      this.comboChartModel.update(seriesChartTypes);\n    }\n    if (!this.unlinked) {\n      this.updateData();\n    }\n  }\n  updateCellRanges(params) {\n    const { updatedColState, resetOrder, maintainColState, setColsFromRange } = params ?? {};\n    if (this.valueCellRange) {\n      this.referenceCellRange = this.valueCellRange;\n    }\n    const { dimensionCols, valueCols } = this.chartColumnService.getChartColumns();\n    const allColsFromRanges = this.getAllColumnsFromRanges();\n    if (updatedColState) {\n      this.updateColumnState(updatedColState, resetOrder);\n    }\n    this.setDimensionCellRange(dimensionCols, allColsFromRanges, updatedColState);\n    this.setValueCellRange(valueCols, allColsFromRanges, setColsFromRange);\n    if (!updatedColState && !maintainColState) {\n      this.resetColumnState();\n      this.syncDimensionCellRange();\n    }\n    this.comboChartModel.updateSeriesChartTypes();\n  }\n  updateData() {\n    const { startRow, endRow } = this.getRowIndexes();\n    if (this.pivotChart) {\n      this.resetColumnState();\n    }\n    this.grouping = this.isGrouping();\n    const params = {\n      aggFunc: this.aggFunc,\n      dimensionCols: this.getSelectedDimensions(),\n      grouping: this.grouping,\n      pivoting: this.isPivotActive(),\n      crossFiltering: this.crossFiltering,\n      valueCols: this.getSelectedValueCols(),\n      startRow,\n      endRow,\n      isScatter: _includes4([\"scatter\", \"bubble\"], this.chartType)\n    };\n    const { chartData, columnNames, groupChartData } = this.datasource.getData(params);\n    this.chartData = chartData;\n    this.groupChartData = groupChartData;\n    this.columnNames = columnNames;\n    this.categoryAxisType = void 0;\n  }\n  isGrouping() {\n    const usingTreeData = this.gos.get(\"treeData\");\n    const groupedCols = usingTreeData ? null : this.chartColumnService.getRowGroupColumns();\n    const isGroupActive = usingTreeData || groupedCols && groupedCols.length > 0;\n    const colIds = this.getSelectedDimensions().map(({ colId }) => colId);\n    const displayedGroupCols = this.chartColumnService.getGroupDisplayColumns();\n    const groupDimensionSelected = displayedGroupCols.map((col) => col.getColId()).some((id) => colIds.includes(id));\n    return !!isGroupActive && groupDimensionSelected;\n  }\n  getSelectedValueCols() {\n    return this.valueColState.filter((cs) => cs.selected).map((cs) => cs.column);\n  }\n  getSelectedDimensions() {\n    return this.dimensionColState.filter((cs) => cs.selected);\n  }\n  getColDisplayName(col) {\n    return this.chartColumnService.getColDisplayName(col);\n  }\n  isPivotMode() {\n    return this.chartColumnService.isPivotMode();\n  }\n  getChartDataType(colId) {\n    const column = this.chartColumnService.getColumn(colId);\n    return column ? column.getColDef().chartDataType : void 0;\n  }\n  isPivotActive() {\n    return this.chartColumnService.isPivotActive();\n  }\n  createCellRange(type, ...columns) {\n    return {\n      id: this.chartId,\n      // set range ID to match chart ID so we can identify changes to the ranges for this chart\n      startRow: this.referenceCellRange.startRow,\n      endRow: this.referenceCellRange.endRow,\n      columns,\n      startColumn: type === CellRangeType.DIMENSION || this.referenceCellRange.startColumn == null ? columns[0] : this.referenceCellRange.startColumn,\n      type\n    };\n  }\n  getAllColumnsFromRanges() {\n    if (this.pivotChart) {\n      return new Set(this.chartColumnService.getAllDisplayedColumns());\n    }\n    const columns = this.dimensionCellRange || this.valueCellRange ? [] : this.referenceCellRange.columns;\n    if (this.dimensionCellRange) {\n      columns.push(...this.dimensionCellRange.columns);\n    }\n    if (this.valueCellRange) {\n      columns.push(...this.valueCellRange.columns);\n    }\n    return new Set(columns);\n  }\n  getRowIndexes() {\n    let startRow = 0, endRow = 0;\n    const { rangeService, valueCellRange, dimensionCellRange } = this;\n    const cellRange = valueCellRange || dimensionCellRange;\n    if (rangeService && cellRange) {\n      startRow = rangeService.getRangeStartRow(cellRange).rowIndex;\n      const endRowPosition = rangeService.getRangeEndRow(cellRange);\n      endRow = endRowPosition.rowPinned === \"bottom\" ? -1 : endRowPosition.rowIndex;\n    }\n    return { startRow, endRow };\n  }\n  resetColumnState() {\n    const { dimensionCols, valueCols } = this.chartColumnService.getChartColumns();\n    const allCols = this.getAllColumnsFromRanges();\n    const isInitialising = this.valueColState.length < 1;\n    this.dimensionColState = [];\n    this.valueColState = [];\n    const supportsMultipleDimensions = isHierarchical(getSeriesType(this.chartType));\n    let hasSelectedDimension = false;\n    let order = 1;\n    const aggFuncDimension = this.suppliedCellRange.columns[0];\n    dimensionCols.forEach((column) => {\n      const isAutoGroupCol = column.getColId() === \"ag-Grid-AutoColumn\";\n      let selected = false;\n      if (this.crossFiltering && this.aggFunc) {\n        if (aggFuncDimension.getColId() === column.getColId()) {\n          selected = true;\n        }\n      } else {\n        selected = isAutoGroupCol ? true : (!hasSelectedDimension || supportsMultipleDimensions) && allCols.has(column);\n      }\n      this.dimensionColState.push({\n        column,\n        colId: column.getColId(),\n        displayName: this.getColDisplayName(column),\n        selected,\n        order: order++\n      });\n      if (selected) {\n        hasSelectedDimension = true;\n      }\n    });\n    const defaultCategory = {\n      colId: _ChartDataModel.DEFAULT_CATEGORY,\n      displayName: this.chartTranslationService.translate(\"defaultCategory\"),\n      selected: !hasSelectedDimension,\n      // if no dimensions in range select the default\n      order: 0\n    };\n    this.dimensionColState.unshift(defaultCategory);\n    const valueColumnsFromReferenceRange = this.referenceCellRange.columns.filter(\n      (c) => valueCols.has(c)\n    );\n    valueCols.forEach((column) => {\n      if (isInitialising && _includes4(this.referenceCellRange.columns, column)) {\n        column = valueColumnsFromReferenceRange.shift();\n      }\n      this.valueColState.push({\n        column,\n        colId: column.getColId(),\n        displayName: this.getColDisplayName(column),\n        selected: allCols.has(column),\n        order: order++\n      });\n    });\n  }\n  updateColumnState(updatedCol, resetOrder) {\n    const idsMatch = (cs) => cs.colId === updatedCol.colId;\n    const { dimensionColState, valueColState } = this;\n    const matchedDimensionColState = dimensionColState.find(idsMatch);\n    const matchedValueColState = valueColState.find(idsMatch);\n    if (matchedDimensionColState) {\n      const supportsMultipleDimensions = isHierarchical(getSeriesType(this.chartType));\n      if (!supportsMultipleDimensions) {\n        const selectedColumnState = updatedCol.selected ? matchedDimensionColState : dimensionColState.filter((cs) => cs !== matchedDimensionColState).find(({ selected }) => selected);\n        dimensionColState.forEach((cs) => cs.selected = cs === selectedColumnState);\n      } else {\n        matchedDimensionColState.selected = updatedCol.selected;\n      }\n    } else if (matchedValueColState) {\n      matchedValueColState.selected = updatedCol.selected;\n    }\n    const allColumns = [...dimensionColState, ...valueColState];\n    const orderedColIds = [];\n    if (!resetOrder) {\n      allColumns.forEach((col, i) => {\n        if (i === updatedCol.order) {\n          orderedColIds.push(updatedCol.colId);\n        }\n        if (col.colId !== updatedCol.colId) {\n          orderedColIds.push(col.colId);\n        }\n      });\n      allColumns.forEach((col) => {\n        const order = orderedColIds.indexOf(col.colId);\n        col.order = order >= 0 ? orderedColIds.indexOf(col.colId) : allColumns.length - 1;\n      });\n    }\n    this.reorderColState();\n  }\n  reorderColState() {\n    const ascColStateOrder = (a, b) => a.order - b.order;\n    this.dimensionColState.sort(ascColStateOrder);\n    this.valueColState.sort(ascColStateOrder);\n  }\n  setDimensionCellRange(dimensionCols, colsInRange, updatedColState) {\n    this.dimensionCellRange = void 0;\n    const supportsMultipleDimensions = isHierarchical(getSeriesType(this.chartType));\n    if (!updatedColState && !this.dimensionColState.length) {\n      const selectedCols = new Array();\n      dimensionCols.forEach((col) => {\n        if (selectedCols.length > 0 && !supportsMultipleDimensions || !colsInRange.has(col)) {\n          return;\n        }\n        selectedCols.push(col);\n      });\n      if (selectedCols.length > 0) {\n        this.dimensionCellRange = this.createCellRange(CellRangeType.DIMENSION, ...selectedCols);\n      }\n      return;\n    }\n    let selectedDimensionColStates = updatedColState ? [updatedColState] : [];\n    if (this.crossFiltering && this.aggFunc) {\n      const aggFuncDimension = this.suppliedCellRange.columns[0];\n      selectedDimensionColStates = this.dimensionColState.filter(\n        (cs) => cs.colId === aggFuncDimension.getColId()\n      );\n    } else if (supportsMultipleDimensions || selectedDimensionColStates.length === 0 || selectedDimensionColStates.some(({ column }) => !column || !dimensionCols.has(column))) {\n      selectedDimensionColStates = this.dimensionColState.filter((cs) => cs.selected);\n    }\n    const isDefaultCategory = selectedDimensionColStates.length === 1 ? selectedDimensionColStates[0].colId === _ChartDataModel.DEFAULT_CATEGORY : false;\n    const selectedColumns = selectedDimensionColStates.map(({ column }) => column).filter((value) => value != null);\n    if (selectedColumns.length > 0 && !isDefaultCategory) {\n      this.dimensionCellRange = this.createCellRange(CellRangeType.DIMENSION, ...selectedColumns);\n    }\n  }\n  setValueCellRange(valueCols, colsInRange, setColsFromRange) {\n    this.valueCellRange = void 0;\n    const selectedValueCols = [];\n    const maxSelection = getMaxNumSeries(this.chartType);\n    let numSelected = 0;\n    valueCols.forEach((col) => {\n      if (setColsFromRange) {\n        if ((maxSelection == null || numSelected < maxSelection) && colsInRange.has(col)) {\n          selectedValueCols.push(col);\n          numSelected++;\n        }\n      } else {\n        if (this.valueColState.some((colState) => colState.selected && colState.colId === col.getColId())) {\n          selectedValueCols.push(col);\n        }\n      }\n    });\n    if (selectedValueCols.length > 0) {\n      let orderedColIds = [];\n      if (this.valueColState.length > 0) {\n        orderedColIds = this.valueColState.map((c) => c.colId);\n      } else {\n        colsInRange.forEach((c) => orderedColIds.push(c.getColId()));\n      }\n      selectedValueCols.sort((a, b) => orderedColIds.indexOf(a.getColId()) - orderedColIds.indexOf(b.getColId()));\n      this.valueCellRange = this.createCellRange(CellRangeType.VALUE, ...selectedValueCols);\n    }\n  }\n  resetCellRanges(dimension, value) {\n    if (!dimension && !value) {\n      return;\n    }\n    const { dimensionCols, valueCols } = this.chartColumnService.getChartColumns();\n    const allColsFromRanges = this.getAllColumnsFromRanges();\n    if (dimension) {\n      this.setDimensionCellRange(dimensionCols, allColsFromRanges);\n    }\n    if (value) {\n      this.setValueCellRange(valueCols, allColsFromRanges);\n    }\n  }\n  updateSelectedDimensions(columns) {\n    const colIdSet = new Set(columns.map((column) => column.getColId()));\n    const supportsMultipleDimensions = isHierarchical(getSeriesType(this.chartType));\n    if (!supportsMultipleDimensions) {\n      const foundColState = this.dimensionColState.find((colState) => colIdSet.has(colState.colId)) || this.dimensionColState[0];\n      const selectedColumnId = foundColState.colId;\n      this.dimensionColState = this.dimensionColState.map((colState) => ({\n        ...colState,\n        selected: colState.colId === selectedColumnId\n      }));\n    } else {\n      const foundColStates = this.dimensionColState.filter((colState) => colIdSet.has(colState.colId));\n      const selectedColumnIds = new Set(foundColStates.map((colState) => colState.colId));\n      this.dimensionColState = this.dimensionColState.map((colState) => ({\n        ...colState,\n        selected: selectedColumnIds.has(colState.colId)\n      }));\n    }\n  }\n  syncDimensionCellRange() {\n    const selectedDimensions = this.getSelectedDimensions();\n    if (selectedDimensions.length === 0)\n      return;\n    const selectedCols = selectedDimensions.map(({ column }) => column).filter((value) => value != null);\n    if (selectedCols.length > 0) {\n      this.dimensionCellRange = this.createCellRange(CellRangeType.DIMENSION, ...selectedCols);\n    }\n  }\n  isComboChart(chartType) {\n    return isComboChart(chartType ?? this.chartType);\n  }\n};\n_ChartDataModel.DEFAULT_CATEGORY = \"AG-GRID-DEFAULT-CATEGORY\";\nvar ChartDataModel = _ChartDataModel;\n\n// enterprise-modules/charts/src/charts/chartComp/utils/chartParamsValidator.ts\nimport { _warnOnce as _warnOnce7 } from \"@ag-grid-community/core\";\nimport { _ModuleSupport } from \"ag-charts-community\";\nvar validateIfDefined = (validationFn) => {\n  return (value) => {\n    if (value == void 0)\n      return true;\n    return validationFn(value);\n  };\n};\nvar isString = (value) => typeof value === \"string\";\nvar isBoolean = (value) => typeof value === \"boolean\";\nvar isValidSeriesChartType = (value) => typeof value === \"object\";\nvar createWarnMessage = (property, expectedType) => (value) => `AG Grid - unable to update chart as invalid params supplied:  \\`${property}: ${value}\\`, expected ${expectedType}.`;\nvar createEnterpriseMessage = (feature) => {\n  const url = \"https://www.ag-grid.com/javascript-data-grid/integrated-charts-installation/\";\n  return `${feature} is not supported in AG Charts Community (either 'ag-grid-charts-enterprise' or '@ag-grid-enterprise/charts-enterprise' hasn't been loaded). See ${url} for more details.`;\n};\nvar _ChartParamsValidator = class _ChartParamsValidator {\n  static isEnterprise() {\n    return _ModuleSupport.enterpriseModule.isEnterprise;\n  }\n  static isValidChartType(value) {\n    return !!getSeriesTypeIfExists(value) || isComboChart(value);\n  }\n  static isLegacyChartType(value) {\n    return _ChartParamsValidator.legacyChartTypes.includes(value);\n  }\n  static validateUpdateParams(params) {\n    const paramsToValidate = params;\n    switch (paramsToValidate.type) {\n      case \"rangeChartUpdate\":\n        return _ChartParamsValidator.validateUpdateRangeChartParams(params);\n      case \"pivotChartUpdate\":\n        return _ChartParamsValidator.validateUpdatePivotChartParams(params);\n      case \"crossFilterChartUpdate\":\n        return _ChartParamsValidator.validateUpdateCrossFilterChartParams(\n          params\n        );\n      default:\n        _warnOnce7(\n          `Invalid value supplied for 'type': ${params.type}. It must be either 'rangeChartUpdate', 'pivotChartUpdate', or 'crossFilterChartUpdate'.`\n        );\n        return false;\n    }\n  }\n  static validateCreateParams(params) {\n    return validateProperties(params, [\n      _ChartParamsValidator.enterpriseChartTypeValidation,\n      _ChartParamsValidator.switchCategorySeriesValidation\n    ]);\n  }\n  static validateUpdateRangeChartParams(params) {\n    const validations = [\n      ..._ChartParamsValidator.commonUpdateValidations,\n      _ChartParamsValidator.enterpriseChartTypeValidation,\n      ..._ChartParamsValidator.cellRangeValidations,\n      {\n        property: \"seriesChartTypes\",\n        validationFn: (value) => value === void 0 || Array.isArray(value) && value.every(isValidSeriesChartType),\n        warnMessage: createWarnMessage(\"seriesChartTypes\", \"Array of SeriesChartType\")\n      }\n    ];\n    return validateProperties(\n      params,\n      validations,\n      [\n        ..._ChartParamsValidator.baseUpdateChartParams,\n        \"cellRange\",\n        \"suppressChartRanges\",\n        \"switchCategorySeries\",\n        \"aggFunc\",\n        \"seriesChartTypes\",\n        \"seriesGroupType\"\n      ],\n      \"UpdateRangeChartParams\"\n    );\n  }\n  static validateUpdatePivotChartParams(params) {\n    const validations = [..._ChartParamsValidator.commonUpdateValidations];\n    return validateProperties(\n      params,\n      validations,\n      [..._ChartParamsValidator.baseUpdateChartParams],\n      \"UpdatePivotChartParams\"\n    );\n  }\n  static validateUpdateCrossFilterChartParams(params) {\n    const validations = [\n      ..._ChartParamsValidator.commonUpdateValidations,\n      ..._ChartParamsValidator.cellRangeValidations\n    ];\n    return validateProperties(\n      params,\n      validations,\n      [..._ChartParamsValidator.baseUpdateChartParams, \"cellRange\", \"suppressChartRanges\", \"aggFunc\"],\n      \"UpdateCrossFilterChartParams\"\n    );\n  }\n};\n_ChartParamsValidator.legacyChartTypes = [\"doughnut\"];\n_ChartParamsValidator.baseUpdateChartParams = [\n  \"type\",\n  \"chartId\",\n  \"chartType\",\n  \"chartThemeName\",\n  \"chartThemeOverrides\",\n  \"unlinkChart\"\n];\n_ChartParamsValidator.validateChartType = validateIfDefined((chartType) => {\n  if (_ChartParamsValidator.isValidChartType(chartType))\n    return true;\n  if (_ChartParamsValidator.isLegacyChartType(chartType)) {\n    const renamedChartType = getCanonicalChartType(chartType);\n    _warnOnce7(`The chart type '${chartType}' has been deprecated. Please use '${renamedChartType}' instead.`);\n    return renamedChartType;\n  }\n  return false;\n});\n_ChartParamsValidator.validateAgChartThemeOverrides = validateIfDefined((themeOverrides) => {\n  return typeof themeOverrides === \"object\";\n});\n_ChartParamsValidator.validateChartParamsCellRange = validateIfDefined((cellRange) => {\n  return typeof cellRange === \"object\";\n});\n_ChartParamsValidator.validateAggFunc = validateIfDefined((aggFunc) => {\n  return typeof aggFunc === \"string\" || typeof aggFunc === \"function\";\n});\n_ChartParamsValidator.enterpriseChartTypeValidation = {\n  property: \"chartType\",\n  validationFn: validateIfDefined(\n    (chartType) => _ChartParamsValidator.isEnterprise() || !chartType || !isEnterpriseChartType(chartType)\n  ),\n  warnMessage: (chartType) => createEnterpriseMessage(`The '${chartType}' chart type`)\n};\n_ChartParamsValidator.switchCategorySeriesValidation = {\n  property: \"switchCategorySeries\",\n  validationFn: validateIfDefined((switchCategorySeries) => {\n    if (!switchCategorySeries || _ChartParamsValidator.isEnterprise()) {\n      return true;\n    }\n    return void 0;\n  }),\n  warnMessage: () => createEnterpriseMessage(`'switchCategorySeries' has been ignored as it`),\n  warnIfFixed: true\n};\n_ChartParamsValidator.commonUpdateValidations = [\n  { property: \"chartId\", validationFn: isString, warnMessage: createWarnMessage(\"chartId\", \"string\") },\n  {\n    property: \"chartType\",\n    validationFn: _ChartParamsValidator.validateChartType,\n    warnMessage: createWarnMessage(\"chartType\", \"ChartType\")\n  },\n  {\n    property: \"chartThemeName\",\n    validationFn: isString,\n    warnMessage: createWarnMessage(\"chartThemeName\", \"string\")\n  },\n  {\n    property: \"chartThemeOverrides\",\n    validationFn: _ChartParamsValidator.validateAgChartThemeOverrides,\n    warnMessage: createWarnMessage(\"chartThemeOverrides\", \"AgChartThemeOverrides\")\n  },\n  { property: \"unlinkChart\", validationFn: isBoolean, warnMessage: createWarnMessage(\"unlinkChart\", \"boolean\") }\n];\n_ChartParamsValidator.cellRangeValidations = [\n  {\n    property: \"cellRange\",\n    validationFn: _ChartParamsValidator.validateChartParamsCellRange,\n    warnMessage: createWarnMessage(\"cellRange\", \"ChartParamsCellRange\")\n  },\n  {\n    property: \"suppressChartRanges\",\n    validationFn: isBoolean,\n    warnMessage: createWarnMessage(\"suppressChartRanges\", \"boolean\")\n  },\n  {\n    property: \"aggFunc\",\n    validationFn: _ChartParamsValidator.validateAggFunc,\n    warnMessage: createWarnMessage(\"aggFunc\", \"string or IAggFunc\")\n  },\n  _ChartParamsValidator.switchCategorySeriesValidation\n];\nvar ChartParamsValidator = _ChartParamsValidator;\nfunction validateProperties(params, validations, validPropertyNames, paramsType) {\n  let validatedProperties = void 0;\n  for (const validation of validations) {\n    const { property, validationFn, warnMessage, warnIfFixed } = validation;\n    if (property in params) {\n      const value = params[property];\n      const validationResult = validationFn(value);\n      if (validationResult === true)\n        continue;\n      if (validationResult === false) {\n        _warnOnce7(warnMessage(value));\n        return false;\n      }\n      validatedProperties = validatedProperties || { ...params };\n      validatedProperties[property] = validationResult;\n      if (warnIfFixed) {\n        _warnOnce7(warnMessage(value));\n      }\n    }\n  }\n  if (validPropertyNames) {\n    for (const property in params) {\n      if (!validPropertyNames.includes(property)) {\n        _warnOnce7(`Unexpected property supplied. ${paramsType} does not contain: \\`${property}\\`.`);\n        return false;\n      }\n    }\n  }\n  if (validatedProperties)\n    return validatedProperties;\n  return true;\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartController.ts\nvar DEFAULT_THEMES = [\"ag-default\", \"ag-material\", \"ag-sheets\", \"ag-polychroma\", \"ag-vivid\"];\nvar ChartController = class extends BeanStub11 {\n  constructor(model) {\n    super();\n    this.model = model;\n    this.isEnterprise = () => _ModuleSupport2.enterpriseModule.isEnterprise;\n  }\n  wireBeans(beans) {\n    this.rangeService = beans.rangeService;\n  }\n  postConstruct() {\n    this.setChartRange();\n    if (this.model.unlinked) {\n      if (this.rangeService) {\n        this.rangeService.setCellRanges([]);\n      }\n    }\n    const listener = this.updateForGridChange.bind(this);\n    this.addManagedEventListeners({\n      rangeSelectionChanged: (event) => {\n        if (event.id && event.id === this.model.chartId) {\n          this.updateForRangeChange();\n        }\n      },\n      columnMoved: listener,\n      columnPinned: listener,\n      columnVisible: listener,\n      columnRowGroupChanged: listener,\n      modelUpdated: listener,\n      cellValueChanged: this.updateForDataChange.bind(this)\n    });\n  }\n  update(params) {\n    if (!this.validUpdateType(params))\n      return false;\n    const validationResult = ChartParamsValidator.validateUpdateParams(params);\n    if (!validationResult)\n      return false;\n    const validParams = validationResult === true ? params : validationResult;\n    this.applyValidatedChartParams(validParams);\n    return true;\n  }\n  applyValidatedChartParams(params) {\n    const { chartId, chartType, chartThemeName, unlinkChart } = params;\n    const common = {\n      chartId,\n      pivotChart: this.model.pivotChart,\n      chartType: chartType ?? this.model.chartType,\n      chartThemeName: chartThemeName ?? this.model.chartThemeName,\n      unlinkChart: unlinkChart ?? this.model.unlinked,\n      cellRange: this.model.suppliedCellRange,\n      switchCategorySeries: this.model.switchCategorySeries,\n      aggFunc: this.model.aggFunc,\n      seriesChartTypes: void 0,\n      suppressChartRanges: false,\n      crossFiltering: false\n    };\n    const chartModelParams = { ...common };\n    switch (params.type) {\n      case \"rangeChartUpdate\":\n        chartModelParams.cellRange = this.createCellRange(params) ?? this.model.suppliedCellRange;\n        chartModelParams.switchCategorySeries = params.switchCategorySeries ?? this.model.switchCategorySeries;\n        chartModelParams.aggFunc = params.aggFunc ?? this.model.aggFunc;\n        chartModelParams.seriesChartTypes = params.seriesChartTypes;\n        chartModelParams.suppressChartRanges = params.suppressChartRanges ?? this.model.suppressChartRanges;\n        chartModelParams.seriesGroupType = params.seriesGroupType ?? this.model.seriesGroupType;\n        break;\n      case \"crossFilterChartUpdate\":\n        chartModelParams.cellRange = this.createCellRange(params) ?? this.model.suppliedCellRange;\n        chartModelParams.switchCategorySeries = false;\n        chartModelParams.aggFunc = params.aggFunc ?? this.model.aggFunc;\n        chartModelParams.crossFiltering = true;\n        chartModelParams.suppressChartRanges = params.suppressChartRanges ?? this.model.suppressChartRanges;\n        break;\n      case \"pivotChartUpdate\":\n        chartModelParams.switchCategorySeries = false;\n        break;\n    }\n    this.model.updateModel(chartModelParams);\n    const removeChartCellRanges = chartModelParams.unlinkChart || chartModelParams.suppressChartRanges;\n    removeChartCellRanges ? this.rangeService?.setCellRanges([]) : this.setChartRange();\n  }\n  updateForGridChange(params) {\n    if (this.model.unlinked) {\n      return;\n    }\n    const { maintainColState, setColsFromRange } = params ?? {};\n    this.model.updateCellRanges({ maintainColState, setColsFromRange });\n    this.model.updateData();\n    this.setChartRange();\n  }\n  updateForDataChange() {\n    if (this.model.unlinked) {\n      return;\n    }\n    this.model.updateData();\n    this.raiseChartModelUpdateEvent();\n  }\n  updateForRangeChange() {\n    this.updateForGridChange({ setColsFromRange: true });\n    this.raiseChartRangeSelectionChangedEvent();\n  }\n  updateForPanelChange(params) {\n    this.model.updateCellRanges(params);\n    this.model.updateData();\n    if (params.skipAnimation) {\n      this.getChartProxy().getChartRef().skipAnimations();\n    }\n    this.setChartRange();\n    this.raiseChartRangeSelectionChangedEvent();\n  }\n  updateThemeOverrides(updatedOverrides) {\n    this.chartProxy.updateThemeOverrides(updatedOverrides);\n  }\n  getChartUpdateParams(updatedOverrides) {\n    const selectedCols = this.getSelectedValueColState();\n    const fields = selectedCols.map((c) => ({ colId: c.colId, displayName: c.displayName }));\n    const data = this.getChartData();\n    const selectedDimensions = this.getSelectedDimensions();\n    const params = {\n      data,\n      groupData: this.model.groupChartData,\n      grouping: this.isGrouping(),\n      categories: selectedDimensions.map((selectedDimension) => ({\n        id: selectedDimension.colId,\n        name: selectedDimension.displayName,\n        chartDataType: this.model.categoryAxisType ?? this.model.getChartDataType(selectedDimension.colId)\n      })),\n      fields,\n      chartId: this.getChartId(),\n      getCrossFilteringContext: () => ({ lastSelectedChartId: \"xxx\" }),\n      //this.params.crossFilteringContext, //TODO\n      seriesChartTypes: this.getSeriesChartTypes(),\n      updatedOverrides,\n      seriesGroupType: this.model.seriesGroupType\n    };\n    return this.isCategorySeriesSwitched() ? this.invertCategorySeriesParams(params) : params;\n  }\n  invertCategorySeriesParams(params) {\n    const [category] = params.categories;\n    const categories = [{ id: ChartDataModel.DEFAULT_CATEGORY, name: \"\" }];\n    const fields = params.data.map((value, index) => {\n      const categoryKey = `${category.id}:${index}`;\n      const categoryValue = value[category.id];\n      const seriesLabel = categoryValue == null ? \"\" : String(categoryValue);\n      return { colId: categoryKey, displayName: seriesLabel };\n    });\n    const data = params.fields.map((field) => {\n      const row = {\n        [ChartDataModel.DEFAULT_CATEGORY]: field.displayName\n      };\n      for (const [index, value] of params.data.entries()) {\n        const categoryKey = `${category.id}:${index}`;\n        const seriesLabelValue = value[field.colId];\n        row[categoryKey] = seriesLabelValue;\n      }\n      return row;\n    });\n    return {\n      ...params,\n      categories,\n      fields,\n      data\n    };\n  }\n  getChartModel() {\n    const modelType = this.model.pivotChart ? \"pivot\" : \"range\";\n    const seriesChartTypes = this.isComboChart() ? this.model.comboChartModel.seriesChartTypes : void 0;\n    return {\n      modelType,\n      chartId: this.model.chartId,\n      chartType: this.model.chartType,\n      chartThemeName: this.getChartThemeName(),\n      chartOptions: this.chartProxy.getChartThemeOverrides(),\n      chartPalette: this.chartProxy.getChartPalette(),\n      cellRange: this.getCellRangeParams(),\n      switchCategorySeries: this.model.switchCategorySeries,\n      suppressChartRanges: this.model.suppressChartRanges,\n      aggFunc: this.model.aggFunc,\n      unlinkChart: this.model.unlinked,\n      seriesChartTypes,\n      seriesGroupType: this.model.seriesGroupType\n    };\n  }\n  getChartId() {\n    return this.model.chartId;\n  }\n  getChartData() {\n    return this.model.chartData;\n  }\n  getChartType() {\n    return this.model.chartType;\n  }\n  setChartType(chartType) {\n    this.updateMultiSeriesAndCategory(this.model.chartType, chartType);\n    this.model.chartType = chartType;\n    this.model.comboChartModel.updateSeriesChartTypes();\n    this.model.switchCategorySeries = false;\n    this.model.categoryAxisType = void 0;\n    this.model.seriesGroupType = void 0;\n    this.raiseChartModelUpdateEvent();\n    this.raiseChartOptionsChangedEvent();\n  }\n  isCategorySeriesSwitched() {\n    return this.model.switchCategorySeries && !this.model.isGrouping();\n  }\n  switchCategorySeries(inverted) {\n    if (!supportsInvertedCategorySeries(this.getChartType()))\n      return;\n    this.model.switchCategorySeries = inverted;\n    this.raiseChartModelUpdateEvent();\n  }\n  getAggFunc() {\n    return this.model.aggFunc;\n  }\n  setAggFunc(value, silent) {\n    if (this.model.aggFunc === value)\n      return;\n    this.model.aggFunc = value;\n    if (silent)\n      return;\n    this.model.updateData();\n    this.raiseChartModelUpdateEvent();\n  }\n  updateMultiSeriesAndCategory(previousChartType, chartType) {\n    const updateForMax = (columns, maxNum) => {\n      let numSelected = 0;\n      for (const colState of columns) {\n        if (!colState.selected)\n          continue;\n        if (numSelected >= maxNum) {\n          colState.selected = false;\n        } else {\n          numSelected++;\n        }\n      }\n      if (numSelected === 0) {\n        columns[0].selected = true;\n      }\n    };\n    const maxNumDimensions = getMaxNumCategories(chartType);\n    const maxNumSeries = getMaxNumSeries(chartType);\n    const updateDimensionColState = maxNumDimensions != null && (getMaxNumCategories(previousChartType) ?? 100) > (maxNumDimensions ?? 100);\n    const updateValueColState = maxNumSeries != null && (getMaxNumSeries(previousChartType) ?? 100) > (maxNumSeries ?? 100);\n    if (updateDimensionColState) {\n      updateForMax(this.model.dimensionColState, maxNumDimensions);\n    }\n    if (updateValueColState) {\n      updateForMax(this.model.valueColState, maxNumSeries);\n    }\n    if (updateDimensionColState || updateValueColState) {\n      this.model.resetCellRanges(updateDimensionColState, updateValueColState);\n      this.setChartRange(true);\n    }\n  }\n  setChartThemeName(chartThemeName, silent) {\n    this.model.chartThemeName = chartThemeName;\n    if (!silent) {\n      this.raiseChartModelUpdateEvent();\n      this.raiseChartOptionsChangedEvent();\n    }\n  }\n  getChartThemeName() {\n    return this.model.chartThemeName;\n  }\n  isPivotChart() {\n    return this.model.pivotChart;\n  }\n  isPivotMode() {\n    return this.model.isPivotMode();\n  }\n  isGrouping() {\n    return this.model.isGrouping();\n  }\n  isCrossFilterChart() {\n    return this.model.crossFiltering;\n  }\n  getThemeNames() {\n    return this.gos.get(\"chartThemes\") || DEFAULT_THEMES;\n  }\n  getThemes() {\n    const themeNames = this.getThemeNames();\n    return themeNames.map((themeName) => {\n      const stockTheme = isStockTheme(themeName);\n      const theme = stockTheme ? themeName : this.chartProxy.lookupCustomChartTheme(themeName);\n      return _Theme2.getChartTheme(theme);\n    });\n  }\n  getPalettes() {\n    const themes = this.getThemes();\n    return themes.map((theme) => {\n      return theme.palette;\n    });\n  }\n  getThemeTemplateParameters() {\n    const themes = this.getThemes();\n    return themes.map((theme) => {\n      return theme.getTemplateParameters();\n    });\n  }\n  getValueColState() {\n    return this.model.valueColState.map(this.displayNameMapper.bind(this));\n  }\n  getSelectedValueColState() {\n    return this.getValueColState().filter((cs) => cs.selected);\n  }\n  getSelectedDimensions() {\n    return this.model.getSelectedDimensions();\n  }\n  displayNameMapper(col) {\n    const columnNames = this.model.columnNames[col.colId];\n    col.displayName = columnNames ? columnNames.join(\" - \") : this.model.getColDisplayName(col.column);\n    return col;\n  }\n  getColStateForMenu() {\n    return { dimensionCols: this.model.dimensionColState, valueCols: this.getValueColState() };\n  }\n  setChartRange(silent = false) {\n    if (this.rangeService && !this.model.suppressChartRanges && !this.model.unlinked) {\n      this.rangeService.setCellRanges(this.getCellRanges());\n    }\n    if (!silent) {\n      this.raiseChartModelUpdateEvent();\n    }\n  }\n  detachChartRange() {\n    this.model.unlinked = !this.model.unlinked;\n    if (this.model.unlinked) {\n      if (this.rangeService) {\n        this.rangeService.setCellRanges([]);\n      }\n    } else {\n      this.updateForGridChange();\n    }\n    this.dispatchLocalEvent({ type: \"chartLinkedChanged\" });\n  }\n  setChartProxy(chartProxy) {\n    this.chartProxy = chartProxy;\n  }\n  getChartProxy() {\n    return this.chartProxy;\n  }\n  isActiveXYChart() {\n    return [\"scatter\", \"bubble\"].includes(this.getChartType());\n  }\n  isChartLinked() {\n    return !this.model.unlinked;\n  }\n  customComboExists() {\n    const savedCustomSeriesChartTypes = this.model.comboChartModel.savedCustomSeriesChartTypes;\n    return savedCustomSeriesChartTypes && savedCustomSeriesChartTypes.length > 0;\n  }\n  getSeriesChartTypes() {\n    return this.model.comboChartModel.seriesChartTypes;\n  }\n  isComboChart(chartType) {\n    return this.model.isComboChart(chartType);\n  }\n  updateSeriesChartType(colId, chartType, secondaryAxis) {\n    const seriesChartType = this.model.comboChartModel.seriesChartTypes.find((s) => s.colId === colId);\n    if (seriesChartType) {\n      const updateChartType = this.model.chartType !== \"customCombo\";\n      if (updateChartType) {\n        this.model.chartType = \"customCombo\";\n      }\n      const prevSeriesChartType = seriesChartType.chartType;\n      if (chartType != null) {\n        seriesChartType.chartType = chartType;\n      }\n      if (secondaryAxis != null) {\n        seriesChartType.secondaryAxis = secondaryAxis;\n      }\n      this.model.comboChartModel.savedCustomSeriesChartTypes = this.model.comboChartModel.seriesChartTypes;\n      this.model.comboChartModel.updateSeriesChartTypes();\n      this.updateForDataChange();\n      if (updateChartType) {\n        this.dispatchLocalEvent({\n          type: \"chartTypeChanged\"\n        });\n      }\n      if (prevSeriesChartType !== chartType) {\n        this.dispatchLocalEvent({\n          type: \"chartSeriesChartTypeChanged\"\n        });\n      }\n      this.raiseChartOptionsChangedEvent();\n    }\n  }\n  getActiveSeriesChartTypes() {\n    const selectedColIds = this.getSelectedValueColState().map((c) => c.colId);\n    return this.getSeriesChartTypes().filter((s) => selectedColIds.includes(s.colId));\n  }\n  getChartSeriesTypes(chartType) {\n    const targetChartType = chartType ?? this.getChartType();\n    return this.isComboChart(targetChartType) ? [\"line\", \"bar\", \"area\"] : [getSeriesType(targetChartType)];\n  }\n  getChartSeriesType() {\n    const seriesChartTypes = this.getSeriesChartTypes();\n    if (seriesChartTypes.length === 0) {\n      return \"bar\";\n    }\n    const ct = seriesChartTypes[0].chartType;\n    if (ct === \"columnLineCombo\") {\n      return \"bar\";\n    }\n    if (ct === \"areaColumnCombo\") {\n      return \"area\";\n    }\n    return getSeriesType(ct);\n  }\n  getCellRanges() {\n    return [this.model.dimensionCellRange, this.model.valueCellRange].filter((r) => r);\n  }\n  createCellRange(params) {\n    return params.cellRange && this.rangeService?.createPartialCellRangeFromRangeParams(params.cellRange, true);\n  }\n  validUpdateType(params) {\n    if (!params.type) {\n      _warnOnce8(\n        `Unable to update chart as the 'type' is missing. It must be either 'rangeChartUpdate', 'pivotChartUpdate', or 'crossFilterChartUpdate'.`\n      );\n      return false;\n    }\n    const chartTypeMap = {\n      \"Range Chart\": () => !this.isPivotChart() && !this.isCrossFilterChart(),\n      \"Pivot Chart\": () => this.isPivotChart(),\n      \"Cross Filter Chart\": () => this.isCrossFilterChart()\n    };\n    const currentChartType = Object.keys(chartTypeMap).find((type) => chartTypeMap[type]()) ?? \"Range Chart\";\n    const valid = params.type === `${currentChartType[0].toLowerCase()}${currentChartType.slice(1).replace(/ /g, \"\")}Update`;\n    if (!valid) {\n      _warnOnce8(\n        `Unable to update chart as a '${params.type}' update type is not permitted on a ${currentChartType}.`\n      );\n    }\n    return valid;\n  }\n  getCellRangeParams() {\n    const cellRanges = this.getCellRanges();\n    const firstCellRange = cellRanges[0];\n    const startRow = firstCellRange && firstCellRange.startRow || null;\n    const endRow = firstCellRange && firstCellRange.endRow || null;\n    return {\n      rowStartIndex: startRow && startRow.rowIndex,\n      rowStartPinned: startRow && startRow.rowPinned,\n      rowEndIndex: endRow && endRow.rowIndex,\n      rowEndPinned: endRow && endRow.rowPinned,\n      columns: cellRanges.reduce(\n        (columns, value) => columns.concat(value.columns.map((c) => c.getId())),\n        []\n      )\n    };\n  }\n  setCategoryAxisType(categoryAxisType) {\n    this.model.categoryAxisType = categoryAxisType;\n    this.raiseChartModelUpdateEvent();\n  }\n  getSeriesGroupType() {\n    return this.model.seriesGroupType ?? this.chartProxy.getSeriesGroupType();\n  }\n  setSeriesGroupType(seriesGroupType) {\n    this.model.seriesGroupType = seriesGroupType;\n    this.raiseChartModelUpdateEvent();\n  }\n  raiseChartModelUpdateEvent() {\n    this.dispatchLocalEvent({ type: \"chartModelUpdate\" });\n  }\n  raiseChartUpdatedEvent() {\n    this.dispatchLocalEvent({ type: \"chartUpdated\" });\n  }\n  raiseChartApiUpdateEvent() {\n    this.dispatchLocalEvent({ type: \"chartApiUpdate\" });\n  }\n  raiseChartOptionsChangedEvent() {\n    const { chartId, chartType } = this.getChartModel();\n    const event = {\n      type: \"chartOptionsChanged\",\n      chartId,\n      chartType,\n      chartThemeName: this.getChartThemeName(),\n      chartOptions: this.chartProxy.getChartThemeOverrides()\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  raiseChartRangeSelectionChangedEvent() {\n    const event = {\n      type: \"chartRangeSelectionChanged\",\n      id: this.model.chartId,\n      chartId: this.model.chartId,\n      cellRange: this.getCellRangeParams()\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  destroy() {\n    super.destroy();\n    if (this.rangeService) {\n      this.rangeService.setCellRanges([]);\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/chartProxy.ts\nimport { AgCharts, _ModuleSupport as _ModuleSupport3, _Theme as _Theme3 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/charts/chartComp/utils/integration.ts\nfunction deproxy(chartOrProxy) {\n  if (chartOrProxy.chart != null) {\n    return chartOrProxy.chart;\n  }\n  return chartOrProxy;\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/chartProxy.ts\nvar ChartProxy = class {\n  constructor(chartProxyParams) {\n    this.chartProxyParams = chartProxyParams;\n    this.clearThemeOverrides = false;\n    this.isEnterpriseCharts = _ModuleSupport3.enterpriseModule.isEnterprise;\n    this.chart = chartProxyParams.chartInstance;\n    this.chartType = chartProxyParams.chartType;\n    this.crossFiltering = chartProxyParams.crossFiltering;\n    this.crossFilterCallback = chartProxyParams.crossFilterCallback;\n    this.standaloneChartType = getSeriesType(this.chartType);\n    if (this.chart == null) {\n      this.chart = AgCharts.create(this.getCommonChartOptions());\n    } else {\n      this.clearThemeOverrides = true;\n    }\n  }\n  crossFilteringReset() {\n  }\n  update(params) {\n    this.getChartRef().update(this.getUpdateOptions(params, this.getCommonChartOptions(params.updatedOverrides)));\n  }\n  updateThemeOverrides(themeOverrides) {\n    this.getChartRef().updateDelta({ theme: { overrides: themeOverrides } });\n  }\n  getChart() {\n    return deproxy(this.chart);\n  }\n  getChartRef() {\n    return this.chart;\n  }\n  downloadChart(dimensions, fileName, fileFormat) {\n    const { chart } = this;\n    const rawChart = deproxy(chart);\n    const imageFileName = fileName || (rawChart.title ? rawChart.title.text : \"chart\");\n    const { width, height } = dimensions || {};\n    chart.download({ width, height, fileName: imageFileName, fileFormat });\n  }\n  getChartImageDataURL(type) {\n    return this.getChart().getCanvasDataURL(type);\n  }\n  getChartOptions() {\n    return this.chart.getOptions();\n  }\n  getChartThemeOverrides() {\n    const chartOptionsTheme = this.getChartOptions().theme;\n    return chartOptionsTheme.overrides ?? {};\n  }\n  getChartPalette() {\n    return _Theme3.getChartTheme(this.getChartOptions().theme).palette;\n  }\n  setPaired(paired) {\n    const seriesType = getSeriesType(this.chartProxyParams.chartType);\n    this.chart.updateDelta({ theme: { overrides: { [seriesType]: { paired } } } });\n  }\n  isPaired() {\n    const seriesType = getSeriesType(this.chartProxyParams.chartType);\n    return get(this.getChartThemeOverrides(), `${seriesType}.paired`, true);\n  }\n  lookupCustomChartTheme(themeName) {\n    return lookupCustomChartTheme(this.chartProxyParams, themeName);\n  }\n  getSeriesGroupType() {\n    return void 0;\n  }\n  transformCategoryData(data, categoryKey) {\n    return data.map((d, index) => {\n      const value = d[categoryKey];\n      const valueString = value && value.toString ? value.toString() : \"\";\n      const datum = { ...d };\n      datum[categoryKey] = { id: index, value, toString: () => valueString };\n      return datum;\n    });\n  }\n  getCommonChartOptions(updatedOverrides) {\n    const existingOptions = this.clearThemeOverrides ? {} : this.chart?.getOptions() ?? {};\n    const formattingPanelOverrides = this.chart != null ? this.getActiveFormattingPanelOverrides() : void 0;\n    this.clearThemeOverrides = false;\n    const theme = createAgChartTheme(\n      this.chartProxyParams,\n      this,\n      this.isEnterpriseCharts,\n      this.getChartThemeDefaults(),\n      updatedOverrides ?? formattingPanelOverrides\n    );\n    const newOptions = {\n      ...existingOptions,\n      mode: \"integrated\"\n    };\n    newOptions.theme = theme;\n    newOptions.container = this.chartProxyParams.parentElement;\n    return newOptions;\n  }\n  getChartThemeDefaults() {\n    const seriesOverrides = this.getSeriesChartThemeDefaults();\n    const seriesChartOptions = seriesOverrides ? {\n      [this.standaloneChartType]: seriesOverrides\n    } : {};\n    const crosshair = {\n      enabled: true,\n      snap: true,\n      label: {\n        enabled: false\n      }\n    };\n    const common = this.isEnterpriseCharts ? {\n      zoom: {\n        enabled: true\n      },\n      animation: {\n        enabled: true,\n        duration: 500\n      },\n      axes: {\n        number: { crosshair },\n        category: { crosshair },\n        log: { crosshair },\n        time: { crosshair }\n      }\n    } : {};\n    common.minHeight = 0;\n    common.minWidth = 0;\n    common.navigator = {\n      enabled: false\n    };\n    return {\n      common,\n      ...seriesChartOptions\n    };\n  }\n  getSeriesChartThemeDefaults() {\n    return void 0;\n  }\n  getActiveFormattingPanelOverrides() {\n    if (this.clearThemeOverrides) {\n      return {};\n    }\n    const inUseTheme = this.chart?.getOptions().theme;\n    return inUseTheme?.overrides ?? {};\n  }\n  destroy({ keepChartInstance = false } = {}) {\n    if (keepChartInstance) {\n      this.chart.resetAnimations();\n      return this.chart;\n    }\n    this.destroyChart();\n  }\n  destroyChart() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/cartesianChartProxy.ts\nvar CartesianChartProxy = class extends ChartProxy {\n  constructor(params) {\n    super(params);\n    this.crossFilteringAllPoints = /* @__PURE__ */ new Set();\n    this.crossFilteringSelectedPoints = [];\n  }\n  getUpdateOptions(params, commonChartOptions) {\n    const axes = this.getAxes(params, commonChartOptions);\n    return {\n      ...commonChartOptions,\n      data: this.getData(params, axes),\n      axes,\n      series: this.getSeries(params)\n    };\n  }\n  getData(params, axes) {\n    const supportsCrossFiltering = [\"area\", \"line\"].includes(this.standaloneChartType);\n    return this.crossFiltering && supportsCrossFiltering ? this.getCrossFilterData(params) : this.getDataTransformedData(params, axes);\n  }\n  getDataTransformedData(params, axes) {\n    const xAxisType = axes[0].type;\n    const { categories, data } = params;\n    const [category] = categories;\n    switch (xAxisType) {\n      case \"category\":\n        return this.transformCategoryData(data, category.id);\n      case \"time\":\n        return this.transformTimeData(data, category.id);\n      default:\n        return data;\n    }\n  }\n  getXAxisType(params) {\n    if (params.grouping) {\n      return \"grouped-category\";\n    } else if (this.isXAxisOfType(params, \"time\", (value) => value instanceof Date)) {\n      return \"time\";\n    } else if (this.isXAxisOfType(params, \"number\")) {\n      return \"number\";\n    }\n    return \"category\";\n  }\n  isXAxisOfType(params, type, isInstance) {\n    const [category] = params.categories;\n    if (category?.chartDataType) {\n      return category.chartDataType === type;\n    }\n    if (!isInstance) {\n      return false;\n    }\n    const testDatum = params.data[0];\n    if (!testDatum) {\n      return false;\n    }\n    return isInstance(testDatum[category.id]);\n  }\n  transformTimeData(data, categoryKey) {\n    const firstValue = data[0]?.[categoryKey];\n    if (firstValue instanceof Date) {\n      return data;\n    }\n    return data.map((datum) => {\n      const value = datum[categoryKey];\n      return typeof value === \"string\" ? {\n        ...datum,\n        [categoryKey]: new Date(value)\n      } : datum;\n    });\n  }\n  crossFilteringReset() {\n    this.crossFilteringSelectedPoints = [];\n    this.crossFilteringAllPoints.clear();\n  }\n  crossFilteringPointSelected(point) {\n    return this.crossFilteringSelectedPoints.length == 0 || this.crossFilteringSelectedPoints.includes(point);\n  }\n  crossFilteringDeselectedPoints() {\n    return this.crossFilteringSelectedPoints.length > 0 && this.crossFilteringAllPoints.size !== this.crossFilteringSelectedPoints.length;\n  }\n  extractLineAreaCrossFilterSeries(series, params) {\n    const [category] = params.categories;\n    const getYKey = (yKey) => {\n      if (this.standaloneChartType === \"area\") {\n        const lastSelectedChartId = params.getCrossFilteringContext().lastSelectedChartId;\n        return lastSelectedChartId === params.chartId ? yKey + \"-total\" : yKey;\n      }\n      return yKey + \"-total\";\n    };\n    return series.map((s) => {\n      s.yKey = getYKey(s.yKey);\n      s.listeners = {\n        nodeClick: (e) => {\n          const value = e.datum[s.xKey];\n          const multiSelection = e.event.metaKey || e.event.ctrlKey;\n          this.crossFilteringAddSelectedPoint(multiSelection, value);\n          this.crossFilterCallback(e);\n        }\n      };\n      s.marker = {\n        itemStyler: (p) => {\n          const value = p.datum[category.id];\n          return {\n            fill: p.highlighted ? \"yellow\" : p.fill,\n            size: p.highlighted ? 14 : this.crossFilteringPointSelected(value) ? 8 : 0\n          };\n        }\n      };\n      if (this.standaloneChartType === \"area\") {\n        s.fillOpacity = this.crossFilteringDeselectedPoints() ? 0.3 : 1;\n      }\n      if (this.standaloneChartType === \"line\") {\n        s.strokeOpacity = this.crossFilteringDeselectedPoints() ? 0.3 : 1;\n      }\n      return s;\n    });\n  }\n  getCrossFilterData(params) {\n    this.crossFilteringAllPoints.clear();\n    const [category] = params.categories;\n    const colId = params.fields[0].colId;\n    const filteredOutColId = `${colId}-filtered-out`;\n    const lastSelectedChartId = params.getCrossFilteringContext().lastSelectedChartId;\n    return params.data.map((d) => {\n      const value = d[category.id];\n      this.crossFilteringAllPoints.add(value);\n      const pointSelected = this.crossFilteringPointSelected(value);\n      if (this.standaloneChartType === \"area\" && lastSelectedChartId === params.chartId) {\n        d[`${colId}-total`] = pointSelected ? d[colId] : d[colId] + d[filteredOutColId];\n      }\n      if (this.standaloneChartType === \"line\") {\n        d[`${colId}-total`] = pointSelected ? d[colId] : d[colId] + d[filteredOutColId];\n      }\n      return d;\n    });\n  }\n  crossFilteringAddSelectedPoint(multiSelection, value) {\n    multiSelection ? this.crossFilteringSelectedPoints.push(value) : this.crossFilteringSelectedPoints = [value];\n  }\n  isHorizontal(commonChartOptions) {\n    const seriesType = this.standaloneChartType;\n    if (seriesType !== \"waterfall\" && seriesType !== \"box-plot\" && seriesType !== \"range-bar\") {\n      return false;\n    }\n    const theme = commonChartOptions.theme;\n    const isHorizontal = (theme2) => {\n      const direction = theme2?.overrides?.[seriesType]?.series?.direction;\n      if (direction != null) {\n        return direction === \"horizontal\";\n      }\n      if (typeof theme2?.baseTheme === \"object\") {\n        return isHorizontal(theme2.baseTheme);\n      }\n      return false;\n    };\n    return isHorizontal(theme);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/areaChartProxy.ts\nvar AreaChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(params) {\n    const axes = [\n      {\n        type: this.getXAxisType(params),\n        position: \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: \"left\"\n      }\n    ];\n    if (this.isNormalised()) {\n      const numberAxis = axes[1];\n      numberAxis.label = { ...numberAxis.label, formatter: (params2) => Math.round(params2.value) + \"%\" };\n    }\n    return axes;\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    const series = params.fields.map(\n      (f) => ({\n        type: this.standaloneChartType,\n        xKey: category.id,\n        xName: category.name,\n        yKey: f.colId,\n        yName: f.displayName,\n        normalizedTo: this.chartType === \"normalizedArea\" ? 100 : void 0,\n        stacked: [\"normalizedArea\", \"stackedArea\"].includes(this.chartType)\n      })\n    );\n    return this.crossFiltering ? this.extractLineAreaCrossFilterSeries(series, params) : series;\n  }\n  isNormalised() {\n    return !this.crossFiltering && this.chartType === \"normalizedArea\";\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/barChartProxy.ts\nimport { _includes as _includes5 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/utils/color.ts\nimport { _Util as _Util4 } from \"ag-charts-community\";\nfunction hexToRGBA(hex, alpha) {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  return alpha ? `rgba(${r}, ${g}, ${b}, ${alpha})` : `rgba(${r}, ${g}, ${b})`;\n}\nfunction changeOpacity(fills, alpha) {\n  return fills.map((fill) => {\n    const c = _Util4.Color.fromString(fill);\n    return new _Util4.Color(c.r, c.g, c.b, alpha).toHexString();\n  });\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/barChartProxy.ts\nvar HORIZONTAL_CHART_TYPES = /* @__PURE__ */ new Set([\"bar\", \"groupedBar\", \"stackedBar\", \"normalizedBar\"]);\nvar BarChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(params) {\n    const axes = [\n      {\n        type: this.getXAxisType(params),\n        position: this.isHorizontal() ? \"left\" : \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: this.isHorizontal() ? \"bottom\" : \"left\"\n      }\n    ];\n    if (this.isNormalised()) {\n      const numberAxis = axes[1];\n      numberAxis.label = { ...numberAxis.label, formatter: (params2) => Math.round(params2.value) + \"%\" };\n    }\n    return axes;\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    const series = params.fields.map(\n      (f) => ({\n        type: this.standaloneChartType,\n        direction: this.isHorizontal() ? \"horizontal\" : \"vertical\",\n        stacked: this.crossFiltering || isStacked(this.chartType),\n        normalizedTo: this.isNormalised() ? 100 : void 0,\n        xKey: category.id,\n        xName: category.name,\n        yKey: f.colId,\n        yName: f.displayName\n      })\n    );\n    return this.crossFiltering ? this.extractCrossFilterSeries(series) : series;\n  }\n  extractCrossFilterSeries(series) {\n    const palette = this.getChartPalette();\n    const updatePrimarySeries = (seriesOptions, index) => {\n      return {\n        ...seriesOptions,\n        highlightStyle: { item: { fill: void 0 } },\n        fill: palette?.fills?.[index],\n        stroke: palette?.strokes?.[index],\n        listeners: {\n          nodeClick: this.crossFilterCallback\n        }\n      };\n    };\n    const updateFilteredOutSeries = (seriesOptions) => {\n      const yKey = seriesOptions.yKey + \"-filtered-out\";\n      return {\n        ...deepMerge({}, seriesOptions),\n        yKey,\n        fill: hexToRGBA(seriesOptions.fill, \"0.3\"),\n        stroke: hexToRGBA(seriesOptions.stroke, \"0.3\"),\n        showInLegend: false\n      };\n    };\n    const allSeries = [];\n    for (let i = 0; i < series.length; i++) {\n      const primarySeries = updatePrimarySeries(series[i], i);\n      allSeries.push(primarySeries);\n      allSeries.push(updateFilteredOutSeries(primarySeries));\n    }\n    return allSeries;\n  }\n  isNormalised() {\n    const normalisedCharts = [\"normalizedColumn\", \"normalizedBar\"];\n    return !this.crossFiltering && _includes5(normalisedCharts, this.chartType);\n  }\n  isHorizontal() {\n    return HORIZONTAL_CHART_TYPES.has(this.chartType);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/histogramChartProxy.ts\nvar HistogramChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getSeries(params) {\n    const firstField = params.fields[0];\n    return [\n      {\n        type: this.standaloneChartType,\n        xKey: firstField.colId,\n        xName: firstField.displayName,\n        yName: this.chartProxyParams.translate(\"histogramFrequency\"),\n        areaPlot: false\n        // only constant width is supported via integrated charts\n      }\n    ];\n  }\n  getAxes(_params) {\n    return [\n      {\n        type: \"number\",\n        position: \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: \"left\"\n      }\n    ];\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/lineChartProxy.ts\nvar LineChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(params) {\n    return [\n      {\n        type: this.getXAxisType(params),\n        position: \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: \"left\"\n      }\n    ];\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    const series = params.fields.map(\n      (f) => ({\n        type: this.standaloneChartType,\n        xKey: category.id,\n        xName: category.name,\n        yKey: f.colId,\n        yName: f.displayName\n      })\n    );\n    return this.crossFiltering ? this.extractLineAreaCrossFilterSeries(series, params) : series;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/scatterChartProxy.ts\nvar ScatterChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(_params) {\n    return [\n      {\n        type: \"number\",\n        position: \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: \"left\"\n      }\n    ];\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    const paired = this.isPaired();\n    const seriesDefinitions = this.getSeriesDefinitions(params.fields, paired);\n    const labelFieldDefinition = category.id === ChartDataModel.DEFAULT_CATEGORY ? void 0 : category;\n    const series = seriesDefinitions.map((seriesDefinition) => {\n      if (seriesDefinition?.sizeField) {\n        const opts2 = {\n          type: \"bubble\",\n          xKey: seriesDefinition.xField.colId,\n          xName: seriesDefinition.xField.displayName ?? void 0,\n          yKey: seriesDefinition.yField.colId,\n          yName: seriesDefinition.yField.displayName ?? void 0,\n          title: `${seriesDefinition.yField.displayName} vs ${seriesDefinition.xField.displayName}`,\n          sizeKey: seriesDefinition.sizeField.colId,\n          sizeName: seriesDefinition.sizeField.displayName ?? \"\",\n          labelKey: labelFieldDefinition ? labelFieldDefinition.id : seriesDefinition.yField.colId,\n          labelName: labelFieldDefinition ? labelFieldDefinition.name : void 0\n        };\n        return opts2;\n      }\n      const opts = {\n        type: \"scatter\",\n        xKey: seriesDefinition.xField.colId,\n        xName: seriesDefinition.xField.displayName ?? void 0,\n        yKey: seriesDefinition.yField.colId,\n        yName: seriesDefinition.yField.displayName ?? void 0,\n        title: `${seriesDefinition.yField.displayName} vs ${seriesDefinition.xField.displayName}`,\n        labelKey: labelFieldDefinition ? labelFieldDefinition.id : seriesDefinition.yField.colId,\n        labelName: labelFieldDefinition ? labelFieldDefinition.name : void 0\n      };\n      return opts;\n    });\n    return this.crossFiltering ? this.extractCrossFilterSeries(series, params) : series;\n  }\n  extractCrossFilterSeries(series, params) {\n    const { data } = params;\n    const palette = this.getChartPalette();\n    const filteredOutKey = (key) => `${key}-filtered-out`;\n    const calcMarkerDomain = (data2, sizeKey) => {\n      const markerDomain = [Infinity, -Infinity];\n      if (sizeKey != null) {\n        for (const datum of data2) {\n          const value = datum[sizeKey] ?? datum[filteredOutKey(sizeKey)];\n          if (value < markerDomain[0]) {\n            markerDomain[0] = value;\n          }\n          if (value > markerDomain[1]) {\n            markerDomain[1] = value;\n          }\n        }\n      }\n      if (markerDomain[0] <= markerDomain[1]) {\n        return markerDomain;\n      }\n      return void 0;\n    };\n    const updatePrimarySeries = (series2, idx) => {\n      const fill = palette?.fills?.[idx];\n      const stroke = palette?.strokes?.[idx];\n      let markerDomain = void 0;\n      if (series2.type === \"bubble\") {\n        const { sizeKey } = series2;\n        markerDomain = calcMarkerDomain(data, sizeKey);\n      }\n      return {\n        ...series2,\n        fill,\n        stroke,\n        domain: markerDomain,\n        highlightStyle: { item: { fill: \"yellow\" } },\n        listeners: {\n          ...series2.listeners,\n          nodeClick: this.crossFilterCallback\n        }\n      };\n    };\n    const updateFilteredOutSeries = (series2) => {\n      const { yKey, xKey } = series2;\n      let alteredSizeKey = {};\n      if (series2.type === \"bubble\") {\n        alteredSizeKey = { sizeKey: filteredOutKey(series2.sizeKey) };\n      }\n      return {\n        ...series2,\n        ...alteredSizeKey,\n        yKey: filteredOutKey(yKey),\n        xKey: filteredOutKey(xKey),\n        fillOpacity: 0.3,\n        strokeOpacity: 0.3,\n        showInLegend: false,\n        listeners: {\n          ...series2.listeners,\n          nodeClick: (e) => {\n            const value = e.datum[filteredOutKey(xKey)];\n            const filterableEvent = {\n              ...e,\n              xKey,\n              datum: { ...e.datum, [xKey]: value }\n            };\n            this.crossFilterCallback(filterableEvent);\n          }\n        }\n      };\n    };\n    const updatedSeries = series.map(updatePrimarySeries);\n    return [...updatedSeries, ...updatedSeries.map(updateFilteredOutSeries)];\n  }\n  getSeriesDefinitions(fields, paired) {\n    if (fields.length < 2) {\n      return [];\n    }\n    const isBubbleChart = this.chartType === \"bubble\";\n    if (paired) {\n      if (isBubbleChart) {\n        return fields.map(\n          (currentXField, i) => i % 3 === 0 ? {\n            xField: currentXField,\n            yField: fields[i + 1],\n            sizeField: fields[i + 2]\n          } : null\n        ).filter((x) => x && x.yField && x.sizeField);\n      }\n      return fields.map(\n        (currentXField, i) => i % 2 === 0 ? {\n          xField: currentXField,\n          yField: fields[i + 1]\n        } : null\n      ).filter((x) => x && x.yField);\n    }\n    const xField = fields[0];\n    if (isBubbleChart) {\n      return fields.map(\n        (yField, i) => i % 2 === 1 ? {\n          xField,\n          yField,\n          sizeField: fields[i + 1]\n        } : null\n      ).filter((x) => x && x.sizeField);\n    }\n    return fields.filter((value, i) => i > 0).map((yField) => ({ xField, yField }));\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/cartesian/waterfallChartProxy.ts\nvar WaterfallChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(params, commonChartOptions) {\n    return [\n      {\n        type: this.getXAxisType(params),\n        position: this.isHorizontal(commonChartOptions) ? \"left\" : \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: this.isHorizontal(commonChartOptions) ? \"bottom\" : \"left\"\n      }\n    ];\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    const [firstField] = params.fields;\n    const firstSeries = {\n      type: this.standaloneChartType,\n      xKey: category.id,\n      xName: category.name,\n      yKey: firstField.colId,\n      yName: firstField.displayName ?? void 0\n    };\n    return [firstSeries];\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/combo/comboChartProxy.ts\nvar ComboChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(params) {\n    const fields = params ? params.fields : [];\n    const fieldsMap = new Map(fields.map((f) => [f.colId, f]));\n    const { primaryYKeys, secondaryYKeys } = this.getYKeys(fields, params.seriesChartTypes);\n    const axes = [\n      {\n        type: this.getXAxisType(params),\n        position: \"bottom\"\n      }\n    ];\n    if (primaryYKeys.length > 0) {\n      axes.push({\n        type: \"number\",\n        keys: primaryYKeys,\n        position: \"left\"\n      });\n    }\n    if (secondaryYKeys.length > 0) {\n      secondaryYKeys.forEach((secondaryYKey) => {\n        const field = fieldsMap.get(secondaryYKey);\n        const secondaryAxisIsVisible = field && field.colId === secondaryYKey;\n        if (!secondaryAxisIsVisible) {\n          return;\n        }\n        const secondaryAxisOptions = {\n          type: \"number\",\n          keys: [secondaryYKey],\n          position: \"right\"\n        };\n        axes.push(secondaryAxisOptions);\n      });\n    }\n    return axes;\n  }\n  getSeries(params) {\n    const { fields, seriesChartTypes } = params;\n    const [category] = params.categories;\n    return fields.map((field) => {\n      const seriesChartType = seriesChartTypes.find((s) => s.colId === field.colId);\n      if (seriesChartType) {\n        const chartType = seriesChartType.chartType;\n        const grouped = [\"groupedColumn\", \"groupedBar\"].includes(chartType);\n        const groupedOpts = grouped ? { grouped: true } : {};\n        return {\n          type: getSeriesType(chartType),\n          xKey: category.id,\n          yKey: field.colId,\n          yName: field.displayName,\n          stacked: [\"stackedArea\", \"stackedColumn\"].includes(chartType),\n          ...groupedOpts\n        };\n      }\n    });\n  }\n  getYKeys(fields, seriesChartTypes) {\n    const primaryYKeys = [];\n    const secondaryYKeys = [];\n    fields.forEach((field) => {\n      const colId = field.colId;\n      const seriesChartType = seriesChartTypes.find((s) => s.colId === colId);\n      if (seriesChartType) {\n        seriesChartType.secondaryAxis ? secondaryYKeys.push(colId) : primaryYKeys.push(colId);\n      }\n    });\n    return { primaryYKeys, secondaryYKeys };\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/hierarchical/hierarchicalChartProxy.ts\nimport { GROUP_AUTO_COLUMN_ID } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/hierarchical/hierarchicalChartUtils.ts\nvar CATEGORY_LABEL_KEY = \"AG-GRID-DEFAULT-LABEL-KEY\";\nfunction createCategoryHierarchy(data, categoryKeys) {\n  const hierarchy = buildNestedHierarchy(data, getItemDepth, getItemCategoryLabel);\n  return formatCategoryHierarchy(hierarchy);\n  function getItemDepth(item) {\n    return categoryKeys.length;\n  }\n  function getItemCategoryLabel(item, categoryIndex) {\n    const categoryKey = categoryKeys[categoryIndex];\n    const categoryValue = item[categoryKey];\n    return getCategoryLabel(categoryValue);\n  }\n  function getCategoryLabel(value) {\n    if (value == null)\n      return null;\n    return String(value);\n  }\n}\nfunction createAutoGroupHierarchy(data, getItemLabels) {\n  const hierarchy = buildNestedHierarchy(data, getItemDepth, getItemGroupLabel);\n  return formatCategoryHierarchy(hierarchy);\n  function getItemDepth(item) {\n    return getItemLabels(item)?.length ?? 0;\n  }\n  function getItemGroupLabel(item, groupIndex) {\n    const labels2 = getItemLabels(item);\n    if (!labels2)\n      return null;\n    const labelIndex = labels2.length - 1 - groupIndex;\n    return labels2[labelIndex];\n  }\n}\nfunction formatCategoryHierarchy(hierarchy, key = null, isChild) {\n  const { depth, rootValues, value, children: inputChildren } = hierarchy;\n  if (rootValues) {\n    return rootValues.map((item) => ({ [CATEGORY_LABEL_KEY]: key, ...item }));\n  } else if (depth === 0) {\n    return [{ [CATEGORY_LABEL_KEY]: key, ...value }];\n  }\n  const children = [];\n  for (const [childKey, childHierarchy] of inputChildren.entries()) {\n    children.push(...formatCategoryHierarchy(childHierarchy, childKey, true));\n  }\n  return isChild ? [\n    {\n      [CATEGORY_LABEL_KEY]: key,\n      children,\n      ...value ?? {}\n    }\n  ] : children;\n}\nfunction buildNestedHierarchy(data, getItemDepth, getItemGroupKey) {\n  const hierarchy = { depth: 0, children: /* @__PURE__ */ new Map() };\n  data.forEach((item) => {\n    const itemDepth = getItemDepth(item);\n    createNestedItemHierarchy(item, itemDepth, getItemGroupKey, 0, hierarchy);\n  });\n  return hierarchy;\n  function createNestedItemHierarchy(item, itemDepth, getItemGroupKey2, currentDepth, hierarchy2) {\n    if (currentDepth === itemDepth) {\n      if (currentDepth === 0) {\n        if (!hierarchy2.rootValues) {\n          hierarchy2.rootValues = [];\n        }\n        hierarchy2.rootValues.push(item);\n      } else {\n        hierarchy2.value = item;\n      }\n      return hierarchy2;\n    } else {\n      const key = getItemGroupKey2(item, currentDepth);\n      const existingChildHierarchy = hierarchy2.children.get(key);\n      const childHierarchy = createNestedItemHierarchy(\n        item,\n        itemDepth,\n        getItemGroupKey2,\n        currentDepth + 1,\n        existingChildHierarchy || { depth: 0, children: /* @__PURE__ */ new Map() }\n      );\n      hierarchy2.children.set(key, childHierarchy);\n      hierarchy2.depth = Math.max(1 + childHierarchy.depth, hierarchy2.depth);\n      return hierarchy2;\n    }\n  }\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/hierarchical/hierarchicalChartProxy.ts\nvar HierarchicalChartProxy = class extends ChartProxy {\n  constructor(chartProxyParams) {\n    super(chartProxyParams);\n  }\n  getUpdateOptions(params, commonChartOptions) {\n    const { fields } = params;\n    const [sizeField, colorField] = fields;\n    return {\n      ...commonChartOptions,\n      series: this.getSeries(sizeField, colorField),\n      data: this.getData(params, sizeField, colorField)\n    };\n  }\n  getSeriesChartThemeDefaults() {\n    return {\n      gradientLegend: {\n        gradient: {\n          preferredLength: 200\n        }\n      }\n    };\n  }\n  getSeries(sizeField, colorField) {\n    return [\n      {\n        type: this.standaloneChartType,\n        labelKey: CATEGORY_LABEL_KEY,\n        // Size and color fields are inferred from the range data\n        sizeKey: sizeField?.colId,\n        sizeName: sizeField?.displayName ?? void 0,\n        colorKey: colorField?.colId,\n        colorName: colorField?.displayName ?? void 0\n      }\n    ];\n  }\n  getData(params, sizeField, colorField) {\n    const { categories, data, groupData, grouping: isGrouped } = params;\n    if (isGrouped) {\n      const processedData = colorField ? data.concat(\n        groupData?.map((groupDatum) => {\n          const newDatum = { ...groupDatum };\n          delete newDatum[sizeField.colId];\n          return newDatum;\n        }) ?? []\n      ) : data;\n      return createAutoGroupHierarchy(processedData, (item) => item[GROUP_AUTO_COLUMN_ID]?.labels ?? null);\n    } else {\n      const categoryKeys = categories.map(({ id }) => id);\n      return createCategoryHierarchy(data, categoryKeys);\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/pie/pieChartProxy.ts\nfunction calculateOffsets(offset) {\n  const outerRadiusOffset = offset.currentOffset;\n  offset.currentOffset -= offset.offsetAmount;\n  const innerRadiusOffset = offset.currentOffset;\n  offset.currentOffset -= offset.offsetAmount;\n  return { outerRadiusOffset, innerRadiusOffset };\n}\nvar PieChartProxy = class extends ChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getUpdateOptions(params, commonChartOptions) {\n    return {\n      ...commonChartOptions,\n      data: this.crossFiltering ? this.getCrossFilterData(params) : params.data,\n      series: this.getSeries(params)\n    };\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    const numFields = params.fields.length;\n    const offset = {\n      currentOffset: 0,\n      offsetAmount: numFields > 1 ? 20 : 40\n    };\n    const series = this.getFields(params).map(\n      (f) => {\n        const options = {\n          type: this.standaloneChartType,\n          angleKey: f.colId,\n          angleName: f.displayName,\n          sectorLabelKey: f.colId,\n          calloutLabelName: category.name,\n          calloutLabelKey: category.id\n        };\n        if (this.chartType === \"donut\" || this.chartType === \"doughnut\") {\n          const { outerRadiusOffset, innerRadiusOffset } = calculateOffsets(offset);\n          const title = f.displayName ? {\n            title: { text: f.displayName, showInLegend: numFields > 1 }\n          } : void 0;\n          return {\n            ...options,\n            type: \"donut\",\n            outerRadiusOffset,\n            innerRadiusOffset,\n            ...title,\n            calloutLine: {\n              colors: this.getChartPalette()?.strokes\n            }\n          };\n        }\n        return options;\n      }\n    );\n    return this.crossFiltering ? this.extractCrossFilterSeries(series) : series;\n  }\n  getCrossFilterData(params) {\n    const colId = params.fields[0].colId;\n    const filteredOutColId = `${colId}-filtered-out`;\n    return params.data.map((d) => {\n      const total = d[colId] + d[filteredOutColId];\n      d[`${colId}-total`] = total;\n      d[filteredOutColId] = 1;\n      d[colId] = d[colId] / total;\n      return d;\n    });\n  }\n  extractCrossFilterSeries(series) {\n    const palette = this.getChartPalette();\n    const primaryOptions = (seriesOptions) => {\n      return {\n        ...seriesOptions,\n        legendItemKey: seriesOptions.calloutLabelKey,\n        calloutLabel: { enabled: false },\n        // hide labels on primary series\n        highlightStyle: { item: { fill: void 0 } },\n        radiusKey: seriesOptions.angleKey,\n        angleKey: seriesOptions.angleKey + \"-total\",\n        radiusMin: 0,\n        radiusMax: 1,\n        listeners: {\n          nodeClick: this.crossFilterCallback\n        }\n      };\n    };\n    const filteredOutOptions = (seriesOptions, angleKey2) => {\n      return {\n        ...deepMerge({}, primaryOpts),\n        radiusKey: angleKey2 + \"-filtered-out\",\n        fills: changeOpacity(seriesOptions.fills ?? palette?.fills ?? [], 0.3),\n        strokes: changeOpacity(seriesOptions.strokes ?? palette?.strokes ?? [], 0.3),\n        showInLegend: false\n      };\n    };\n    const primarySeries = series[0];\n    const angleKey = primarySeries.angleKey;\n    const primaryOpts = primaryOptions(primarySeries);\n    return [filteredOutOptions(primarySeries, angleKey), primaryOpts];\n  }\n  getFields(params) {\n    return this.chartType === \"pie\" ? params.fields.slice(0, 1) : params.fields;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/polar/polarChartProxy.ts\nvar PolarChartProxy = class extends ChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(_) {\n    const radialBar = this.standaloneChartType === \"radial-bar\";\n    return [\n      { type: radialBar ? \"angle-number\" : \"angle-category\" },\n      { type: radialBar ? \"radius-category\" : \"radius-number\" }\n    ];\n  }\n  getSeries(params) {\n    const { fields, categories, seriesGroupType } = params;\n    const [category] = categories;\n    const radialBar = this.standaloneChartType === \"radial-bar\";\n    const seriesGroupTypeOptions = this.getSeriesGroupTypeOptions(seriesGroupType);\n    return fields.map((f) => ({\n      type: this.standaloneChartType,\n      angleKey: radialBar ? f.colId : category.id,\n      angleName: radialBar ? f.displayName ?? void 0 : category.name,\n      radiusKey: radialBar ? category.id : f.colId,\n      radiusName: radialBar ? category.name : f.displayName ?? void 0,\n      ...seriesGroupTypeOptions\n    }));\n  }\n  getSeriesGroupType() {\n    const standaloneChartType = this.standaloneChartType;\n    if (![\"nightingale\", \"radial-bar\", \"radial-column\"].includes(standaloneChartType)) {\n      return void 0;\n    }\n    const firstSeriesProperties = this.getChart().series?.[0]?.properties.toJson();\n    const getStackedValue = () => firstSeriesProperties.normalizedTo ? \"normalized\" : \"stacked\";\n    if (standaloneChartType === \"nightingale\") {\n      return firstSeriesProperties.grouped ? \"grouped\" : getStackedValue();\n    } else {\n      return firstSeriesProperties.stacked ? getStackedValue() : \"grouped\";\n    }\n  }\n  getUpdateOptions(params, commonChartOptions) {\n    const axes = this.getAxes(params);\n    return {\n      ...commonChartOptions,\n      data: this.getData(params, axes),\n      axes,\n      series: this.getSeries(params)\n    };\n  }\n  getData(params, axes) {\n    const isCategoryAxis = axes.some((axis) => axis.type === \"angle-category\" || axis.type === \"radius-category\");\n    if (isCategoryAxis) {\n      const [category] = params.categories;\n      return this.transformCategoryData(params.data, category.id);\n    } else {\n      return params.data;\n    }\n  }\n  getSeriesGroupTypeOptions(seriesGroupType) {\n    if (!seriesGroupType) {\n      return {};\n    }\n    return {\n      grouped: seriesGroupType === \"grouped\" || void 0,\n      stacked: seriesGroupType !== \"grouped\" || void 0,\n      normalizedTo: seriesGroupType === \"normalized\" ? 100 : void 0\n    };\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/utils/array.ts\nfunction flatMap(items, iteratee) {\n  return items.reduce((acc, item, index, array) => acc.concat(iteratee(item, index, array)), new Array());\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/specialized/heatmapChartProxy.ts\nvar HEATMAP_CATEGORY_KEY = \"AG-GRID-DEFAULT-HEATMAP-CATEGORY-KEY\";\nvar HEATMAP_SERIES_KEY = \"AG-GRID-DEFAULT-HEATMAP-SERIES-KEY\";\nvar HEATMAP_VALUE_KEY = \"AG-GRID-DEFAULT-HEATMAP-VALUE-KEY\";\nvar HeatmapChartProxy = class extends ChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getUpdateOptions(params, commonChartOptions) {\n    const xSeriesKey = HEATMAP_SERIES_KEY;\n    const xValueKey = HEATMAP_VALUE_KEY;\n    const yKey = HEATMAP_CATEGORY_KEY;\n    return {\n      ...commonChartOptions,\n      series: this.getSeries(params, xSeriesKey, xValueKey, yKey),\n      data: this.getData(params, xSeriesKey, xValueKey, yKey)\n    };\n  }\n  getSeries(params, xSeriesKey, xValueKey, yKey) {\n    const [category] = params.categories;\n    return [\n      {\n        type: this.standaloneChartType,\n        // The axis keys reference synthetic fields based on the category values and series column names\n        yKey,\n        xKey: xSeriesKey,\n        // The color key references a synthetic field based on the series column value for a specific cell\n        colorKey: xValueKey,\n        yName: category.name,\n        // We don't know how to label the 'x' series, as it is a synthetic series created from the set of all input columns\n        // In future releases we may want to consider inferring the series label from column groupings etc\n        xName: void 0,\n        colorName: void 0\n      }\n    ];\n  }\n  getData(params, xSeriesKey, xValueKey, yKey) {\n    const [category] = params.categories;\n    return flatMap(params.data, (datum, index) => {\n      const value = datum[category.id];\n      const valueString = value == null ? \"\" : String(value);\n      const yValue = { id: index, value, toString: () => valueString };\n      return params.fields.map(({ colId, displayName }) => ({\n        ...datum,\n        [xSeriesKey]: displayName,\n        [xValueKey]: datum[colId],\n        [yKey]: yValue\n      }));\n    });\n  }\n  getSeriesChartThemeDefaults() {\n    return {\n      gradientLegend: {\n        gradient: {\n          preferredLength: 200\n        }\n      },\n      series: {\n        tooltip: {\n          renderer: renderHeatmapTooltip\n        }\n      }\n    };\n  }\n};\nfunction renderHeatmapTooltip(params) {\n  const { xKey, yKey, colorKey, yName, datum } = params;\n  const table = [\n    { label: yName, value: datum[yKey] },\n    { label: datum[xKey], value: colorKey && datum[colorKey] }\n  ];\n  const html = table.map(({ label, value }) => `<b>${sanitizeHtml(String(label))}:</b> ${sanitizeHtml(String(value))}`).join(\"<br>\");\n  return {\n    title: \"\",\n    content: html\n  };\n}\nfunction sanitizeHtml(input) {\n  const ESCAPED_CHARS = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\"\n  };\n  const characterClass = `[${Object.keys(ESCAPED_CHARS).join(\"\")}]`;\n  const pattern = new RegExp(characterClass, \"g\");\n  return input.replace(pattern, (char) => ESCAPED_CHARS[char]);\n}\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/statistical/statisticalChartProxy.ts\nvar StatisticalChartProxy = class extends CartesianChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getAxes(params, commonChartOptions) {\n    return [\n      {\n        type: this.getXAxisType(params),\n        position: this.isHorizontal(commonChartOptions) ? \"left\" : \"bottom\"\n      },\n      {\n        type: \"number\",\n        position: this.isHorizontal(commonChartOptions) ? \"bottom\" : \"left\"\n      }\n    ];\n  }\n  computeSeriesStatistics(params, computeStatsFn) {\n    const { data, fields } = params;\n    const [category] = params.categories;\n    const categoryKey = category.id || ChartDataModel.DEFAULT_CATEGORY;\n    const groupedData = this.groupDataByCategory(categoryKey, data);\n    return Array.from(groupedData).map(([categoryValue, categoryData]) => {\n      const categoryResult = { [category.id]: categoryValue };\n      fields.forEach((field, seriesIndex) => {\n        const seriesValues = categoryData.map((datum) => datum[field.colId]).filter((value) => typeof value === \"number\" && !isNaN(value));\n        Object.entries(computeStatsFn(seriesValues)).forEach(([statKey, value]) => {\n          const propertyKey = `${statKey}:${seriesIndex}`;\n          categoryResult[propertyKey] = seriesValues.length > 0 ? value : null;\n        });\n      });\n      return categoryResult;\n    });\n  }\n  groupDataByCategory(categoryKey, data) {\n    const getCategory = (datum) => {\n      if (categoryKey === ChartDataModel.DEFAULT_CATEGORY) {\n        return 1;\n      }\n      const categoryValue = datum[categoryKey];\n      if (categoryValue === null || categoryValue === void 0) {\n        return \"\";\n      }\n      return categoryValue instanceof Date ? categoryValue.getTime() : categoryValue;\n    };\n    return data.reduce((acc, datum) => {\n      const category = getCategory(datum);\n      const existingCategoryData = acc.get(category);\n      if (existingCategoryData) {\n        existingCategoryData.push(datum);\n      } else {\n        acc.set(category, [datum]);\n      }\n      return acc;\n    }, /* @__PURE__ */ new Map());\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/statistical/boxPlotChartProxy.ts\nvar BoxPlotChartProxy = class extends StatisticalChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    return params.fields.map((field, seriesIndex) => ({\n      type: this.standaloneChartType,\n      // xKey/xName refer to category buckets\n      xKey: category.id,\n      xName: category.name,\n      // yName is used to label the series\n      yName: field.displayName ?? void 0,\n      // custom field labels shown in the tooltip\n      minName: \"Min\",\n      q1Name: \"Q1\",\n      medianName: \"Median\",\n      q3Name: \"Q3\",\n      maxName: \"Max\",\n      // generated 'synthetic fields' from getData()\n      minKey: `min:${seriesIndex}`,\n      q1Key: `q1:${seriesIndex}`,\n      medianKey: `median:${seriesIndex}`,\n      q3Key: `q3:${seriesIndex}`,\n      maxKey: `max:${seriesIndex}`\n    }));\n  }\n  getData(params) {\n    return this.computeSeriesStatistics(params, (seriesValues) => {\n      const sortedValues = seriesValues.sort((a, b) => a - b);\n      return {\n        min: sortedValues[0],\n        q1: this.quantile(sortedValues, 0.25),\n        median: this.quantile(sortedValues, 0.5),\n        q3: this.quantile(sortedValues, 0.75),\n        max: sortedValues[sortedValues.length - 1]\n      };\n    });\n  }\n  quantile(sortedValues, q) {\n    const position = (sortedValues.length - 1) * q;\n    const indexBelow = Math.floor(position);\n    const aboveValue = position - indexBelow;\n    if (sortedValues[indexBelow + 1] !== void 0) {\n      return sortedValues[indexBelow] + aboveValue * (sortedValues[indexBelow + 1] - sortedValues[indexBelow]);\n    }\n    return sortedValues[indexBelow];\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/chartProxies/statistical/rangeChartProxy.ts\nvar RangeChartProxy = class extends StatisticalChartProxy {\n  constructor(params) {\n    super(params);\n  }\n  getSeries(params) {\n    const [category] = params.categories;\n    return params.fields.map((field, seriesIndex) => ({\n      type: this.standaloneChartType,\n      // xKey/xName refer to category buckets\n      xKey: category.id,\n      xName: category.name,\n      // yName is used to label the series\n      yName: field.displayName ?? void 0,\n      // custom field labels shown in the tooltip\n      yLowName: \"Min\",\n      yHighName: \"Max\",\n      // generated 'synthetic fields' from getData()\n      yLowKey: `min:${seriesIndex}`,\n      yHighKey: `max:${seriesIndex}`\n    }));\n  }\n  getData(params) {\n    return this.computeSeriesStatistics(params, (seriesValues) => {\n      return {\n        min: Math.min(...seriesValues),\n        max: Math.max(...seriesValues)\n      };\n    });\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/chartMenu.ts\nimport { AgPromise as AgPromise2, Component as Component39, _warnOnce as _warnOnce12 } from \"@ag-grid-community/core\";\nimport { AgPanel } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/chartToolbar.ts\nimport { Component as Component8, RefPlaceholder as RefPlaceholder6, _clearElement, _createIconNoSpan as _createIconNoSpan2 } from \"@ag-grid-community/core\";\nvar ChartToolbar = class extends Component8 {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-chart-menu\" data-ref=\"eMenu\"></div>`\n    );\n    this.eMenu = RefPlaceholder6;\n    this.buttonListenersDestroyFuncs = [];\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  updateParams(params) {\n    const { buttons } = params;\n    this.createButtons(buttons);\n  }\n  createButtons(buttons) {\n    this.buttonListenersDestroyFuncs.forEach((func) => func?.());\n    this.buttonListenersDestroyFuncs = [];\n    const menuEl = this.eMenu;\n    _clearElement(menuEl);\n    buttons.forEach((buttonConfig) => {\n      const { buttonName, iconName, callback } = buttonConfig;\n      const buttonEl = this.createButton(iconName);\n      const tooltipTitle = this.chartTranslationService.translate(\n        buttonName + \"ToolbarTooltip\"\n      );\n      if (tooltipTitle && buttonEl instanceof HTMLElement) {\n        buttonEl.title = tooltipTitle;\n      }\n      this.buttonListenersDestroyFuncs.push(\n        ...this.addManagedElementListeners(buttonEl, {\n          click: (event) => callback(event.currentTarget)\n        })\n      );\n      menuEl.appendChild(buttonEl);\n    });\n  }\n  createButton(iconName) {\n    const buttonEl = _createIconNoSpan2(iconName, this.gos, void 0, true);\n    buttonEl.classList.add(\"ag-chart-menu-icon\");\n    const wrapperEl = this.gos.getDocument().createElement(\"button\");\n    wrapperEl.appendChild(buttonEl);\n    wrapperEl.classList.add(\"ag-chart-menu-toolbar-button\");\n    return wrapperEl;\n  }\n  destroy() {\n    this.buttonListenersDestroyFuncs = [];\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/tabbedChartMenu.ts\nimport { AgPromise, Component as Component38 } from \"@ag-grid-community/core\";\nimport { TabbedLayout } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/chartDataPanel.ts\nimport { AgToggleButton as AgToggleButton3, Component as Component13, _setDisplayed as _setDisplayed2, _warnOnce as _warnOnce9 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/categoriesDataPanel.ts\nimport { AgSelect as AgSelect3, AgToggleButton } from \"@ag-grid-community/core\";\nimport { AgGroupComponent } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/dragDataPanel.ts\nimport { AgSelect as AgSelect2, Component as Component10 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/widgets/agPillSelect.ts\nimport { AgSelect, Component as Component9, DragSourceType, _escapeString, _removeFromParent as _removeFromParent2 } from \"@ag-grid-community/core\";\nimport { PillDragComp, PillDropZonePanel } from \"@ag-grid-enterprise/core\";\nvar AgPillSelect = class extends Component9 {\n  constructor(config) {\n    super(\n      /* html */\n      `<div class=\"ag-pill-select\" role=\"presentation\"></div>`\n    );\n    this.config = config ?? {};\n    const { selectedValueList, valueFormatter, valueList } = this.config;\n    this.selectedValues = selectedValueList ?? [];\n    this.valueList = valueList ?? [];\n    this.valueFormatter = valueFormatter ?? ((value) => _escapeString(value));\n  }\n  postConstruct() {\n    const { ariaLabel, onValuesChange, dragSourceId } = this.config;\n    this.dropZonePanel = this.createManagedBean(\n      new PillSelectDropZonePanel(\n        {\n          getValues: () => this.selectedValues,\n          setValues: (values) => this.updateValues(values),\n          isDraggable: () => this.selectedValues.length > 1\n        },\n        (value) => this.valueFormatter(value),\n        ariaLabel,\n        dragSourceId\n      )\n    );\n    const eGui = this.getGui();\n    eGui.appendChild(this.dropZonePanel.getGui());\n    this.initSelect();\n    if (onValuesChange != null) {\n      this.onValuesChange = onValuesChange;\n    }\n  }\n  setValues(valueList, selectedValues) {\n    const { added, removed, updated } = this.getChanges(this.valueList, valueList);\n    let refreshSelect = false;\n    if (added.length || removed.length || updated.length) {\n      refreshSelect = true;\n    }\n    this.valueList = valueList;\n    this.updateValues(selectedValues, refreshSelect, true);\n    return this;\n  }\n  setValueFormatter(valueFormatter) {\n    this.valueFormatter = valueFormatter;\n    return this;\n  }\n  initSelect() {\n    const options = this.createSelectOptions();\n    if (!options.length) {\n      return false;\n    }\n    const { selectPlaceholder: placeholder } = this.config;\n    this.eSelect = this.createBean(\n      new AgSelect({\n        options,\n        placeholder,\n        onValueChange: (value) => this.addValue(value),\n        pickerIcon: \"chartsMenuAdd\"\n      })\n    );\n    this.getGui().appendChild(this.eSelect.getGui());\n    return true;\n  }\n  createSelectOptions() {\n    const options = [];\n    const { maxSelection } = this.config;\n    if (maxSelection && this.selectedValues.length >= maxSelection) {\n      return options;\n    }\n    this.valueList.forEach((value) => {\n      if (!this.selectedValues.includes(value)) {\n        options.push({ value, text: this.valueFormatter(value) });\n      }\n    });\n    return options;\n  }\n  addValue(value) {\n    this.dropZonePanel.addItem(value);\n  }\n  updateValues(values, forceRefreshSelect, silent) {\n    const previousSelectedValues = this.selectedValues;\n    this.selectedValues = values;\n    const changes = this.getChanges(previousSelectedValues, values);\n    const refreshSelect = forceRefreshSelect || changes.added.length || changes.removed.length;\n    const activeElement = this.gos.getActiveDomElement();\n    const selectHasFocus = this.eSelect?.getGui().contains(activeElement);\n    const dropZoneHasFocus = this.dropZonePanel?.getGui().contains(activeElement);\n    if (!silent) {\n      this.onValuesChange?.(changes);\n    }\n    const emptyRefreshedSelect = refreshSelect ? !this.refreshSelect() : false;\n    this.dropZonePanel.refreshGui();\n    if (refreshSelect && selectHasFocus) {\n      if (emptyRefreshedSelect) {\n        this.dropZonePanel.focusList(true);\n      } else {\n        this.eSelect?.getFocusableElement().focus();\n      }\n    }\n    if (dropZoneHasFocus && !values.length) {\n      this.eSelect?.getFocusableElement().focus();\n    }\n  }\n  getChanges(previousSelectedValues, newSelectedValues) {\n    const added = newSelectedValues.filter((value) => !previousSelectedValues.includes(value));\n    const removed = previousSelectedValues.filter((value) => !newSelectedValues.includes(value));\n    const updated = newSelectedValues.filter((value, index) => previousSelectedValues[index] !== value);\n    return { added, removed, updated, selected: newSelectedValues };\n  }\n  refreshSelect() {\n    if (!this.eSelect) {\n      return this.initSelect();\n    }\n    const options = this.createSelectOptions();\n    if (!options.length) {\n      _removeFromParent2(this.eSelect.getGui());\n      this.eSelect = this.destroyBean(this.eSelect);\n      return false;\n    }\n    this.eSelect.clearOptions().addOptions(options).setValue(void 0, true);\n    return true;\n  }\n  destroy() {\n    this.destroyBean(this.eSelect);\n    super.destroy();\n  }\n};\nvar PillSelectDragComp = class extends PillDragComp {\n  constructor(value, dragSourceDropTarget, ghost, valueFormatter, draggable, sourceId) {\n    super(dragSourceDropTarget, ghost, false);\n    this.value = value;\n    this.valueFormatter = valueFormatter;\n    this.draggable = draggable;\n    this.sourceId = sourceId;\n  }\n  getItem() {\n    return this.value;\n  }\n  getDisplayName() {\n    return this.valueFormatter(this.value);\n  }\n  getAriaDisplayName() {\n    return this.getDisplayName();\n  }\n  getTooltip() {\n    return void 0;\n  }\n  createGetDragItem() {\n    return () => ({\n      value: this.value\n    });\n  }\n  getDragSourceType() {\n    return DragSourceType.ChartPanel;\n  }\n  getDragSourceId() {\n    return this.sourceId;\n  }\n  isDraggable() {\n    return this.draggable;\n  }\n};\nvar PillSelectDropZonePanel = class extends PillDropZonePanel {\n  constructor(model, valueFormatter, ariaLabel, sourceId) {\n    super(false);\n    this.model = model;\n    this.valueFormatter = valueFormatter;\n    this.ariaLabel = ariaLabel;\n    this.sourceId = sourceId;\n  }\n  postConstruct() {\n    super.init();\n  }\n  isItemDroppable(item, draggingEvent) {\n    return this.isSourceEventFromTarget(draggingEvent) || this.sourceId != null && this.sourceId === draggingEvent.dragSource.sourceId;\n  }\n  updateItems(items) {\n    this.model.setValues(items);\n  }\n  getExistingItems() {\n    return this.model.getValues();\n  }\n  getIconName() {\n    return this.isPotentialDndItems() ? \"move\" : \"notAllowed\";\n  }\n  getAriaLabel() {\n    return this.ariaLabel;\n  }\n  createPillComponent(item, dropTarget, ghost) {\n    return new PillSelectDragComp(\n      item,\n      dropTarget,\n      ghost,\n      this.valueFormatter,\n      this.model.isDraggable(),\n      this.sourceId\n    );\n  }\n  getItems(dragItem) {\n    return [dragItem.value];\n  }\n  isInterestedIn(type) {\n    return type === DragSourceType.ChartPanel;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/dragDataPanel.ts\nvar DragDataPanel = class extends Component10 {\n  constructor(chartController, allowMultipleSelection, maxSelection, template) {\n    super(template);\n    this.chartController = chartController;\n    this.allowMultipleSelection = allowMultipleSelection;\n    this.maxSelection = maxSelection;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  addItem(eItem) {\n    this.groupComp.addItem(eItem);\n  }\n  createGroup(columns, valueFormatter, selectLabelKey, dragSourceId, skipAnimation) {\n    if (this.allowMultipleSelection) {\n      const selectedValueList = columns.filter((col) => col.selected);\n      this.valuePillSelect = this.groupComp.createManagedBean(\n        new AgPillSelect({\n          valueList: columns,\n          selectedValueList,\n          valueFormatter,\n          selectPlaceholder: this.chartTranslationService.translate(selectLabelKey),\n          dragSourceId,\n          onValuesChange: (params) => this.onValueChange(params),\n          maxSelection: this.maxSelection\n        })\n      );\n      this.groupComp.addItem(this.valuePillSelect);\n    } else {\n      const params = this.createValueSelectParams(columns);\n      params.onValueChange = (updatedColState) => {\n        columns.forEach((col) => {\n          col.selected = false;\n        });\n        updatedColState.selected = true;\n        if (updatedColState.colId === ChartDataModel.DEFAULT_CATEGORY) {\n          this.chartController.setAggFunc(void 0, true);\n        }\n        this.chartController.updateForPanelChange({ updatedColState, skipAnimation: skipAnimation?.() });\n      };\n      this.valueSelect = this.groupComp.createManagedBean(new AgSelect2(params));\n      this.groupComp.addItem(this.valueSelect);\n    }\n  }\n  refreshValueSelect(columns) {\n    if (!this.valueSelect) {\n      return;\n    }\n    const { options, value } = this.createValueSelectParams(columns);\n    this.valueSelect.clearOptions().addOptions(options).setValue(value, true);\n  }\n  createValueSelectParams(columns) {\n    let selectedValue;\n    const options = columns.map((value) => {\n      const text = value.displayName ?? \"\";\n      if (value.selected) {\n        selectedValue = value;\n      }\n      return {\n        value,\n        text\n      };\n    });\n    return {\n      options,\n      value: selectedValue\n    };\n  }\n  onValueChange({ added, updated, removed, selected }) {\n    let updatedColState;\n    let resetOrder;\n    const updateOrder = () => {\n      selected.forEach((col, index) => {\n        col.order = index;\n      });\n      resetOrder = true;\n    };\n    if (added.length) {\n      updatedColState = added[0];\n      updatedColState.selected = true;\n      updateOrder();\n    } else if (removed.length) {\n      updatedColState = removed[0];\n      updatedColState.selected = false;\n    } else if (updated.length) {\n      updateOrder();\n      updatedColState = updated[0];\n    }\n    if (updatedColState) {\n      this.chartController.updateForPanelChange({ updatedColState, resetOrder });\n    }\n  }\n  destroy() {\n    this.valuePillSelect = void 0;\n    this.valueSelect = void 0;\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/categoriesDataPanel.ts\nvar DEFAULT_AGG_FUNC = \"sum\";\nvar CategoriesDataPanel = class extends DragDataPanel {\n  constructor(chartController, title, allowMultipleSelection, dimensionCols, isOpen) {\n    const maxSelection = void 0;\n    super(\n      chartController,\n      allowMultipleSelection,\n      maxSelection,\n      /* html */\n      `<div id=\"categoriesGroup\"></div>`\n    );\n    this.title = title;\n    this.dimensionCols = dimensionCols;\n    this.isOpen = isOpen;\n  }\n  postConstruct() {\n    this.groupComp = this.createBean(\n      new AgGroupComponent({\n        title: this.title,\n        enabled: true,\n        suppressEnabledCheckbox: true,\n        suppressOpenCloseIcons: false,\n        cssIdentifier: \"charts-data\",\n        expanded: this.isOpen\n      })\n    );\n    this.createGroup(\n      this.dimensionCols,\n      (col) => col.displayName ?? \"\",\n      \"categoryAdd\",\n      \"categorySelect\",\n      () => !this.chartController.getAggFunc()\n    );\n    this.createAggFuncControls(this.dimensionCols);\n    this.getGui().appendChild(this.groupComp.getGui());\n  }\n  refresh(dimensionCols) {\n    this.valuePillSelect?.setValues(\n      dimensionCols,\n      dimensionCols.filter((col) => col.selected)\n    );\n    this.refreshValueSelect(dimensionCols);\n    this.refreshAggFuncControls(dimensionCols, this.chartController.getAggFunc());\n  }\n  createAggFuncControls(dimensionCols) {\n    const aggFunc = this.chartController.getAggFunc();\n    this.groupComp.addItem(\n      this.aggFuncToggle = this.createBean(\n        new AgToggleButton({\n          label: this.chartTranslationService.translate(\"aggregate\"),\n          labelAlignment: \"left\",\n          labelWidth: \"flex\",\n          inputWidth: \"flex\",\n          value: aggFunc != void 0,\n          onValueChange: (value) => {\n            const aggFunc2 = value ? DEFAULT_AGG_FUNC : void 0;\n            this.chartController.setAggFunc(aggFunc2);\n            this.aggFuncSelect?.setValue(aggFunc2, true);\n            this.aggFuncSelect?.setDisplayed(aggFunc2 != void 0);\n          }\n        })\n      )\n    );\n    this.groupComp.addItem(\n      this.aggFuncSelect = this.createBean(\n        new AgSelect3({\n          options: [\n            { value: \"sum\", text: this.chartTranslationService.translate(\"sum\") },\n            { value: \"first\", text: this.chartTranslationService.translate(\"first\") },\n            { value: \"last\", text: this.chartTranslationService.translate(\"last\") },\n            { value: \"min\", text: this.chartTranslationService.translate(\"min\") },\n            { value: \"max\", text: this.chartTranslationService.translate(\"max\") },\n            { value: \"count\", text: this.chartTranslationService.translate(\"count\") },\n            { value: \"avg\", text: this.chartTranslationService.translate(\"avg\") }\n          ],\n          value: typeof aggFunc === \"string\" ? aggFunc : void 0,\n          onValueChange: (value) => {\n            this.chartController.setAggFunc(value);\n          }\n        })\n      )\n    );\n    this.refreshAggFuncControls(dimensionCols, aggFunc);\n  }\n  refreshAggFuncControls(dimensionCols, aggFunc) {\n    const selectedDimensions = dimensionCols.filter((col) => col.selected);\n    const supportsAggregation = selectedDimensions.some((col) => col.colId !== ChartDataModel.DEFAULT_CATEGORY);\n    this.aggFuncToggle?.setValue(aggFunc != void 0);\n    this.aggFuncSelect?.setValue(typeof aggFunc === \"string\" ? aggFunc : void 0, true);\n    this.aggFuncToggle?.setDisplayed(supportsAggregation);\n    this.aggFuncSelect?.setDisplayed(supportsAggregation && aggFunc != void 0);\n  }\n  clearAggFuncControls() {\n    this.aggFuncToggle = this.destroyBean(this.aggFuncToggle);\n    this.aggFuncSelect = this.destroyBean(this.aggFuncSelect);\n  }\n  destroy() {\n    this.clearAggFuncControls();\n    this.groupComp = this.destroyBean(this.groupComp);\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/chartSpecificDataPanel.ts\nimport { AgSelect as AgSelect4, ChartMappings as ChartMappings2, Component as Component11, RefPlaceholder as RefPlaceholder7 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector5 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/chartMenuParamsFactory.ts\nimport { BeanStub as BeanStub12 } from \"@ag-grid-community/core\";\nvar ChartMenuParamsFactory = class extends BeanStub12 {\n  constructor(chartOptionsProxy) {\n    super();\n    this.chartOptionsProxy = chartOptionsProxy;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  getDefaultColorPickerParams(expression, labelKey, options) {\n    return this.addValueParams(\n      expression,\n      {\n        label: this.chartTranslationService.translate(labelKey ?? \"color\"),\n        labelWidth: \"flex\",\n        inputWidth: \"flex\",\n        labelAlignment: \"top\",\n        pickerGap: 6\n      },\n      options\n    );\n  }\n  getDefaultNumberInputParams(expression, labelKey, options) {\n    return this.addValueParams(\n      expression,\n      {\n        label: this.chartTranslationService.translate(labelKey),\n        labelAlignment: \"top\",\n        labelWidth: \"flex\",\n        inputWidth: \"flex\",\n        precision: options?.precision,\n        step: options?.step,\n        min: options?.min,\n        max: options?.max\n      },\n      {\n        parseInputValue: (value) => {\n          const numberValue = Number(value);\n          return isNaN(numberValue) ? void 0 : numberValue;\n        },\n        formatInputValue: (value) => {\n          return value == null ? \"\" : `${value}`;\n        }\n      }\n    );\n  }\n  getDefaultSliderParams(expression, labelKey, defaultMaxValue, isArray) {\n    let value = this.chartOptionsProxy.getValue(expression) ?? 0;\n    if (isArray && Array.isArray(value)) {\n      value = value[0];\n    }\n    const params = this.getDefaultSliderParamsWithoutValueParams(value, labelKey, defaultMaxValue);\n    params.onValueChange = (value2) => this.chartOptionsProxy.setValue(expression, isArray ? [value2] : value2);\n    return params;\n  }\n  getDefaultSliderParamsWithoutValueParams(value, labelKey, defaultMaxValue) {\n    return {\n      label: this.chartTranslationService.translate(labelKey),\n      minValue: 0,\n      maxValue: Math.max(value, defaultMaxValue),\n      textFieldWidth: 45,\n      value: `${value}`\n    };\n  }\n  getDefaultCheckboxParams(expression, labelKey, options) {\n    const value = this.chartOptionsProxy.getValue(expression);\n    const params = {\n      label: this.chartTranslationService.translate(labelKey),\n      value,\n      readOnly: options?.readOnly,\n      passive: options?.passive\n    };\n    params.onValueChange = (value2) => {\n      this.chartOptionsProxy.setValue(expression, typeof value2 === \"boolean\" ? value2 : void 0);\n    };\n    return params;\n  }\n  getDefaultSelectParams(expression, labelKey, dropdownOptions) {\n    return this.getDefaultSelectParamsWithoutValueParams(\n      labelKey,\n      dropdownOptions,\n      this.chartOptionsProxy.getValue(expression),\n      (value) => {\n        this.chartOptionsProxy.setValue(expression, value);\n      }\n    );\n  }\n  getDefaultSelectParamsWithoutValueParams(labelKey, options, value, onValueChange) {\n    return {\n      label: this.chartTranslationService.translate(labelKey),\n      labelAlignment: \"top\",\n      options,\n      pickerGap: 6,\n      value,\n      onValueChange\n    };\n  }\n  getDefaultFontPanelParams(expression, labelKey) {\n    const keyMapper = (key) => `${expression}.${key}`;\n    return this.addEnableParams(keyMapper(\"enabled\"), {\n      name: this.chartTranslationService.translate(labelKey),\n      suppressEnabledCheckbox: false,\n      chartMenuParamsFactory: this,\n      keyMapper\n    });\n  }\n  addValueParams(expression, params, options) {\n    const optionsValue = this.chartOptionsProxy.getValue(expression);\n    params.value = options?.formatInputValue ? options.formatInputValue(optionsValue) : optionsValue;\n    params.onValueChange = (value) => {\n      const optionsValue2 = options?.parseInputValue ? options.parseInputValue(value) : value;\n      this.chartOptionsProxy.setValue(expression, optionsValue2);\n    };\n    return params;\n  }\n  addEnableParams(expression, params) {\n    params.enabled = this.chartOptionsProxy.getValue(expression) ?? false;\n    params.onEnableChange = (value) => this.chartOptionsProxy.setValue(expression, value);\n    return params;\n  }\n  getChartOptions() {\n    return this.chartOptionsProxy;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/chartSpecificDataPanel.ts\nvar ChartSpecificDataPanel = class extends Component11 {\n  constructor(chartMenuContext, isOpen) {\n    super();\n    this.chartMenuContext = chartMenuContext;\n    this.isOpen = isOpen;\n    this.chartSpecificGroup = RefPlaceholder7;\n    this.hasContent = false;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n    this.chartService = beans.chartService;\n  }\n  postConstruct() {\n    const title = this.getTitle();\n    const chartSpecificGroupParams = {\n      title,\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      suppressOpenCloseIcons: false,\n      cssIdentifier: \"charts-data\",\n      expanded: this.isOpen,\n      items: [...this.createDirectionSelect(), this.createGroupTypeSelect()]\n    };\n    this.setTemplate(\n      /* html */\n      `\n            <div id=\"chartSpecificGroup\">\n                <ag-group-component data-ref=\"chartSpecificGroup\"></ag-group-component>\n            </div>`,\n      [AgGroupComponentSelector5],\n      {\n        chartSpecificGroup: chartSpecificGroupParams\n      }\n    );\n    this.setDisplayed(this.hasContent);\n  }\n  refresh() {\n    this.hasContent = false;\n    this.chartSpecificGroup.setTitle(this.getTitle());\n    this.updateDirectionSelect();\n    this.updateGroupTypeSelect();\n    this.setDisplayed(this.hasContent);\n  }\n  getTitle() {\n    const chartType = this.chartMenuContext.chartController.getChartType();\n    return this.chartTranslationService.translate(getFullChartNameTranslationKey(chartType));\n  }\n  createDirectionSelect() {\n    if (!this.chartService.isEnterprise()) {\n      return [];\n    }\n    const { chartOptionsService, chartController } = this.chartMenuContext;\n    const chartOptionsSeriesProxy = chartOptionsService.getSeriesOptionsProxy(\n      () => getSeriesType(chartController.getChartType())\n    );\n    const chartSeriesMenuParamsFactory = this.createManagedBean(\n      new ChartMenuParamsFactory(chartOptionsSeriesProxy)\n    );\n    const options = [\"horizontal\", \"vertical\"].map((value) => ({\n      value,\n      text: this.chartTranslationService.translate(value)\n    }));\n    const params = chartSeriesMenuParamsFactory.getDefaultSelectParams(\"direction\", \"direction\", options);\n    const onValueChange = params.onValueChange;\n    params.onValueChange = (value) => {\n      onValueChange(value);\n      chartController.raiseChartModelUpdateEvent();\n    };\n    this.directionSelect = this.createManagedBean(new AgSelect4(params));\n    this.updateDirectionSelect();\n    return [this.directionSelect];\n  }\n  updateDirectionSelect() {\n    const isDisplayed = canSwitchDirection(this.chartMenuContext.chartController.getChartType());\n    this.updateDisplayed(this.directionSelect, isDisplayed);\n  }\n  createGroupTypeSelect() {\n    const { chartController, chartMenuParamsFactory } = this.chartMenuContext;\n    this.groupTypeSelect = this.createManagedBean(\n      new AgSelect4(\n        chartMenuParamsFactory.getDefaultSelectParamsWithoutValueParams(\n          \"seriesGroupType\",\n          ChartMappings2.SERIES_GROUP_TYPES.map((value) => ({\n            value,\n            text: this.chartTranslationService.translate(`${value}SeriesGroupType`)\n          })),\n          chartController.getSeriesGroupType(),\n          (value) => chartController.setSeriesGroupType(value)\n        )\n      )\n    );\n    this.updateGroupTypeSelect();\n    return this.groupTypeSelect;\n  }\n  updateGroupTypeSelect() {\n    const isDisplayed = [\"radialColumn\", \"radialBar\", \"nightingale\"].includes(\n      this.chartMenuContext.chartController.getChartType()\n    );\n    this.updateDisplayed(this.groupTypeSelect, isDisplayed);\n  }\n  updateDisplayed(select, isDisplayed) {\n    select?.setDisplayed(isDisplayed);\n    if (select) {\n      this.hasContent = this.hasContent || isDisplayed;\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/seriesChartTypePanel.ts\nimport { AgCheckbox, AgSelect as AgSelect5, Component as Component12, _areEqual, _clearElement as _clearElement2 } from \"@ag-grid-community/core\";\nimport { AgGroupComponent as AgGroupComponent2 } from \"@ag-grid-enterprise/core\";\nvar SeriesChartTypePanel = class extends Component12 {\n  constructor(chartController, columns, isOpen) {\n    super(\n      /* html */\n      `<div id=\"seriesChartTypeGroup\"></div>`\n    );\n    this.chartController = chartController;\n    this.columns = columns;\n    this.isOpen = isOpen;\n    this.selectedColIds = [];\n    this.chartTypeComps = /* @__PURE__ */ new Map();\n    this.secondaryAxisComps = /* @__PURE__ */ new Map();\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    this.createSeriesChartTypeGroup(this.columns);\n  }\n  refresh(columns) {\n    if (!_areEqual(this.getValidColIds(columns), this.selectedColIds)) {\n      this.recreate(columns);\n    } else {\n      this.refreshComps();\n    }\n  }\n  recreate(columns) {\n    this.isOpen = this.seriesChartTypeGroupComp.isExpanded();\n    _clearElement2(this.getGui());\n    this.destroyBean(this.seriesChartTypeGroupComp);\n    this.columns = columns;\n    this.selectedColIds = [];\n    this.clearComps();\n    this.postConstruct();\n  }\n  getValidColIds(columns) {\n    const seriesChartTypes = this.chartController.getSeriesChartTypes();\n    return columns.filter((col) => col.selected && !!seriesChartTypes.filter((s) => s.colId === col.colId)[0]).map(({ colId }) => colId);\n  }\n  createSeriesChartTypeGroup(columns) {\n    this.seriesChartTypeGroupComp = this.createBean(\n      new AgGroupComponent2({\n        title: this.chartTranslationService.translate(\"seriesChartType\"),\n        enabled: true,\n        suppressEnabledCheckbox: true,\n        suppressOpenCloseIcons: false,\n        cssIdentifier: \"charts-data\",\n        expanded: this.isOpen\n      })\n    );\n    const seriesChartTypes = this.chartController.getSeriesChartTypes();\n    columns.forEach((col) => {\n      if (!col.selected) {\n        return;\n      }\n      const seriesChartType = seriesChartTypes.filter((s) => s.colId === col.colId)[0];\n      if (!seriesChartType) {\n        return;\n      }\n      this.selectedColIds.push(col.colId);\n      const seriesItemGroup = this.seriesChartTypeGroupComp.createManagedBean(\n        new AgGroupComponent2({\n          title: col.displayName,\n          enabled: true,\n          suppressEnabledCheckbox: true,\n          suppressOpenCloseIcons: true,\n          cssIdentifier: \"charts-format-sub-level\"\n        })\n      );\n      const isSecondaryAxisDisabled = (chartType) => [\"groupedColumn\", \"stackedColumn\", \"stackedArea\"].includes(chartType);\n      const secondaryAxisComp = this.seriesChartTypeGroupComp.createManagedBean(\n        new AgCheckbox({\n          label: this.chartTranslationService.translate(\"secondaryAxis\"),\n          labelWidth: \"flex\",\n          disabled: isSecondaryAxisDisabled(seriesChartType.chartType),\n          value: !!seriesChartType.secondaryAxis,\n          onValueChange: (enabled) => this.chartController.updateSeriesChartType(col.colId, void 0, enabled)\n        })\n      );\n      seriesItemGroup.addItem(secondaryAxisComp);\n      const options = [\"line\", \"area\", \"stackedArea\", \"groupedColumn\", \"stackedColumn\"].map(\n        (value) => ({ value, text: this.chartTranslationService.translate(value) })\n      );\n      const chartTypeComp = seriesItemGroup.createManagedBean(\n        new AgSelect5({\n          options,\n          value: seriesChartType.chartType,\n          onValueChange: (chartType) => this.chartController.updateSeriesChartType(col.colId, chartType)\n        })\n      );\n      seriesItemGroup.addItem(chartTypeComp);\n      this.seriesChartTypeGroupComp.addItem(seriesItemGroup);\n      this.chartTypeComps.set(col.colId, chartTypeComp);\n      this.secondaryAxisComps.set(col.colId, secondaryAxisComp);\n    });\n    this.getGui().appendChild(this.seriesChartTypeGroupComp.getGui());\n  }\n  refreshComps() {\n    const seriesChartTypes = this.chartController.getSeriesChartTypes();\n    this.selectedColIds.forEach((colId) => {\n      const seriesChartType = seriesChartTypes.find((chartType) => chartType.colId === colId);\n      if (!seriesChartType) {\n        return;\n      }\n      const chartTypeComp = this.chartTypeComps.get(colId);\n      const secondaryAxisComp = this.secondaryAxisComps.get(colId);\n      chartTypeComp?.setValue(seriesChartType.chartType);\n      secondaryAxisComp?.setValue(!!seriesChartType.secondaryAxis);\n      secondaryAxisComp?.setDisabled(this.isSecondaryAxisDisabled(seriesChartType.chartType));\n    });\n  }\n  clearComps() {\n    this.chartTypeComps.clear();\n    this.secondaryAxisComps.clear();\n  }\n  isSecondaryAxisDisabled(chartType) {\n    return [\"groupedColumn\", \"stackedColumn\", \"stackedArea\"].includes(chartType);\n  }\n  destroy() {\n    this.clearComps();\n    this.seriesChartTypeGroupComp = this.destroyBean(this.seriesChartTypeGroupComp);\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/seriesDataPanel.ts\nimport { AgToggleButton as AgToggleButton2 } from \"@ag-grid-community/core\";\nimport { AgGroupComponent as AgGroupComponent3 } from \"@ag-grid-enterprise/core\";\nvar SeriesDataPanel = class extends DragDataPanel {\n  constructor(chartController, chartOptionsService, title, allowMultipleSelect, maxSelection, valueCols, isOpen) {\n    super(\n      chartController,\n      allowMultipleSelect,\n      maxSelection,\n      /* html */\n      `<div id=\"seriesGroup\"></div>`\n    );\n    this.chartOptionsService = chartOptionsService;\n    this.title = title;\n    this.valueCols = valueCols;\n    this.isOpen = isOpen;\n  }\n  postConstruct() {\n    this.groupComp = this.createBean(\n      new AgGroupComponent3({\n        title: this.title,\n        enabled: true,\n        suppressEnabledCheckbox: true,\n        suppressOpenCloseIcons: false,\n        cssIdentifier: \"charts-data\",\n        expanded: this.isOpen\n      })\n    );\n    if (this.chartController.isActiveXYChart()) {\n      const pairedModeToggle = this.groupComp.createManagedBean(\n        new AgToggleButton2({\n          label: this.chartTranslationService.translate(\"paired\"),\n          labelAlignment: \"left\",\n          labelWidth: \"flex\",\n          inputWidth: \"flex\",\n          value: this.chartOptionsService.getPairedMode(),\n          onValueChange: (newValue) => {\n            this.chartOptionsService.setPairedMode(!!newValue);\n            this.chartController.updateForGridChange({ maintainColState: true });\n          }\n        })\n      );\n      this.groupComp.addItem(pairedModeToggle);\n    }\n    this.createGroup(this.valueCols, this.generateGetSeriesLabel(this.valueCols), \"seriesAdd\", \"seriesSelect\");\n    this.getGui().appendChild(this.groupComp.getGui());\n  }\n  refresh(valueCols) {\n    this.valuePillSelect?.setValueFormatter(this.generateGetSeriesLabel(valueCols));\n    this.valuePillSelect?.setValues(\n      valueCols,\n      valueCols.filter((col) => col.selected)\n    );\n    this.refreshValueSelect(valueCols);\n  }\n  generateGetSeriesLabel(valueCols) {\n    if (!this.chartController.isActiveXYChart()) {\n      return (col) => col.displayName ?? \"\";\n    }\n    const selectedCols = valueCols.filter((col) => col.selected);\n    const isBubble = this.chartController.getChartType() === \"bubble\";\n    const isInPairedMode = this.chartOptionsService.getPairedMode();\n    const indexToAxisLabel = /* @__PURE__ */ new Map();\n    indexToAxisLabel.set(0, \"X\");\n    indexToAxisLabel.set(1, \"Y\");\n    indexToAxisLabel.set(2, \"size\");\n    return (col) => {\n      const escapedLabel = col.displayName ?? \"\";\n      if (!col.selected) {\n        return escapedLabel;\n      }\n      const index = selectedCols.indexOf(col);\n      if (index === -1) {\n        return escapedLabel;\n      }\n      let axisLabel;\n      if (isInPairedMode) {\n        axisLabel = indexToAxisLabel.get(index % (isBubble ? 3 : 2));\n      } else {\n        if (index === 0) {\n          axisLabel = \"X\";\n        } else {\n          axisLabel = isBubble && index % 2 === 0 ? \"size\" : \"Y\";\n        }\n      }\n      return `${escapedLabel} (${axisLabel})`;\n    };\n  }\n  destroy() {\n    this.groupComp = this.destroyBean(this.groupComp);\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/data/chartDataPanel.ts\nvar DefaultDataPanelDef = {\n  groups: [\n    { type: \"categories\", isOpen: true },\n    { type: \"series\", isOpen: true },\n    { type: \"seriesChartType\", isOpen: true },\n    { type: \"chartSpecific\", isOpen: true }\n  ]\n};\nvar ChartDataPanel = class extends Component13 {\n  constructor(chartMenuContext) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-data-wrapper ag-scrollable-container\"></div>`\n    );\n    this.chartMenuContext = chartMenuContext;\n    this.isSwitchCategorySeriesToggled = false;\n    this.restoreSwitchCategorySeriesToggleFocus = false;\n    this.panels = [];\n    this.chartController = chartMenuContext.chartController;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n    this.chartService = beans.chartService;\n  }\n  postConstruct() {\n    this.createSwitchCategorySeriesToggle();\n    this.isSwitchCategorySeriesToggled = this.chartController.isCategorySeriesSwitched();\n    this.updatePanels();\n    const listener = this.updatePanels.bind(this);\n    this.addManagedListeners(this.chartController, {\n      chartModelUpdate: listener,\n      chartApiUpdate: listener\n    });\n  }\n  destroy() {\n    this.clearPanelComponents();\n    super.destroy();\n  }\n  updatePanels() {\n    const currentChartType = this.chartType;\n    const isSwitchCategorySeriesToggledCurrent = this.isSwitchCategorySeriesToggled;\n    const { dimensionCols, valueCols } = this.chartController.getColStateForMenu();\n    this.chartType = this.chartController.getChartType();\n    this.isSwitchCategorySeriesToggled = this.chartController.isCategorySeriesSwitched();\n    const hasChangedSwitchCategorySeries = this.isSwitchCategorySeriesToggled !== isSwitchCategorySeriesToggledCurrent;\n    if (this.canRefresh(currentChartType, this.chartType) && !hasChangedSwitchCategorySeries) {\n      this.categoriesDataPanel?.refresh(dimensionCols);\n      this.seriesDataPanel?.refresh(valueCols);\n      this.seriesChartTypePanel?.refresh(valueCols);\n      this.chartSpecificPanel?.refresh();\n    } else {\n      this.recreatePanels(dimensionCols, valueCols);\n    }\n    const isSwitchCategorySeriesDisplayed = supportsInvertedCategorySeries(this.chartType) && this.chartService.isEnterprise() && !this.chartController.isGrouping();\n    _setDisplayed2(this.switchCategorySeriesToggle.getGui(), isSwitchCategorySeriesDisplayed);\n    if (hasChangedSwitchCategorySeries) {\n      this.switchCategorySeriesToggle?.setValue(this.chartController.isCategorySeriesSwitched());\n    }\n    if (this.restoreSwitchCategorySeriesToggleFocus) {\n      this.restoreSwitchCategorySeriesToggleFocus = false;\n      if (isSwitchCategorySeriesDisplayed) {\n        this.switchCategorySeriesToggle.getFocusableElement().focus();\n      }\n    }\n  }\n  canRefresh(oldChartType, newChartType) {\n    if (oldChartType === void 0)\n      return false;\n    if (oldChartType === newChartType) {\n      return true;\n    }\n    const isCombo = (chartType) => [\"columnLineCombo\", \"areaColumnCombo\", \"customCombo\"].includes(chartType);\n    if (isCombo(oldChartType) && isCombo(newChartType)) {\n      return true;\n    }\n    return false;\n  }\n  recreatePanels(dimensionCols, valueCols) {\n    this.clearPanelComponents();\n    const { chartType } = this;\n    if (!chartType)\n      return;\n    const isCategorySeriesSwitched = this.chartController.isCategorySeriesSwitched();\n    this.getDataPanelDef().groups?.forEach(({ type, isOpen }) => {\n      if (type === (isCategorySeriesSwitched ? \"series\" : \"categories\")) {\n        this.categoriesDataPanel = this.createBean(\n          new CategoriesDataPanel(\n            this.chartController,\n            this.getCategoryGroupTitle(isCategorySeriesSwitched),\n            this.getCategoryGroupMultipleSelect(chartType, isCategorySeriesSwitched),\n            dimensionCols,\n            isOpen\n          )\n        );\n        this.panels.push(this.categoriesDataPanel);\n      } else if (type === (isCategorySeriesSwitched ? \"categories\" : \"series\")) {\n        this.seriesDataPanel = this.createBean(\n          new SeriesDataPanel(\n            this.chartController,\n            this.chartMenuContext.chartOptionsService,\n            this.getSeriesGroupTitle(isCategorySeriesSwitched),\n            this.getSeriesGroupMultipleSelect(chartType, isCategorySeriesSwitched),\n            this.getSeriesGroupMaxSelection(chartType, isCategorySeriesSwitched),\n            valueCols,\n            isOpen\n          )\n        );\n        this.panels.push(this.seriesDataPanel);\n      } else if (type === \"seriesChartType\") {\n        if (this.chartController.isComboChart()) {\n          this.seriesChartTypePanel = this.createBean(\n            new SeriesChartTypePanel(this.chartController, valueCols, isOpen)\n          );\n          this.panels.push(this.seriesChartTypePanel);\n        }\n      } else if (type === \"chartSpecific\") {\n        this.chartSpecificPanel = this.createBean(new ChartSpecificDataPanel(this.chartMenuContext, isOpen));\n        this.panels.push(this.chartSpecificPanel);\n      } else {\n        _warnOnce9(`Invalid charts data panel group name supplied: '${type}'`);\n      }\n    });\n    (isCategorySeriesSwitched ? this.categoriesDataPanel : this.seriesDataPanel)?.addItem(\n      this.switchCategorySeriesToggle.getGui()\n    );\n    this.addPanelComponents();\n  }\n  addPanelComponents() {\n    if (!this.panels.length) {\n      return;\n    }\n    const eDocument = this.gos.getDocument();\n    const fragment = eDocument.createDocumentFragment();\n    for (const panel of this.panels) {\n      panel.addCssClass(\"ag-chart-data-section\");\n      fragment.appendChild(panel.getGui());\n    }\n    this.getGui().appendChild(fragment);\n  }\n  clearPanelComponents() {\n    const eGui = this.getGui();\n    this.panels.forEach((panel) => {\n      eGui.removeChild(panel.getGui());\n      this.destroyBean(panel);\n    });\n    this.panels = [];\n  }\n  getDataPanelDef() {\n    return this.gos.get(\"chartToolPanelsDef\")?.dataPanel ?? DefaultDataPanelDef;\n  }\n  getCategoryGroupTitle(isCategorySeriesSwitched) {\n    if (isCategorySeriesSwitched)\n      return this.chartTranslationService.translate(\"seriesLabels\");\n    return this.chartTranslationService.translate(this.chartController.isActiveXYChart() ? \"labels\" : \"categories\");\n  }\n  getCategoryGroupMultipleSelect(chartType, isCategorySeriesSwitched) {\n    if (isCategorySeriesSwitched)\n      return false;\n    return getMaxNumCategories(chartType) !== 1;\n  }\n  getSeriesGroupTitle(isCategorySeriesSwitched) {\n    if (isCategorySeriesSwitched)\n      return this.chartTranslationService.translate(\"categoryValues\");\n    return this.chartTranslationService.translate(this.chartController.isActiveXYChart() ? \"xyValues\" : \"series\");\n  }\n  getSeriesGroupMultipleSelect(chartType, isCategorySeriesSwitched) {\n    return this.getSeriesGroupMaxSelection(chartType, isCategorySeriesSwitched) !== 1;\n  }\n  getSeriesGroupMaxSelection(chartType, isCategorySeriesSwitched) {\n    if (isCategorySeriesSwitched)\n      return void 0;\n    return getMaxNumSeries(chartType);\n  }\n  createSwitchCategorySeriesToggle() {\n    this.switchCategorySeriesToggle = this.createManagedBean(\n      new AgToggleButton3({\n        label: this.chartTranslationService.translate(\"switchCategorySeries\"),\n        labelAlignment: \"left\",\n        labelWidth: \"flex\",\n        inputWidth: \"flex\",\n        value: this.chartController.isCategorySeriesSwitched(),\n        onValueChange: (value) => {\n          this.restoreSwitchCategorySeriesToggleFocus = true;\n          this.chartController.switchCategorySeries(value);\n        }\n      })\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/formatPanel.ts\nimport { Component as Component34, _warnOnce as _warnOnce10 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/axis/cartesianAxisPanel.ts\nimport {\n  AgCheckbox as AgCheckbox2,\n  AgSelectSelector as AgSelectSelector2,\n  Component as Component17,\n  RefPlaceholder as RefPlaceholder10,\n  _removeFromParent as _removeFromParent4,\n  _setDisplayed as _setDisplayed3\n} from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector9 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/widgets/agAngleSelect.ts\nimport {\n  AgAbstractLabel as AgAbstractLabel2,\n  AgInputNumberFieldSelector as AgInputNumberFieldSelector3,\n  RefPlaceholder as RefPlaceholder8,\n  _exists as _exists2,\n  _setFixedWidth\n} from \"@ag-grid-community/core\";\nvar AgAngleSelect = class extends AgAbstractLabel2 {\n  constructor(config) {\n    super(\n      config,\n      /* html */\n      `<div class=\"ag-angle-select\">\n            <div data-ref=\"eLabel\"></div>\n            <div class=\"ag-wrapper ag-angle-select-wrapper\">\n                <div class=\"ag-angle-select-field\">\n                    <div data-ref=\"eParentCircle\" class=\"ag-angle-select-parent-circle\">\n                        <div data-ref=\"eChildCircle\" class=\"ag-angle-select-child-circle\"></div>\n                    </div>\n                </div>\n                <ag-input-number-field data-ref=\"eAngleValue\"></ag-input-number-field>\n            </div>\n        </div>`,\n      [AgInputNumberFieldSelector3]\n    );\n    this.eLabel = RefPlaceholder8;\n    this.eParentCircle = RefPlaceholder8;\n    this.eChildCircle = RefPlaceholder8;\n    this.eAngleValue = RefPlaceholder8;\n    this.radius = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n  wireBeans(beans) {\n    this.dragService = beans.dragService;\n  }\n  postConstruct() {\n    super.postConstruct();\n    const { value, onValueChange } = this.config;\n    if (value != null) {\n      this.setValue(value, void 0, true);\n    }\n    if (onValueChange != null) {\n      this.onValueChange(onValueChange);\n    }\n    this.dragListener = {\n      eElement: this.eParentCircle,\n      dragStartPixels: 0,\n      onDragStart: () => {\n        this.parentCircleRect = this.eParentCircle.getBoundingClientRect();\n      },\n      onDragging: (e) => this.calculateAngleDrag(e),\n      onDragStop: () => {\n      }\n    };\n    this.dragService.addDragSource(this.dragListener);\n    this.eAngleValue.setLabel(\"\").setLabelWidth(5).setInputWidth(45).setMin(0).setMax(360).setValue(`${this.degrees}`).onValueChange((value2) => {\n      if (value2 == null || value2 === \"\") {\n        value2 = \"0\";\n      }\n      value2 = this.eAngleValue.normalizeValue(value2);\n      let floatValue = parseFloat(value2);\n      if (floatValue > 180) {\n        floatValue = floatValue - 360;\n      }\n      this.setValue(floatValue);\n    });\n    this.updateNumberInput();\n    if (_exists2(this.getValue())) {\n      this.eAngleValue.setValue(this.normalizeNegativeValue(this.getValue()).toString());\n    }\n    this.addManagedListeners(this, {\n      fieldValueChanged: () => {\n        if (this.eAngleValue.getInputElement().contains(this.gos.getActiveDomElement())) {\n          return;\n        }\n        this.updateNumberInput();\n      }\n    });\n  }\n  updateNumberInput() {\n    const normalizedValue = this.normalizeNegativeValue(this.getValue());\n    this.eAngleValue.setValue(normalizedValue.toString());\n  }\n  positionChildCircle(radians) {\n    const rect = this.parentCircleRect || { width: 24, height: 24 };\n    const eChildCircle = this.eChildCircle;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    eChildCircle.style.left = `${centerX + Math.cos(radians) * 8}px`;\n    eChildCircle.style.top = `${centerY + Math.sin(radians) * 8}px`;\n  }\n  calculatePolar() {\n    const x = this.offsetX;\n    const y = this.offsetY;\n    const radians = Math.atan2(y, x);\n    this.degrees = this.toDegrees(radians);\n    this.radius = Math.sqrt(x * x + y * y);\n    this.positionChildCircle(radians);\n  }\n  calculateCartesian() {\n    const radians = this.toRadians(this.getValue());\n    const radius = this.getRadius();\n    this.setOffsetX(Math.cos(radians) * radius).setOffsetY(Math.sin(radians) * radius);\n  }\n  setOffsetX(offset) {\n    if (this.offsetX !== offset) {\n      this.offsetX = offset;\n      this.calculatePolar();\n    }\n    return this;\n  }\n  setOffsetY(offset) {\n    if (this.offsetY !== offset) {\n      this.offsetY = offset;\n      this.calculatePolar();\n    }\n    return this;\n  }\n  calculateAngleDrag(e) {\n    const rect = this.parentCircleRect;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const dx = x - centerX;\n    const dy = y - centerY;\n    const radians = Math.atan2(dy, dx);\n    this.setValue(radians, true);\n  }\n  toDegrees(radians) {\n    return radians / Math.PI * 180;\n  }\n  toRadians(degrees) {\n    return degrees / 180 * Math.PI;\n  }\n  normalizeNegativeValue(degrees) {\n    return degrees < 0 ? 360 + degrees : degrees;\n  }\n  normalizeAngle180(radians) {\n    radians %= Math.PI * 2;\n    if (radians < -Math.PI) {\n      radians += Math.PI * 2;\n    } else if (radians >= Math.PI) {\n      radians -= Math.PI * 2;\n    }\n    return radians;\n  }\n  getRadius() {\n    return this.radius;\n  }\n  setRadius(r) {\n    if (this.radius === r) {\n      return this;\n    }\n    this.radius = r;\n    this.calculateCartesian();\n    return this;\n  }\n  onValueChange(callbackFn) {\n    this.addManagedListeners(this, {\n      fieldValueChanged: () => {\n        callbackFn(this.degrees);\n      }\n    });\n    return this;\n  }\n  getValue(radians) {\n    return radians ? this.toRadians(this.degrees) : this.degrees;\n  }\n  setValue(degrees, radians, silent) {\n    let radiansValue;\n    if (!radians) {\n      radiansValue = this.normalizeAngle180(this.toRadians(degrees));\n    } else {\n      radiansValue = degrees;\n    }\n    degrees = this.toDegrees(radiansValue);\n    if (this.degrees !== degrees) {\n      this.degrees = Math.floor(degrees);\n      this.calculateCartesian();\n      this.positionChildCircle(radiansValue);\n      if (!silent) {\n        this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\n      }\n    }\n    return this;\n  }\n  setWidth(width) {\n    _setFixedWidth(this.getGui(), width);\n    return this;\n  }\n  setDisabled(disabled) {\n    super.setDisabled(disabled);\n    this.eAngleValue.setDisabled(disabled);\n    return this;\n  }\n  destroy() {\n    this.dragService.removeDragSource(this.dragListener);\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/fontPanel.ts\nimport {\n  AgSelectSelector,\n  Component as Component14,\n  RefPlaceholder as RefPlaceholder9,\n  _capitalise,\n  _includes as _includes6,\n  _removeFromParent as _removeFromParent3\n} from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector6 } from \"@ag-grid-enterprise/core\";\nvar FontPanel = class extends Component14 {\n  constructor(params) {\n    super();\n    this.params = params;\n    this.fontGroup = RefPlaceholder9;\n    this.activeComps = [];\n    this.chartOptions = params.chartMenuParamsFactory.getChartOptions();\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const {\n      cssIdentifier = \"charts-format-sub-level\",\n      name: title,\n      enabled,\n      onEnableChange,\n      suppressEnabledCheckbox,\n      chartMenuParamsFactory,\n      keyMapper\n    } = this.params;\n    const fontGroupParams = {\n      cssIdentifier,\n      direction: \"vertical\",\n      suppressOpenCloseIcons: true,\n      title,\n      enabled,\n      suppressEnabledCheckbox: true,\n      onEnableChange: (enabled2) => {\n        if (onEnableChange) {\n          onEnableChange(enabled2);\n        }\n      },\n      useToggle: !suppressEnabledCheckbox\n    };\n    this.setTemplate(\n      /* html */\n      `<div class=\"ag-font-panel\">\n        <ag-group-component data-ref=\"fontGroup\">\n            <ag-select data-ref=\"familySelect\"></ag-select>\n            <ag-select data-ref=\"weightStyleSelect\"></ag-select>\n            <div class=\"ag-charts-font-size-color\">\n                <ag-select data-ref=\"sizeSelect\"></ag-select>\n                <ag-color-picker data-ref=\"colorPicker\"></ag-color-picker>\n            </div>\n        </ag-group-component>\n    </div>`,\n      [AgGroupComponentSelector6, AgSelectSelector, AgColorPickerSelector],\n      {\n        fontGroup: fontGroupParams,\n        familySelect: this.getFamilySelectParams(),\n        weightStyleSelect: this.getWeightStyleSelectParams(),\n        sizeSelect: this.getSizeSelectParams(),\n        colorPicker: chartMenuParamsFactory.getDefaultColorPickerParams(keyMapper(\"color\"))\n      }\n    );\n    this.addOrRemoveCssClass(\"ag-font-panel-no-header\", !title);\n  }\n  addItem(comp, prepend) {\n    if (prepend) {\n      this.fontGroup.prependItem(comp);\n    } else {\n      this.fontGroup.addItem(comp);\n    }\n    this.activeComps.push(comp);\n  }\n  setEnabled(enabled) {\n    this.fontGroup.setEnabled(enabled);\n  }\n  getFamilySelectParams() {\n    const families = [\n      \"Arial, sans-serif\",\n      \"Aria Black, sans-serif\",\n      \"Book Antiqua,  serif\",\n      \"Charcoal, sans-serif\",\n      \"Comic Sans MS, cursive\",\n      \"Courier, monospace\",\n      \"Courier New, monospace\",\n      \"Gadget, sans-serif\",\n      \"Geneva, sans-serif\",\n      \"Helvetica, sans-serif\",\n      \"Impact, sans-serif\",\n      \"Lucida Console, monospace\",\n      \"Lucida Grande, sans-serif\",\n      \"Lucida Sans Unicode,  sans-serif\",\n      \"Monaco, monospace\",\n      \"Palatino Linotype, serif\",\n      \"Palatino, serif\",\n      \"Times New Roman, serif\",\n      \"Times, serif\",\n      \"Verdana, sans-serif\"\n    ];\n    const family = this.getInitialFontValue(\"fontFamily\");\n    let initialValue = families[0];\n    if (family) {\n      const lowerCaseValues = families.map((f) => f.toLowerCase());\n      const valueIndex = lowerCaseValues.indexOf(family.toLowerCase());\n      if (valueIndex >= 0) {\n        initialValue = families[valueIndex];\n      } else {\n        const capitalisedFontValue = _capitalise(family);\n        families.push(capitalisedFontValue);\n        initialValue = capitalisedFontValue;\n      }\n    }\n    const options = families.sort().map((value) => ({ value, text: value }));\n    return this.params.chartMenuParamsFactory.getDefaultSelectParamsWithoutValueParams(\n      \"font\",\n      options,\n      `${initialValue}`,\n      (newValue) => this.setFont({ fontFamily: newValue })\n    );\n  }\n  getSizeSelectParams() {\n    const sizes = [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36];\n    const size = this.getInitialFontValue(\"fontSize\");\n    if (!_includes6(sizes, size)) {\n      sizes.push(size);\n    }\n    const options = sizes.sort((a, b) => a - b).map((value) => ({ value: `${value}`, text: `${value}` }));\n    return this.params.chartMenuParamsFactory.getDefaultSelectParamsWithoutValueParams(\n      \"size\",\n      options,\n      `${size}`,\n      (newValue) => this.setFont({ fontSize: parseInt(newValue, 10) })\n    );\n  }\n  getWeightStyleSelectParams() {\n    const weight = this.getInitialFontValue(\"fontWeight\") ?? \"normal\";\n    const style = this.getInitialFontValue(\"fontStyle\") ?? \"normal\";\n    const weightStyles = [\n      { name: \"normal\", weight: \"normal\", style: \"normal\" },\n      { name: \"bold\", weight: \"bold\", style: \"normal\" },\n      { name: \"italic\", weight: \"normal\", style: \"italic\" },\n      { name: \"boldItalic\", weight: \"bold\", style: \"italic\" }\n    ];\n    let selectedOption = weightStyles.find((x) => x.weight === weight && x.style === style);\n    if (!selectedOption) {\n      selectedOption = { name: \"predefined\", weight, style };\n      weightStyles.unshift(selectedOption);\n    }\n    const options = weightStyles.map((ws) => ({\n      value: ws.name,\n      text: this.chartTranslationService.translate(ws.name)\n    }));\n    return this.params.chartMenuParamsFactory.getDefaultSelectParamsWithoutValueParams(\n      \"weight\",\n      options,\n      selectedOption.name,\n      (newValue) => {\n        const selectedWeightStyle = weightStyles.find((x) => x.name === newValue);\n        this.setFont({ fontWeight: selectedWeightStyle.weight, fontStyle: selectedWeightStyle.style });\n      }\n    );\n  }\n  destroyActiveComps() {\n    this.activeComps.forEach((comp) => {\n      _removeFromParent3(comp.getGui());\n      this.destroyBean(comp);\n    });\n  }\n  destroy() {\n    this.destroyActiveComps();\n    super.destroy();\n  }\n  setFont(font) {\n    const { keyMapper } = this.params;\n    Object.entries(font).forEach(([fontKey, value]) => {\n      if (value) {\n        this.chartOptions.setValue(keyMapper(fontKey), value);\n      }\n    });\n  }\n  getInitialFontValue(fontKey) {\n    const { keyMapper } = this.params;\n    return this.chartOptions.getValue(keyMapper(fontKey));\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/axis/axisTicksPanel.ts\nimport { Component as Component15 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector7 } from \"@ag-grid-enterprise/core\";\nvar AxisTicksPanel = class extends Component15 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const { chartMenuUtils } = this;\n    const axisTicksGroupParams = chartMenuUtils.addEnableParams(\"tick.enabled\", {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      suppressOpenCloseIcons: true,\n      title: this.chartTranslationService.translate(\"ticks\"),\n      suppressEnabledCheckbox: true,\n      useToggle: true\n    });\n    const axisTicksColorPickerParams = chartMenuUtils.getDefaultColorPickerParams(\"tick.stroke\");\n    const axisTicksWidthSliderParams = chartMenuUtils.getDefaultSliderParams(\"tick.width\", \"width\", 10);\n    const axisTicksSizeSliderParams = chartMenuUtils.getDefaultSliderParams(\"tick.size\", \"length\", 30);\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"axisTicksGroup\">\n                <ag-color-picker data-ref=\"axisTicksColorPicker\"></ag-color-picker>\n                <ag-slider data-ref=\"axisTicksWidthSlider\"></ag-slider>\n                <ag-slider data-ref=\"axisTicksSizeSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector7, AgColorPickerSelector, AgSliderSelector],\n      {\n        axisTicksGroup: axisTicksGroupParams,\n        axisTicksColorPicker: axisTicksColorPickerParams,\n        axisTicksWidthSlider: axisTicksWidthSliderParams,\n        axisTicksSizeSlider: axisTicksSizeSliderParams\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/axis/gridLinePanel.ts\nimport { Component as Component16 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector8 } from \"@ag-grid-enterprise/core\";\nvar GridLinePanel = class extends Component16 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n    this.chartOptions = chartMenuUtils.getChartOptions();\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const gridLineGroupParams = this.chartMenuUtils.addEnableParams(\"gridLine.enabled\", {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      suppressOpenCloseIcons: true,\n      title: this.chartTranslationService.translate(\"gridLines\"),\n      suppressEnabledCheckbox: true,\n      useToggle: true\n    });\n    const gridLineColorPickerParams = this.getGridLineColorPickerParams(\"color\");\n    const gridLineWidthSliderParams = this.getGridLineWidthSliderParams(\"thickness\");\n    const gridLineLineDashSliderParams = this.getGridLineDashSliderParams(\"lineDash\");\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"gridLineGroup\">\n                <ag-color-picker data-ref=\"gridLineColorPicker\"></ag-color-picker>\n                <ag-slider data-ref=\"gridLineWidthSlider\"></ag-slider>\n                <ag-slider data-ref=\"gridLineLineDashSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector8, AgColorPickerSelector, AgSliderSelector],\n      {\n        gridLineGroup: gridLineGroupParams,\n        gridLineColorPicker: gridLineColorPickerParams,\n        gridLineWidthSlider: gridLineWidthSliderParams,\n        gridLineLineDashSlider: gridLineLineDashSliderParams\n      }\n    );\n  }\n  getGridLineColorPickerParams(labelKey) {\n    return this.chartMenuUtils.getDefaultColorPickerParams(\"gridLine.style\", labelKey, {\n      formatInputValue: (value) => {\n        return value?.[0]?.stroke;\n      },\n      parseInputValue: (value) => {\n        const styles = this.chartOptions.getValue(\"gridLine.style\") ?? [];\n        if (styles.length === 0)\n          return [{ stroke: value, lineDash: [] }];\n        return [{ ...styles[0], stroke: value }];\n      }\n    });\n  }\n  getGridLineWidthSliderParams(labelKey) {\n    return this.chartMenuUtils.getDefaultSliderParams(\"gridLine.width\", labelKey, 10);\n  }\n  getGridLineDashSliderParams(labelKey) {\n    const initialStyles = this.chartOptions.getValue(\"gridLine.style\");\n    const initialValue = initialStyles?.[0]?.lineDash?.[0];\n    const params = this.chartMenuUtils.getDefaultSliderParamsWithoutValueParams(initialValue ?? 0, labelKey, 30);\n    params.onValueChange = (value) => {\n      const stroke = this.chartOptions.getValue(\"gridLine.style.0.stroke\");\n      this.chartOptions.setValue(\"gridLine.style\", [\n        { lineDash: [value], stroke }\n      ]);\n    };\n    return params;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/axis/cartesianAxisPanel.ts\nvar DEFAULT_TIME_AXIS_FORMAT = \"%d %B %Y\";\nvar CartesianAxisPanel = class extends Component17 {\n  constructor(axisType, options) {\n    super();\n    this.axisType = axisType;\n    this.options = options;\n    this.axisGroup = RefPlaceholder10;\n    this.axisTypeSelect = RefPlaceholder10;\n    this.axisPositionSelect = RefPlaceholder10;\n    this.axisTimeFormatSelect = RefPlaceholder10;\n    this.activePanels = [];\n    this.axisLabelUpdateFuncs = [];\n    const { chartOptionsService, seriesType } = options;\n    this.chartOptionsSeriesProxy = chartOptionsService.getSeriesOptionsProxy(() => seriesType);\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const {\n      isExpandedOnInit: expanded,\n      chartOptionsService,\n      chartController,\n      registerGroupComponent\n    } = this.options;\n    const labelKey = this.axisType;\n    const axisGroupParams = {\n      cssIdentifier: \"charts-format-top-level\",\n      direction: \"vertical\",\n      title: this.translate(labelKey),\n      expanded,\n      suppressEnabledCheckbox: true\n    };\n    const chartAxisOptionsProxy = chartOptionsService.getCartesianAxisOptionsProxy(this.axisType);\n    const chartAxisOptions = this.createManagedBean(new ChartMenuParamsFactory(chartAxisOptionsProxy));\n    const chartAxisThemeOverrides = this.createManagedBean(\n      new ChartMenuParamsFactory(chartOptionsService.getCartesianAxisThemeOverridesProxy(this.axisType))\n    );\n    const axisTypeSelectParams = this.getAxisTypeSelectParams(\n      chartAxisOptions,\n      chartOptionsService.getCartesianAxisAppliedThemeOverridesProxy(this.axisType)\n    );\n    const axisPositionSelectParams = this.getAxisPositionSelectParams(chartAxisOptions);\n    const axisTimeFormatSelectParams = this.getAxisTimeFormatSelectParams(chartAxisOptions);\n    const axisColorInputParams = this.getAxisColorInputParams(chartAxisThemeOverrides);\n    const axisLineWidthSliderParams = this.getAxisLineWidthSliderParams(chartAxisThemeOverrides);\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"axisGroup\">\n                <ag-select data-ref=\"axisTypeSelect\"></ag-select>\n                <ag-select data-ref=\"axisTimeFormatSelect\"></ag-select>\n                <ag-select data-ref=\"axisPositionSelect\"></ag-select>\n                <ag-color-picker data-ref=\"axisColorInput\"></ag-color-picker>\n                <ag-slider data-ref=\"axisLineWidthSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector9, AgSelectSelector2, AgColorPickerSelector, AgSliderSelector],\n      {\n        axisGroup: axisGroupParams,\n        axisTypeSelect: axisTypeSelectParams ?? void 0,\n        axisPositionSelect: axisPositionSelectParams ?? void 0,\n        axisTimeFormatSelect: axisTimeFormatSelectParams ?? void 0,\n        axisColorInput: axisColorInputParams,\n        axisLineWidthSlider: axisLineWidthSliderParams\n      }\n    );\n    registerGroupComponent(this.axisGroup);\n    this.axisTypeSelect.setDisplayed(!!axisTypeSelectParams.options?.length);\n    if (!axisPositionSelectParams)\n      this.removeTemplateComponent(this.axisPositionSelect);\n    const updateTimeFormatVisibility = () => {\n      const isTimeAxis = chartAxisOptionsProxy.getValue(\"type\") === \"time\";\n      _setDisplayed3(this.axisTimeFormatSelect.getGui(), isTimeAxis);\n    };\n    if (!axisTimeFormatSelectParams) {\n      this.removeTemplateComponent(this.axisTimeFormatSelect);\n    } else {\n      updateTimeFormatVisibility();\n      this.addManagedEventListeners({\n        chartOptionsChanged: () => {\n          updateTimeFormatVisibility();\n        }\n      });\n    }\n    this.initGridLines(chartAxisThemeOverrides);\n    this.initAxisTicks(chartAxisThemeOverrides);\n    this.initAxisLabels(chartAxisThemeOverrides);\n    const updateAxisLabelRotations = () => this.axisLabelUpdateFuncs.forEach((func) => func());\n    this.addManagedListeners(chartController, {\n      chartUpdated: updateAxisLabelRotations,\n      chartModelUpdate: () => setTimeout(() => {\n        this.refreshAxisTypeSelect(chartAxisOptions);\n        updateTimeFormatVisibility();\n      })\n    });\n  }\n  getAxisTypeSelectParams(chartAxisOptions, chartAxisAppliedThemeOverrides) {\n    const chartOptions = chartAxisOptions.getChartOptions();\n    const axisTypeSelectOptions = this.getAxisTypeSelectOptions();\n    const params = chartAxisOptions.getDefaultSelectParams(\"type\", \"axisType\", axisTypeSelectOptions);\n    params.onValueChange = (value) => {\n      const previousAxisType = chartOptions.getValue(\"type\");\n      if (value === previousAxisType)\n        return;\n      const previousAxisThemeOverrides = chartAxisAppliedThemeOverrides.getValue(\"*\");\n      const previousAxisIsTimeAxis = previousAxisType === \"time\";\n      const updatedAxisIsTimeAxis = value === \"time\";\n      const updatedLabelFormat = previousAxisIsTimeAxis !== updatedAxisIsTimeAxis ? updatedAxisIsTimeAxis ? DEFAULT_TIME_AXIS_FORMAT : void 0 : null;\n      this.options.chartOptionsService.setCartesianCategoryAxisType(this.axisType, value);\n      if (updatedLabelFormat !== null) {\n        const existingLabel = chartOptions.getValue(\"label\") ?? {};\n        chartOptions.setValue(\"label\", {\n          ...existingLabel,\n          format: updatedLabelFormat\n        });\n      }\n      chartAxisAppliedThemeOverrides.setValue(\"*\", previousAxisThemeOverrides);\n    };\n    return params;\n  }\n  refreshAxisTypeSelect(chartAxisOptions) {\n    const options = this.getAxisTypeSelectOptions();\n    const hasOptions = !!options.length;\n    this.axisTypeSelect.setDisplayed(hasOptions);\n    if (!hasOptions) {\n      return;\n    }\n    this.axisTypeSelect.clearOptions().addOptions(options).setValue(chartAxisOptions.getChartOptions().getValue(\"type\"));\n  }\n  getAxisTypeSelectOptions() {\n    const { chartController } = this.options;\n    const chartType = chartController.getChartType();\n    const supportsNumericalAxis = () => {\n      const testDatum = chartController.getChartData()[0];\n      if (!testDatum) {\n        return false;\n      }\n      return chartController.getSelectedDimensions().every((col) => !isNaN(parseFloat(testDatum[col.colId])));\n    };\n    if ([\"heatmap\", \"histogram\", \"boxPlot\", \"rangeBar\", \"scatter\", \"bubble\"].includes(chartType) || chartController.isGrouping() || !this.isCategoryAxis() || chartController.isCategorySeriesSwitched() || !supportsNumericalAxis()) {\n      return [];\n    }\n    return [\"category\", \"number\", \"time\"].map((value) => ({\n      value,\n      text: this.translate(value)\n    }));\n  }\n  isCategoryAxis() {\n    const isHorizontal = this.chartOptionsSeriesProxy.getValue(\"direction\") === \"horizontal\";\n    return isHorizontal && this.axisType === \"yAxis\" || !isHorizontal && this.axisType === \"xAxis\";\n  }\n  getAxisPositionSelectParams(chartAxisOptions) {\n    const axisPositionSelectOptions = ((chartType, axisType) => {\n      switch (chartType) {\n        case \"heatmap\":\n          return null;\n        default:\n          switch (axisType) {\n            case \"xAxis\":\n              return [\n                { value: \"top\", text: this.translate(\"top\") },\n                { value: \"bottom\", text: this.translate(\"bottom\") }\n              ];\n            case \"yAxis\":\n              return [\n                { value: \"left\", text: this.translate(\"left\") },\n                { value: \"right\", text: this.translate(\"right\") }\n              ];\n          }\n      }\n    })(this.options.chartController.getChartType(), this.axisType);\n    if (!axisPositionSelectOptions)\n      return null;\n    return chartAxisOptions.getDefaultSelectParams(\"position\", \"position\", axisPositionSelectOptions);\n  }\n  getAxisTimeFormatSelectParams(chartAxisOptions) {\n    if (!this.isCategoryAxis()) {\n      return null;\n    }\n    const axisTimeFormatSelectOptions = [\n      { value: \"%d/%m/%Y\", text: this.translate(\"timeFormatSlashesDDMMYYYY\") },\n      { value: \"%m/%d/%Y\", text: this.translate(\"timeFormatSlashesMMDDYYYY\") },\n      { value: \"%d/%m/%y\", text: this.translate(\"timeFormatSlashesDDMMYY\") },\n      { value: \"%m/%d/%y\", text: this.translate(\"timeFormatSlashesMMDDYY\") },\n      { value: \"%d.%e.%y\", text: this.translate(\"timeFormatDotsDDMYY\") },\n      { value: \"%e.%d.%y\", text: this.translate(\"timeFormatDotsMDDYY\") },\n      { value: \"%Y-%m-%d\", text: this.translate(\"timeFormatDashesYYYYMMDD\") },\n      { value: \"%d %B %Y\", text: this.translate(\"timeFormatSpacesDDMMMMYYYY\") },\n      { value: \"%H:%M:%S\", text: this.translate(\"timeFormatHHMMSS\") },\n      { value: \"%I:%M:%S %p\", text: this.translate(\"timeFormatHHMMSSAmPm\") }\n    ];\n    return chartAxisOptions.getDefaultSelectParams(\"label.format\", \"timeFormat\", axisTimeFormatSelectOptions);\n  }\n  getAxisColorInputParams(chartAxisThemeOverrides) {\n    return chartAxisThemeOverrides.getDefaultColorPickerParams(\"line.stroke\");\n  }\n  getAxisLineWidthSliderParams(chartAxisThemeOverrides) {\n    const chartOptions = chartAxisThemeOverrides.getChartOptions();\n    const getAxisLineWidth = () => {\n      const isAxisLineEnabled = chartOptions.getValue(\"line.enabled\");\n      if (!isAxisLineEnabled)\n        return null;\n      return chartOptions.getValue(\"line.width\");\n    };\n    const setAxisLineWidth = (value) => {\n      chartOptions.setValues([\n        { expression: \"line.enabled\", value: value != null },\n        { expression: \"line.width\", value: value ?? 0 }\n      ]);\n    };\n    const axisLineWidthSliderParams = chartAxisThemeOverrides.getDefaultSliderParamsWithoutValueParams(\n      getAxisLineWidth() ?? 0,\n      \"thickness\",\n      10\n    );\n    axisLineWidthSliderParams.onValueChange = (newValue) => {\n      setAxisLineWidth(newValue === 0 ? null : newValue);\n    };\n    return axisLineWidthSliderParams;\n  }\n  initGridLines(chartAxisThemeOverrides) {\n    const chartType = this.options.chartController.getChartType();\n    if (chartType === \"heatmap\") {\n      return;\n    }\n    const gridLineComp = this.createBean(new GridLinePanel(chartAxisThemeOverrides));\n    this.axisGroup.addItem(gridLineComp);\n    this.activePanels.push(gridLineComp);\n  }\n  initAxisTicks(chartAxisThemeOverrides) {\n    if (!this.hasConfigurableAxisTicks())\n      return;\n    const axisTicksComp = this.createBean(new AxisTicksPanel(chartAxisThemeOverrides));\n    this.axisGroup.addItem(axisTicksComp);\n    this.activePanels.push(axisTicksComp);\n  }\n  hasConfigurableAxisTicks() {\n    const chartType = this.options.chartController.getChartType();\n    switch (chartType) {\n      case \"radarLine\":\n      case \"radarArea\":\n      case \"rangeBar\":\n      case \"boxPlot\":\n      case \"waterfall\":\n        return false;\n      default:\n        return true;\n    }\n  }\n  initAxisLabels(chartAxisThemeOverrides) {\n    const params = {\n      name: this.translate(\"labels\"),\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      chartMenuParamsFactory: chartAxisThemeOverrides,\n      keyMapper: (key) => `label.${key}`\n    };\n    const labelPanelComp = this.createBean(new FontPanel(params));\n    this.axisGroup.addItem(labelPanelComp);\n    this.activePanels.push(labelPanelComp);\n    this.addAdditionalLabelComps(labelPanelComp, chartAxisThemeOverrides);\n  }\n  addAdditionalLabelComps(labelPanelComp, chartAxisThemeOverrides) {\n    this.addLabelPadding(labelPanelComp, chartAxisThemeOverrides);\n    const rotationComp = this.createRotationWidget(\"labelRotation\", chartAxisThemeOverrides);\n    const autoRotateCb = this.initLabelRotation(rotationComp, chartAxisThemeOverrides);\n    labelPanelComp.addItem(autoRotateCb);\n    labelPanelComp.addItem(rotationComp);\n  }\n  initLabelRotation(rotationComp, chartAxisThemeOverrides) {\n    const chartOptions = chartAxisThemeOverrides.getChartOptions();\n    const getLabelRotationValue = () => {\n      return chartOptions.getValue(\"label.rotation\");\n    };\n    const getLabelAutoRotateValue = () => {\n      return chartOptions.getValue(\"label.autoRotate\");\n    };\n    const updateAutoRotate = (autoRotate2) => {\n      if (autoRotate2)\n        this.prevRotation = getLabelRotationValue();\n      chartOptions.setValues([\n        { expression: \"label.autoRotate\", value: autoRotate2 },\n        // Clear the rotation option when activating auto-rotate, reinstate the previous value when deactivating\n        { expression: \"label.rotation\", value: autoRotate2 ? void 0 : this.prevRotation }\n      ]);\n      rotationComp.setDisplayed(!autoRotate2);\n    };\n    const rotation = getLabelRotationValue();\n    const autoRotate = typeof rotation === \"number\" ? false : getLabelAutoRotateValue();\n    const autoRotateCheckbox = this.createBean(\n      new AgCheckbox2({\n        label: this.translate(\"autoRotate\"),\n        value: autoRotate,\n        onValueChange: updateAutoRotate\n      })\n    );\n    rotationComp.setDisplayed(!autoRotate);\n    return autoRotateCheckbox;\n  }\n  createRotationWidget(labelKey, chartAxisThemeOverrides) {\n    const chartOptions = chartAxisThemeOverrides.getChartOptions();\n    const getLabelRotationValue = () => {\n      return chartOptions.getValue(\"label.rotation\");\n    };\n    const setLabelRotationValue = (value) => {\n      return chartOptions.setValue(\"label.rotation\", value);\n    };\n    const degreesSymbol = String.fromCharCode(176);\n    const label = `${this.chartTranslationService.translate(labelKey)} ${degreesSymbol}`;\n    const angleSelect = new AgAngleSelect({\n      label,\n      labelWidth: \"flex\",\n      value: getLabelRotationValue() ?? 0,\n      onValueChange: setLabelRotationValue\n    });\n    this.axisLabelUpdateFuncs.push(() => {\n      angleSelect.setValue(getLabelRotationValue() ?? 0);\n    });\n    return this.createBean(angleSelect);\n  }\n  addLabelPadding(labelPanelComp, chartAxisThemeOverrides) {\n    const labelPaddingSlider = this.createBean(\n      new AgSlider(chartAxisThemeOverrides.getDefaultSliderParams(\"label.padding\", \"padding\", 30))\n    );\n    labelPanelComp.addItem(labelPaddingSlider);\n  }\n  translate(key) {\n    return this.chartTranslationService.translate(key);\n  }\n  removeTemplateComponent(component) {\n    _removeFromParent4(component.getGui());\n    this.destroyBean(component);\n  }\n  destroyActivePanels() {\n    this.activePanels.forEach((panel) => {\n      _removeFromParent4(panel.getGui());\n      this.destroyBean(panel);\n    });\n  }\n  destroy() {\n    this.destroyActivePanels();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/axis/polarAxisPanel.ts\nimport { AgSelect as AgSelect6, Component as Component18, RefPlaceholder as RefPlaceholder11 } from \"@ag-grid-community/core\";\nimport { AgGroupComponent as AgGroupComponent4, AgGroupComponentSelector as AgGroupComponentSelector10 } from \"@ag-grid-enterprise/core\";\nvar PolarAxisPanel = class extends Component18 {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.axisGroup = RefPlaceholder11;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const { isExpandedOnInit: expanded, chartAxisMenuParamsFactory, registerGroupComponent } = this.options;\n    const axisGroupParams = {\n      cssIdentifier: \"charts-format-top-level\",\n      direction: \"vertical\",\n      title: this.translate(\"polarAxis\"),\n      expanded,\n      suppressEnabledCheckbox: true\n    };\n    const axisColorInputParams = chartAxisMenuParamsFactory.getDefaultColorPickerParams(\"line.stroke\");\n    const axisLineWidthSliderParams = chartAxisMenuParamsFactory.getDefaultSliderParams(\n      \"line.width\",\n      \"thickness\",\n      10\n    );\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"axisGroup\">\n                <ag-color-picker data-ref=\"axisColorInput\"></ag-color-picker>\n                <ag-slider data-ref=\"axisLineWidthSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector10, AgColorPickerSelector, AgSliderSelector],\n      {\n        axisGroup: axisGroupParams,\n        axisColorInput: axisColorInputParams,\n        axisLineWidthSlider: axisLineWidthSliderParams\n      }\n    );\n    registerGroupComponent(this.axisGroup);\n    this.initAxis();\n    this.initAxisLabels();\n    this.initRadiusAxis();\n  }\n  initAxis() {\n    const chartType = this.options.chartController.getChartType();\n    const hasConfigurableAxisShape = [\"radarLine\", \"radarArea\"].includes(chartType);\n    if (hasConfigurableAxisShape) {\n      const options = [\n        { value: \"circle\", text: this.translate(\"circle\") },\n        { value: \"polygon\", text: this.translate(\"polygon\") }\n      ];\n      this.axisGroup.addItem(\n        this.createSelect({\n          labelKey: \"shape\",\n          options,\n          property: \"shape\"\n        })\n      );\n    }\n    if (chartType !== \"pie\") {\n      this.axisGroup.addItem(\n        this.createSlider({\n          labelKey: \"innerRadius\",\n          defaultMaxValue: 1,\n          property: \"innerRadiusRatio\"\n        })\n      );\n    }\n  }\n  initAxisLabels() {\n    const params = {\n      name: this.translate(\"labels\"),\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      chartMenuParamsFactory: this.options.chartAxisMenuParamsFactory,\n      keyMapper: (key) => `label.${key}`\n    };\n    const labelPanelComp = this.createManagedBean(new FontPanel(params));\n    const labelOrientationComp = this.createOrientationWidget();\n    labelPanelComp.addItem(labelOrientationComp);\n    this.axisGroup.addItem(labelPanelComp);\n  }\n  createOrientationWidget() {\n    const options = [\n      { value: \"fixed\", text: this.translate(\"fixed\") },\n      { value: \"parallel\", text: this.translate(\"parallel\") },\n      { value: \"perpendicular\", text: this.translate(\"perpendicular\") }\n    ];\n    return this.createSelect({\n      labelKey: \"orientation\",\n      options,\n      property: \"label.orientation\"\n    });\n  }\n  initRadiusAxis() {\n    const chartSeriesType = getSeriesType(this.options.chartController.getChartType());\n    if (!isRadial(chartSeriesType))\n      return;\n    const items = [\n      this.createSlider({\n        labelKey: \"groupPadding\",\n        defaultMaxValue: 1,\n        property: \"paddingInner\"\n      }),\n      this.createSlider({\n        labelKey: \"seriesPadding\",\n        defaultMaxValue: 1,\n        property: \"groupPaddingInner\"\n      })\n    ];\n    const paddingPanelComp = this.createManagedBean(\n      new AgGroupComponent4({\n        cssIdentifier: \"charts-format-sub-level\",\n        direction: \"vertical\",\n        suppressOpenCloseIcons: true,\n        enabled: true,\n        suppressEnabledCheckbox: true,\n        title: this.translate(\"padding\"),\n        items\n      })\n    ).hideEnabledCheckbox(true).hideOpenCloseIcons(true);\n    this.axisGroup.addItem(paddingPanelComp);\n  }\n  createSlider(config) {\n    const { labelKey, defaultMaxValue, step = 0.05, property } = config;\n    const params = this.options.chartAxisMenuParamsFactory.getDefaultSliderParams(\n      property,\n      labelKey,\n      defaultMaxValue\n    );\n    params.step = step;\n    return this.createManagedBean(new AgSlider(params));\n  }\n  createSelect(config) {\n    const { labelKey, options, property } = config;\n    return this.createManagedBean(\n      new AgSelect6(this.options.chartAxisMenuParamsFactory.getDefaultSelectParams(property, labelKey, options))\n    );\n  }\n  translate(key) {\n    return this.chartTranslationService.translate(key);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/chart/chartPanel.ts\nimport { Component as Component21, RefPlaceholder as RefPlaceholder13 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector13 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/chart/backgroundPanel.ts\nimport { Component as Component19 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector11 } from \"@ag-grid-enterprise/core\";\nvar BackgroundPanel = class extends Component19 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const chartBackgroundGroupParams = this.chartMenuUtils.addEnableParams(\n      \"background.visible\",\n      {\n        cssIdentifier: \"charts-format-sub-level\",\n        direction: \"vertical\",\n        suppressOpenCloseIcons: true,\n        title: this.chartTranslationService.translate(\"background\"),\n        suppressEnabledCheckbox: true,\n        useToggle: true\n      }\n    );\n    const colorPickerParams = this.chartMenuUtils.getDefaultColorPickerParams(\"background.fill\");\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"chartBackgroundGroup\">\n                <ag-color-picker data-ref=\"colorPicker\"></ag-color-picker>\n            </ag-group-component>\n        <div>`,\n      [AgGroupComponentSelector11, AgColorPickerSelector],\n      {\n        chartBackgroundGroup: chartBackgroundGroupParams,\n        colorPicker: colorPickerParams\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/chart/paddingPanel.ts\nimport { Component as Component20, RefPlaceholder as RefPlaceholder12 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector12 } from \"@ag-grid-enterprise/core\";\nvar PaddingPanel = class extends Component20 {\n  constructor(chartMenuUtils, chartController) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n    this.chartController = chartController;\n    this.paddingTopSlider = RefPlaceholder12;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const chartPaddingGroupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      suppressOpenCloseIcons: true,\n      title: this.chartTranslationService.translate(\"padding\"),\n      suppressEnabledCheckbox: true\n    };\n    const getSliderParams = (property) => this.chartMenuUtils.getDefaultSliderParams(\"padding.\" + property, property, 200);\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"chartPaddingGroup\">\n                <ag-slider data-ref=\"paddingTopSlider\"></ag-slider>\n                <ag-slider data-ref=\"paddingRightSlider\"></ag-slider>\n                <ag-slider data-ref=\"paddingBottomSlider\"></ag-slider>\n                <ag-slider data-ref=\"paddingLeftSlider\"></ag-slider>\n            </ag-group-component>\n        <div>`,\n      [AgGroupComponentSelector12, AgSliderSelector],\n      {\n        chartPaddingGroup: chartPaddingGroupParams,\n        paddingTopSlider: getSliderParams(\"top\"),\n        paddingRightSlider: getSliderParams(\"right\"),\n        paddingBottomSlider: getSliderParams(\"bottom\"),\n        paddingLeftSlider: getSliderParams(\"left\")\n      }\n    );\n    this.addManagedEventListeners({\n      chartOptionsChanged: (e) => {\n        this.updateTopPadding(e.chartOptions);\n      }\n    });\n  }\n  updateTopPadding(chartOptions) {\n    const topPadding = [...this.chartController.getChartSeriesTypes(), \"common\"].map((seriesType) => chartOptions[seriesType]?.padding?.top).find((value) => value != null);\n    if (topPadding != null) {\n      this.paddingTopSlider.setValue(`${topPadding}`);\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/chart/chartPanel.ts\nvar ChartPanel = class extends Component21 {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.chartGroup = RefPlaceholder13;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const {\n      chartController,\n      chartMenuParamsFactory,\n      isExpandedOnInit: expanded,\n      registerGroupComponent\n    } = this.options;\n    const chartGroupParams = {\n      cssIdentifier: \"charts-format-top-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"chartStyle\"),\n      expanded,\n      suppressEnabledCheckbox: true,\n      items: [\n        this.createManagedBean(new PaddingPanel(chartMenuParamsFactory, chartController)),\n        this.createManagedBean(new BackgroundPanel(chartMenuParamsFactory))\n      ]\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"chartGroup\"></ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector13],\n      { chartGroup: chartGroupParams }\n    );\n    registerGroupComponent(this.chartGroup);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/groupExpansionFeature.ts\nimport { BeanStub as BeanStub13 } from \"@ag-grid-community/core\";\nvar GroupExpansionFeature = class extends BeanStub13 {\n  constructor(groupContainer) {\n    super();\n    this.groupContainer = groupContainer;\n    this.id = 0;\n    this.groupComponents = /* @__PURE__ */ new Map();\n  }\n  addGroupComponent(groupComponent) {\n    const id = this.id++;\n    this.groupComponents.set(id, groupComponent);\n    if (groupComponent.isExpanded()) {\n      this.expandedGroupComponent = id;\n    }\n    groupComponent.onExpandedChange((expanded) => {\n      if (expanded) {\n        const previouslyExpandedGroupComponent = this.expandedGroupComponent;\n        this.expandedGroupComponent = id;\n        if (previouslyExpandedGroupComponent != null) {\n          const groupComponentGui = groupComponent.getGui();\n          const groupPositionInViewport = groupComponentGui.offsetTop - this.groupContainer.parentElement.scrollTop;\n          this.groupComponents.get(previouslyExpandedGroupComponent)?.toggleGroupExpand(false, true);\n          let newScrollTop = groupComponentGui.offsetTop - groupPositionInViewport;\n          if (newScrollTop < 0) {\n            newScrollTop = 0;\n          }\n          if (newScrollTop !== this.groupContainer.parentElement.scrollTop) {\n            this.groupContainer.parentElement.scrollTop = newScrollTop;\n          }\n        }\n      } else {\n        this.expandedGroupComponent = void 0;\n      }\n    });\n  }\n  destroy() {\n    this.groupComponents.clear();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/legend/legendPanel.ts\nimport { AgCheckbox as AgCheckbox3, AgSelect as AgSelect7, Component as Component22, RefPlaceholder as RefPlaceholder14 } from \"@ag-grid-community/core\";\nimport { AgGroupComponent as AgGroupComponent5, AgGroupComponentSelector as AgGroupComponentSelector14 } from \"@ag-grid-enterprise/core\";\nvar LegendPanel = class extends Component22 {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.legendGroup = RefPlaceholder14;\n    this.isGradient = [\"treemap\", \"sunburst\", \"heatmap\"].includes(options.seriesType);\n    this.key = this.isGradient ? \"gradientLegend\" : \"legend\";\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const { chartMenuParamsFactory, isExpandedOnInit: expanded, registerGroupComponent } = this.options;\n    const positionSelect = this.createManagedBean(\n      new AgSelect7(\n        chartMenuParamsFactory.getDefaultSelectParams(\n          `${this.key}.position`,\n          \"position\",\n          [\"top\", \"right\", \"bottom\", \"left\"].map((position) => ({\n            value: position,\n            text: this.chartTranslationService.translate(position)\n          }))\n        )\n      )\n    );\n    const enabledGroup = this.createManagedBean(\n      new AgGroupComponent5(\n        chartMenuParamsFactory.addEnableParams(`${this.key}.enabled`, {\n          cssIdentifier: \"charts-format-sub-level\",\n          direction: \"vertical\",\n          suppressOpenCloseIcons: true,\n          title: this.chartTranslationService.translate(\"legendEnabled\"),\n          suppressEnabledCheckbox: true,\n          useToggle: true,\n          items: [\n            this.createLabelPanel(chartMenuParamsFactory),\n            positionSelect,\n            ...this.getItems(chartMenuParamsFactory)\n          ]\n        })\n      )\n    );\n    const legendGroupParams = {\n      cssIdentifier: \"charts-format-top-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"legend\"),\n      suppressEnabledCheckbox: true,\n      expanded,\n      items: [enabledGroup]\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"legendGroup\">\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector14],\n      {\n        legendGroup: legendGroupParams\n      }\n    );\n    registerGroupComponent(this.legendGroup);\n  }\n  getItems(chartMenuParamsFactory) {\n    const createSlider = (expression, labelKey, defaultMaxValue) => this.createManagedBean(\n      new AgSlider(\n        chartMenuParamsFactory.getDefaultSliderParams(\n          `${this.key}.${expression}`,\n          labelKey,\n          defaultMaxValue\n        )\n      )\n    );\n    if (this.isGradient) {\n      return [\n        this.createManagedBean(\n          new AgCheckbox3(\n            chartMenuParamsFactory.addValueParams(\"gradientLegend.reverseOrder\", {\n              label: this.chartTranslationService.translate(\"reverseDirection\"),\n              labelWidth: \"flex\"\n            })\n          )\n        ),\n        createSlider(\"gradient.thickness\", \"thickness\", 40),\n        createSlider(\"gradient.preferredLength\", \"preferredLength\", 300),\n        createSlider(\"spacing\", \"spacing\", 200)\n      ];\n    }\n    return [\n      createSlider(\"spacing\", \"spacing\", 200),\n      createSlider(\"item.marker.size\", \"markerSize\", 40),\n      createSlider(\"item.marker.strokeWidth\", \"markerStroke\", 10),\n      createSlider(\"item.marker.padding\", \"itemSpacing\", 20),\n      createSlider(\"item.paddingX\", \"layoutHorizontalSpacing\", 50),\n      createSlider(\"item.paddingY\", \"layoutVerticalSpacing\", 50)\n    ];\n  }\n  createLabelPanel(chartMenuParamsFactory) {\n    const rootKey = this.isGradient ? \"gradientLegend.scale.label\" : \"legend.item.label\";\n    const params = {\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      chartMenuParamsFactory,\n      keyMapper: (key) => `${rootKey}.${key}`,\n      cssIdentifier: \"charts-format-sub-level-no-header\"\n    };\n    return this.createManagedBean(new FontPanel(params));\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/seriesPanel.ts\nimport {\n  AgSelect as AgSelect8,\n  AgToggleButton as AgToggleButton4,\n  Component as Component31,\n  RefPlaceholder as RefPlaceholder16,\n  _errorOnce,\n  _removeFromParent as _removeFromParent6\n} from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector23 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/calloutPanel.ts\nimport { Component as Component23 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector15 } from \"@ag-grid-enterprise/core\";\nvar CalloutPanel = class extends Component23 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const calloutGroupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"callout\"),\n      enabled: true,\n      suppressOpenCloseIcons: true,\n      suppressEnabledCheckbox: true\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"calloutGroup\">\n                <ag-slider data-ref=\"calloutLengthSlider\"></ag-slider>\n                <ag-slider data-ref=\"calloutStrokeWidthSlider\"></ag-slider>\n                <ag-slider data-ref=\"labelOffsetSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector15, AgSliderSelector],\n      {\n        calloutGroup: calloutGroupParams,\n        calloutLengthSlider: this.chartMenuUtils.getDefaultSliderParams(\"calloutLine.length\", \"length\", 40),\n        calloutStrokeWidthSlider: this.chartMenuUtils.getDefaultSliderParams(\n          \"calloutLine.strokeWidth\",\n          \"strokeWidth\",\n          10\n        ),\n        labelOffsetSlider: this.chartMenuUtils.getDefaultSliderParams(\"calloutLabel.offset\", \"offset\", 30)\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/capsPanel.ts\nimport { Component as Component24 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector16 } from \"@ag-grid-enterprise/core\";\nvar CapsPanel = class extends Component24 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const capsGroupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"cap\"),\n      enabled: true,\n      suppressOpenCloseIcons: true,\n      suppressEnabledCheckbox: true\n    };\n    const capLengthRatioSliderParams = this.chartMenuUtils.getDefaultSliderParams(\n      \"cap.lengthRatio\",\n      \"capLengthRatio\",\n      1\n    );\n    capLengthRatioSliderParams.step = 0.05;\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"capsGroup\">\n                <ag-slider data-ref=\"capLengthRatioSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector16, AgSliderSelector],\n      {\n        capsGroup: capsGroupParams,\n        capLengthRatioSlider: capLengthRatioSliderParams\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/connectorLinePanel.ts\nimport { Component as Component25 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector17 } from \"@ag-grid-enterprise/core\";\nvar ConnectorLinePanel = class extends Component25 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const lineGroupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"connectorLine\"),\n      enabled: true,\n      suppressOpenCloseIcons: true,\n      suppressEnabledCheckbox: true\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"lineGroup\">\n                <ag-color-picker data-ref=\"lineColorPicker\"></ag-color-picker>\n                <ag-slider data-ref=\"lineStrokeWidthSlider\"></ag-slider>\n                <ag-slider data-ref=\"lineOpacitySlider\"></ag-slider>\n                <ag-slider data-ref=\"lineDashSlider\"></ag-slider>                \n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector17, AgColorPickerSelector, AgSliderSelector],\n      {\n        lineGroup: lineGroupParams,\n        lineColorPicker: this.chartMenuUtils.getDefaultColorPickerParams(\"line.stroke\"),\n        lineStrokeWidthSlider: this.getSliderParams(\"strokeWidth\", 10, \"line.strokeWidth\"),\n        lineDashSlider: this.getSliderParams(\"lineDash\", 30, \"line.lineDash\", 1, true),\n        lineOpacitySlider: this.getSliderParams(\"strokeOpacity\", 1, \"line.strokeOpacity\", 0.05)\n      }\n    );\n  }\n  getSliderParams(labelKey, maxValue, seriesOptionKey, step = 1, isArray = false) {\n    const params = this.chartMenuUtils.getDefaultSliderParams(seriesOptionKey, labelKey, maxValue, isArray);\n    params.step = step;\n    return params;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/markersPanel.ts\nimport { AgSelectSelector as AgSelectSelector3, Component as Component26 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector18 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/seriesUtils.ts\nfunction getShapeSelectOptions(chartTranslationService) {\n  return [\"square\", \"circle\", \"cross\", \"diamond\", \"plus\", \"triangle\", \"heart\"].map((value) => ({\n    value,\n    text: chartTranslationService.translate(value)\n  }));\n}\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/markersPanel.ts\nvar MarkersPanel = class extends Component26 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const seriesMarkersGroupParams = this.chartMenuUtils.addEnableParams(\"marker.enabled\", {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"markers\"),\n      suppressEnabledCheckbox: true,\n      useToggle: true,\n      suppressOpenCloseIcons: true\n    });\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"seriesMarkersGroup\">\n                <ag-select data-ref=\"seriesMarkerShapeSelect\"></ag-select>\n                <ag-slider data-ref=\"seriesMarkerSizeSlider\"></ag-slider>\n                <ag-slider data-ref=\"seriesMarkerStrokeWidthSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector18, AgSelectSelector3, AgSliderSelector],\n      {\n        seriesMarkersGroup: seriesMarkersGroupParams,\n        seriesMarkerShapeSelect: this.chartMenuUtils.getDefaultSelectParams(\n          \"marker.shape\",\n          \"shape\",\n          getShapeSelectOptions(this.chartTranslationService)\n        ),\n        seriesMarkerSizeSlider: this.chartMenuUtils.getDefaultSliderParams(\"marker.size\", \"size\", 60),\n        seriesMarkerStrokeWidthSlider: this.chartMenuUtils.getDefaultSliderParams(\n          \"marker.strokeWidth\",\n          \"strokeWidth\",\n          10\n        )\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/seriesItemsPanel.ts\nimport { AgSelectSelector as AgSelectSelector4, Component as Component27, RefPlaceholder as RefPlaceholder15, _removeFromParent as _removeFromParent5 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector19 } from \"@ag-grid-enterprise/core\";\nvar SeriesItemsPanel = class extends Component27 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n    this.seriesItemsGroup = RefPlaceholder15;\n    this.activePanels = [];\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const seriesItemsGroupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"seriesItems\"),\n      enabled: true,\n      suppressOpenCloseIcons: true,\n      suppressEnabledCheckbox: true\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"seriesItemsGroup\">\n                <ag-select data-ref=\"seriesItemSelect\"></ag-select>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector19, AgSelectSelector4],\n      {\n        seriesItemsGroup: seriesItemsGroupParams,\n        seriesItemSelect: this.getSeriesItemsParams()\n      }\n    );\n    this.initSeriesControls();\n  }\n  getSeriesItemsParams() {\n    const options = [\n      { value: \"positive\", text: this.chartTranslationService.translate(\"seriesItemPositive\") },\n      { value: \"negative\", text: this.chartTranslationService.translate(\"seriesItemNegative\") }\n    ];\n    const seriesItemChangedCallback = (newValue) => {\n      this.destroyActivePanels();\n      this.initSeriesControls(newValue);\n    };\n    return this.chartMenuUtils.getDefaultSelectParamsWithoutValueParams(\n      \"seriesItemType\",\n      options,\n      \"positive\",\n      seriesItemChangedCallback\n    );\n  }\n  initSeriesControls(itemType = \"positive\") {\n    this.initSlider(\"strokeWidth\", 10, `item.${itemType}.strokeWidth`);\n    this.initSlider(\"lineDash\", 30, `item.${itemType}.lineDash`, 1, true);\n    this.initSlider(\"strokeOpacity\", 1, `item.${itemType}.strokeOpacity`, 0.05, false);\n    this.initSlider(\"fillOpacity\", 1, `item.${itemType}.fillOpacity`, 0.05, false);\n    this.initItemLabels(itemType);\n  }\n  initSlider(labelKey, maxValue, seriesOptionKey, step = 1, isArray = false) {\n    const params = this.chartMenuUtils.getDefaultSliderParams(seriesOptionKey, labelKey, maxValue, isArray);\n    params.step = step;\n    const itemSlider = this.seriesItemsGroup.createManagedBean(new AgSlider(params));\n    this.seriesItemsGroup.addItem(itemSlider);\n    this.activePanels.push(itemSlider);\n  }\n  initItemLabels(itemType) {\n    const sectorParams = this.chartMenuUtils.getDefaultFontPanelParams(\n      `item.${itemType}.label`,\n      \"seriesItemLabels\"\n    );\n    const labelPanelComp = this.createBean(new FontPanel(sectorParams));\n    this.seriesItemsGroup.addItem(labelPanelComp);\n    this.activePanels.push(labelPanelComp);\n  }\n  destroyActivePanels() {\n    this.activePanels.forEach((panel) => {\n      _removeFromParent5(panel.getGui());\n      this.destroyBean(panel);\n    });\n  }\n  destroy() {\n    this.destroyActivePanels();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/shadowPanel.ts\nimport { Component as Component28 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector20 } from \"@ag-grid-enterprise/core\";\nvar ShadowPanel = class extends Component28 {\n  constructor(chartMenuUtils, propertyKey = \"shadow\") {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n    this.propertyKey = propertyKey;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const propertyNamespace = this.propertyKey;\n    const shadowGroupParams = this.chartMenuUtils.addEnableParams(\n      `${propertyNamespace}.enabled`,\n      {\n        cssIdentifier: \"charts-format-sub-level\",\n        direction: \"vertical\",\n        suppressOpenCloseIcons: true,\n        title: this.chartTranslationService.translate(\"shadow\"),\n        suppressEnabledCheckbox: true,\n        useToggle: true\n      }\n    );\n    const shadowColorPickerParams = this.chartMenuUtils.getDefaultColorPickerParams(`${propertyNamespace}.color`);\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"shadowGroup\">\n                <ag-color-picker data-ref=\"shadowColorPicker\"></ag-color-picker>\n                <ag-slider data-ref=\"shadowBlurSlider\"></ag-slider>\n                <ag-slider data-ref=\"shadowXOffsetSlider\"></ag-slider>\n                <ag-slider data-ref=\"shadowYOffsetSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector20, AgColorPickerSelector, AgSliderSelector],\n      {\n        shadowGroup: shadowGroupParams,\n        shadowColorPicker: shadowColorPickerParams,\n        shadowBlurSlider: this.getSliderParams(\"blur\", 0, 20),\n        shadowXOffsetSlider: this.getSliderParams(\"xOffset\", -10, 10),\n        shadowYOffsetSlider: this.getSliderParams(\"yOffset\", -10, 10)\n      }\n    );\n  }\n  getSliderParams(property, minValue, defaultMaxValue) {\n    const expression = `${this.propertyKey}.${property}`;\n    const params = this.chartMenuUtils.getDefaultSliderParams(expression, property, defaultMaxValue);\n    params.minValue = minValue;\n    return params;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/tileSpacingPanel.ts\nimport { Component as Component29 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector21 } from \"@ag-grid-enterprise/core\";\nvar TileSpacingPanel = class extends Component29 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const groupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      enabled: true,\n      suppressOpenCloseIcons: true,\n      suppressEnabledCheckbox: true\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"groupSpacing\">\n                <ag-slider data-ref=\"groupPaddingSlider\"></ag-slider>\n                <ag-slider data-ref=\"groupSpacingSlider\"></ag-slider>\n            </ag-group-component>\n            <ag-group-component data-ref=\"tileSpacing\">\n                <ag-slider data-ref=\"tilePaddingSlider\"></ag-slider>\n                <ag-slider data-ref=\"tileSpacingSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector21, AgSliderSelector],\n      {\n        groupSpacing: { ...groupParams, title: this.chartTranslationService.translate(\"group\") },\n        tileSpacing: { ...groupParams, title: this.chartTranslationService.translate(\"tile\") },\n        groupPaddingSlider: this.getSliderParams(\"padding\", \"group.padding\"),\n        groupSpacingSlider: this.getSliderParams(\"spacing\", \"group.gap\"),\n        tilePaddingSlider: this.getSliderParams(\"padding\", \"tile.padding\"),\n        tileSpacingSlider: this.getSliderParams(\"spacing\", \"tile.gap\")\n      }\n    );\n  }\n  getSliderParams(labelKey, key) {\n    return this.chartMenuUtils.getDefaultSliderParams(key, labelKey, 10);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/whiskersPanel.ts\nimport { Component as Component30 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector22 } from \"@ag-grid-enterprise/core\";\nvar WhiskersPanel = class extends Component30 {\n  constructor(chartMenuUtils) {\n    super();\n    this.chartMenuUtils = chartMenuUtils;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const whiskersGroupParams = {\n      cssIdentifier: \"charts-format-sub-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"whisker\"),\n      enabled: true,\n      suppressOpenCloseIcons: true,\n      suppressEnabledCheckbox: true\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"whiskersGroup\">\n                <ag-color-picker data-ref=\"whiskerColorPicker\"></ag-color-picker>\n                <ag-slider data-ref=\"whiskerThicknessSlider\"></ag-slider>\n                <ag-slider data-ref=\"whiskerOpacitySlider\"></ag-slider>\n                <ag-slider data-ref=\"whiskerLineDashSlider\"></ag-slider>\n                <ag-slider data-ref=\"whiskerLineDashOffsetSlider\"></ag-slider>\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector22, AgColorPickerSelector, AgSliderSelector],\n      {\n        whiskersGroup: whiskersGroupParams,\n        whiskerColorPicker: this.chartMenuUtils.getDefaultColorPickerParams(\"whisker.stroke\"),\n        whiskerThicknessSlider: this.chartMenuUtils.getDefaultSliderParams(\n          \"whisker.strokeWidth\",\n          \"strokeWidth\",\n          10\n        ),\n        whiskerOpacitySlider: this.chartMenuUtils.getDefaultSliderParams(\n          \"whisker.strokeOpacity\",\n          \"strokeOpacity\",\n          1\n        ),\n        whiskerLineDashSlider: this.chartMenuUtils.getDefaultSliderParams(\n          \"whisker.lineDash\",\n          \"lineDash\",\n          30,\n          true\n        ),\n        whiskerLineDashOffsetSlider: this.chartMenuUtils.getDefaultSliderParams(\n          \"whisker.lineDashOffset\",\n          \"lineDashOffset\",\n          30\n        )\n      }\n    );\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/series/seriesPanel.ts\nvar tooltips = \"tooltips\";\nvar strokeWidth = \"strokeWidth\";\nvar lineDash = \"lineDash\";\nvar lineOpacity = \"lineOpacity\";\nvar fillOpacity = \"fillOpacity\";\nvar labels = \"labels\";\nvar shadow = \"shadow\";\nvar SeriesPanel = class extends Component31 {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.seriesGroup = RefPlaceholder16;\n    this.activePanels = [];\n    this.widgetFuncs = {\n      lineWidth: () => this.initStrokeWidth(\"lineWidth\"),\n      [strokeWidth]: () => this.initStrokeWidth(\"strokeWidth\"),\n      lineColor: () => this.initLineColor(),\n      [lineDash]: () => this.initLineDash(),\n      [lineOpacity]: () => this.initOpacity(\"strokeOpacity\"),\n      [fillOpacity]: () => this.initOpacity(\"fillOpacity\"),\n      markers: () => new MarkersPanel(this.chartMenuUtils),\n      [labels]: () => this.initLabels(),\n      sectorLabels: () => this.initSectorLabels(),\n      [shadow]: () => new ShadowPanel(this.chartMenuUtils),\n      [tooltips]: () => this.initTooltips(),\n      bins: () => this.initBins(),\n      whiskers: () => new WhiskersPanel(this.chartMenuUtils),\n      caps: () => new CapsPanel(this.chartMenuUtils),\n      connectorLine: () => new ConnectorLinePanel(this.chartMenuUtils),\n      seriesItems: () => new SeriesItemsPanel(this.chartMenuUtils),\n      tileSpacing: () => new TileSpacingPanel(this.chartMenuUtils),\n      shape: () => this.initShape(),\n      size: () => this.initSize(\"size\", \"size\"),\n      minSize: () => this.initSize(\"size\", \"minSize\"),\n      maxSize: () => this.initSize(\"maxSize\", \"maxSize\")\n    };\n    this.seriesWidgetMappings = {\n      bar: [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, labels, shadow],\n      pie: [tooltips, strokeWidth, lineOpacity, fillOpacity, labels, \"sectorLabels\", shadow],\n      donut: [tooltips, strokeWidth, lineOpacity, fillOpacity, labels, \"sectorLabels\", shadow],\n      line: [tooltips, \"lineWidth\", lineDash, lineOpacity, \"markers\", labels],\n      scatter: [tooltips, \"shape\", \"size\", strokeWidth, labels],\n      bubble: [tooltips, \"shape\", \"minSize\", \"maxSize\", strokeWidth, labels],\n      area: [tooltips, \"lineWidth\", lineDash, lineOpacity, fillOpacity, \"markers\", labels, shadow],\n      histogram: [tooltips, \"bins\", strokeWidth, lineDash, lineOpacity, fillOpacity, labels, shadow],\n      \"radial-column\": [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, labels],\n      \"radial-bar\": [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, labels],\n      \"radar-line\": [tooltips, strokeWidth, lineDash, lineOpacity, \"markers\", labels],\n      \"radar-area\": [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, \"markers\", labels],\n      nightingale: [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, labels],\n      \"box-plot\": [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, \"whiskers\", \"caps\"],\n      \"range-bar\": [tooltips, strokeWidth, lineDash, lineOpacity, fillOpacity, labels],\n      \"range-area\": [tooltips, \"lineWidth\", lineDash, lineOpacity, fillOpacity, \"markers\", labels, shadow],\n      treemap: [tooltips, \"tileSpacing\"],\n      sunburst: [tooltips],\n      heatmap: [tooltips, labels, \"lineColor\", \"lineWidth\", lineOpacity],\n      waterfall: [tooltips, \"connectorLine\", \"seriesItems\"]\n    };\n    this.seriesType = options.seriesType;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const {\n      isExpandedOnInit: expanded,\n      chartOptionsService,\n      chartController,\n      registerGroupComponent\n    } = this.options;\n    const seriesGroupParams = {\n      cssIdentifier: \"charts-format-top-level\",\n      direction: \"vertical\",\n      title: this.translate(\"series\"),\n      expanded,\n      suppressEnabledCheckbox: true\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"seriesGroup\">\n            </ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector23],\n      { seriesGroup: seriesGroupParams }\n    );\n    registerGroupComponent(this.seriesGroup);\n    this.chartMenuUtils = this.createManagedBean(\n      new ChartMenuParamsFactory(chartOptionsService.getSeriesOptionsProxy(() => this.seriesType))\n    );\n    this.addManagedListeners(chartController, { chartSeriesChartTypeChanged: this.refreshWidgets.bind(this) });\n    this.refreshWidgets();\n  }\n  refreshWidgets() {\n    const { chartController } = this.options;\n    this.destroyActivePanels();\n    const chart = chartController.getChartProxy().getChart();\n    chart.waitForUpdate().then(() => {\n      const componentWasRemoved = !this.isAlive();\n      if (componentWasRemoved) {\n        return;\n      }\n      if (chartController.isComboChart()) {\n        this.updateSeriesType();\n        this.initSeriesSelect();\n      }\n      (this.seriesWidgetMappings[this.seriesType] ?? []).forEach((w) => {\n        const widgetFuncResult = this.widgetFuncs[w]();\n        let widget;\n        if (Array.isArray(widgetFuncResult)) {\n          const comp = this.createBean(widgetFuncResult[0]);\n          widget = comp;\n          widgetFuncResult[1](comp);\n        } else {\n          widget = this.createBean(widgetFuncResult);\n        }\n        this.seriesGroup.addItem(widget);\n        this.activePanels.push(widget);\n      });\n    }).catch((e) => _errorOnce(`chart rendering failed`, e));\n  }\n  initSeriesSelect() {\n    const seriesSelect = this.createBean(\n      new AgSelect8(\n        this.chartMenuUtils.getDefaultSelectParamsWithoutValueParams(\n          \"seriesType\",\n          this.getSeriesSelectOptions(),\n          `${this.seriesType}`,\n          (newValue) => {\n            this.seriesType = newValue;\n            this.refreshWidgets();\n          }\n        )\n      )\n    );\n    this.seriesGroup.addItem(seriesSelect);\n    this.activePanels.push(seriesSelect);\n  }\n  initTooltips() {\n    return new AgToggleButton4(\n      this.chartMenuUtils.addValueParams(\"tooltip.enabled\", {\n        label: this.translate(\"tooltips\"),\n        labelAlignment: \"left\",\n        labelWidth: \"flex\",\n        inputWidth: \"flex\"\n      })\n    );\n  }\n  initLineColor() {\n    return new AgColorPicker(this.chartMenuUtils.getDefaultColorPickerParams(\"stroke\", \"strokeColor\"));\n  }\n  initStrokeWidth(labelKey) {\n    return new AgSlider(this.chartMenuUtils.getDefaultSliderParams(\"strokeWidth\", labelKey, 10));\n  }\n  initLineDash() {\n    return new AgSlider(this.chartMenuUtils.getDefaultSliderParams(\"lineDash\", \"lineDash\", 30, true));\n  }\n  initOpacity(type) {\n    const params = this.chartMenuUtils.getDefaultSliderParams(type, type, 1);\n    params.step = 0.05;\n    return new AgSlider(params);\n  }\n  initLabels() {\n    const isPieChart = isPieChartSeries(this.seriesType);\n    const seriesOptionLabelProperty = isPieChart ? \"calloutLabel\" : \"label\";\n    const labelKey = isPieChart ? \"calloutLabels\" : \"labels\";\n    const labelParams = this.chartMenuUtils.getDefaultFontPanelParams(seriesOptionLabelProperty, labelKey);\n    const fontPanel = new FontPanel(labelParams);\n    const addItems = (labelPanelComp) => {\n      if (isPieChart) {\n        const calloutPanelComp = labelPanelComp.createManagedBean(new CalloutPanel(this.chartMenuUtils));\n        labelPanelComp.addItem(calloutPanelComp);\n        this.activePanels.push(calloutPanelComp);\n      }\n      if (this.seriesType === \"range-bar\") {\n        const options = [\n          { value: \"inside\", text: this.translate(\"inside\") },\n          { value: \"outside\", text: this.translate(\"outside\") }\n        ];\n        const placementSelect = labelPanelComp.createManagedBean(\n          new AgSelect8(\n            this.chartMenuUtils.getDefaultSelectParams(\"label.placement\", \"labelPlacement\", options)\n          )\n        );\n        labelPanelComp.addItem(placementSelect);\n        this.activePanels.push(placementSelect);\n        const paddingSlider = labelPanelComp.createManagedBean(\n          new AgSlider(this.chartMenuUtils.getDefaultSliderParams(\"label.padding\", \"padding\", 200))\n        );\n        labelPanelComp.addItem(paddingSlider);\n        this.activePanels.push(paddingSlider);\n      }\n    };\n    return [fontPanel, addItems];\n  }\n  initSectorLabels() {\n    const sectorParams = this.chartMenuUtils.getDefaultFontPanelParams(\"sectorLabel\", \"sectorLabels\");\n    const fontPanel = new FontPanel(sectorParams);\n    const addItems = (sectorPanelComp) => {\n      const positionRatioParams = this.chartMenuUtils.getDefaultSliderParams(\n        \"sectorLabel.positionRatio\",\n        \"positionRatio\",\n        1\n      );\n      positionRatioParams.step = 0.05;\n      const positionRatioComp = sectorPanelComp.createManagedBean(new AgSlider(positionRatioParams));\n      sectorPanelComp.addItem(positionRatioComp);\n    };\n    return [fontPanel, addItems];\n  }\n  initBins() {\n    const params = this.chartMenuUtils.getDefaultSliderParams(\"binCount\", \"histogramBinCount\", 20);\n    const chartOptions = this.chartMenuUtils.getChartOptions();\n    const value = (chartOptions.getValue(\"bins\") ?? chartOptions.getValue(\"calculatedBins\", true)).length;\n    params.value = `${value}`;\n    params.maxValue = Math.max(value, 20);\n    return new AgSlider(params);\n  }\n  initShape() {\n    return new AgSelect8(\n      this.chartMenuUtils.getDefaultSelectParams(\n        \"shape\",\n        \"shape\",\n        getShapeSelectOptions(this.chartTranslationService)\n      )\n    );\n  }\n  initSize(expression, labelKey) {\n    return new AgSlider(this.chartMenuUtils.getDefaultSliderParams(expression, labelKey, 60));\n  }\n  getSeriesSelectOptions() {\n    const activeSeriesTypes = this.getActiveSeriesTypes();\n    return [\"area\", \"bar\", \"line\"].filter((seriesType) => activeSeriesTypes.includes(seriesType)).map((value) => ({ value, text: this.translate(value) }));\n  }\n  updateSeriesType() {\n    const activeSeriesTypes = this.getActiveSeriesTypes();\n    const invalidSeriesType = !activeSeriesTypes.includes(this.seriesType);\n    if (invalidSeriesType && activeSeriesTypes.length > 0) {\n      this.seriesType = activeSeriesTypes[0];\n    }\n  }\n  getActiveSeriesTypes() {\n    return this.options.chartController.getActiveSeriesChartTypes().map((s) => getSeriesType(s.chartType));\n  }\n  translate(key) {\n    return this.chartTranslationService.translate(key);\n  }\n  destroyActivePanels() {\n    this.activePanels.forEach((panel) => {\n      _removeFromParent6(panel.getGui());\n      this.destroyBean(panel);\n    });\n  }\n  destroy() {\n    this.destroyActivePanels();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/titles/titlesPanel.ts\nimport { Component as Component33, RefPlaceholder as RefPlaceholder17 } from \"@ag-grid-community/core\";\nimport { AgGroupComponentSelector as AgGroupComponentSelector24 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/titles/titlePanel.ts\nimport { AgInputTextField as AgInputTextField2, Component as Component32 } from \"@ag-grid-community/core\";\nvar TitlePanel = class extends Component32 {\n  constructor(chartMenuUtils, name, key) {\n    super(\n      /* html */\n      `<div></div>`\n    );\n    this.chartMenuUtils = chartMenuUtils;\n    this.name = name;\n    this.key = key;\n    this.chartOptions = chartMenuUtils.getChartOptions();\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    this.initFontPanel();\n  }\n  hasTitle() {\n    const title = this.chartOptions.getValue(this.key);\n    return title && title.enabled && title.text && title.text.length > 0;\n  }\n  initFontPanel() {\n    const hasTitle = this.hasTitle();\n    const fontPanelParams = {\n      name: this.chartTranslationService.translate(this.name),\n      enabled: hasTitle,\n      suppressEnabledCheckbox: false,\n      chartMenuParamsFactory: this.chartMenuUtils,\n      keyMapper: (key) => `${this.key}.${key}`,\n      onEnableChange: (enabled) => this.onEnableChange(enabled)\n    };\n    this.fontPanel = this.createManagedBean(new FontPanel(fontPanelParams));\n    this.fontPanel.addItem(this.createBean(new AgInputTextField2(this.getTextInputParams())), true);\n    this.fontPanel.addItem(this.createBean(new AgSlider(this.getSpacingSliderParams())));\n    this.getGui().appendChild(this.fontPanel.getGui());\n  }\n  getTextInputParams() {\n    return this.chartMenuUtils.addValueParams(`${this.key}.text`, {\n      label: this.chartTranslationService.translate(\"title\"),\n      labelAlignment: \"top\"\n    });\n  }\n  getSpacingSliderParams() {\n    return this.chartMenuUtils.getDefaultSliderParams(`${this.key}.spacing`, \"spacing\", 100);\n  }\n  onEnableChange(enabled) {\n    this.chartOptions.setValue(`${this.key}.enabled`, enabled);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/titles/chartTitlePanel.ts\nvar ChartTitlePanel = class extends TitlePanel {\n  wireBeans(beans) {\n    super.wireBeans(beans);\n    this.chartMenuService = beans.chartMenuService;\n  }\n  postConstruct() {\n    this.titlePlaceholder = this.chartTranslationService.translate(\"titlePlaceholder\");\n    super.postConstruct();\n    this.addManagedEventListeners({\n      chartTitleEdit: () => {\n        this.fontPanel.setEnabled(this.hasTitle());\n      }\n    });\n  }\n  getTextInputParams() {\n    const params = super.getTextInputParams();\n    if (this.shouldOverrideTextWithPlaceholder(params.value)) {\n      params.value = this.titlePlaceholder;\n    }\n    return params;\n  }\n  getSpacingSliderParams() {\n    const params = super.getSpacingSliderParams();\n    params.value = \"10\";\n    return params;\n  }\n  onEnableChange(enabled) {\n    if (this.chartMenuService.doesChartToolbarExist()) {\n      const topPadding = this.chartOptions.getValue(\"padding.top\");\n      this.chartOptions.setValue(\"padding.top\", enabled ? topPadding - 20 : topPadding + 20);\n    }\n    this.chartOptions.setValue(`${this.key}.enabled`, enabled);\n    const currentTitleText = this.chartOptions.getValue(`${this.key}.text`);\n    if (enabled && this.shouldOverrideTextWithPlaceholder(currentTitleText)) {\n      this.chartOptions.setValue(`${this.key}.text`, this.titlePlaceholder);\n    }\n  }\n  shouldOverrideTextWithPlaceholder(currentTitleText) {\n    return currentTitleText === \"Title\" || currentTitleText?.trim().length === 0;\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/titles/titlesPanel.ts\nvar TitlesPanel = class extends Component33 {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.titleGroup = RefPlaceholder17;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    const {\n      chartMenuParamsFactory,\n      chartAxisMenuParamsFactory,\n      chartOptionsService,\n      seriesType,\n      isExpandedOnInit: expanded = false,\n      registerGroupComponent\n    } = this.options;\n    const axisTitlePanels = [];\n    if (isCartesian(seriesType)) {\n      const createAxisParamsFactory = (axisType) => this.createManagedBean(\n        new ChartMenuParamsFactory(chartOptionsService.getCartesianAxisThemeOverridesProxy(axisType))\n      );\n      axisTitlePanels.push(\n        this.createManagedBean(new TitlePanel(createAxisParamsFactory(\"xAxis\"), \"horizontalAxisTitle\", \"title\"))\n      );\n      axisTitlePanels.push(\n        this.createManagedBean(new TitlePanel(createAxisParamsFactory(\"yAxis\"), \"verticalAxisTitle\", \"title\"))\n      );\n    } else if (isPolar(seriesType)) {\n      axisTitlePanels.push(\n        this.createManagedBean(new TitlePanel(chartAxisMenuParamsFactory, \"polarAxisTitle\", \"title\"))\n      );\n    }\n    const titleGroupParams = {\n      cssIdentifier: \"charts-format-top-level\",\n      direction: \"vertical\",\n      title: this.chartTranslationService.translate(\"chartTitles\"),\n      expanded,\n      suppressEnabledCheckbox: true,\n      items: [\n        this.createManagedBean(new ChartTitlePanel(chartMenuParamsFactory, \"chartTitle\", \"title\")),\n        this.createManagedBean(new TitlePanel(chartMenuParamsFactory, \"chartSubtitle\", \"subtitle\")),\n        ...axisTitlePanels\n      ]\n    };\n    this.setTemplate(\n      /* html */\n      `<div>\n            <ag-group-component data-ref=\"titleGroup\"></ag-group-component>\n        </div>`,\n      [AgGroupComponentSelector24],\n      { titleGroup: titleGroupParams }\n    );\n    registerGroupComponent(this.titleGroup);\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/format/formatPanel.ts\nvar DefaultFormatPanelDef = {\n  groups: [{ type: \"chart\" }, { type: \"titles\" }, { type: \"legend\" }, { type: \"series\" }, { type: \"axis\" }]\n};\nvar FormatPanel = class extends Component34 {\n  constructor(chartMenuContext) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-format-wrapper\"></div>`\n    );\n    this.chartMenuContext = chartMenuContext;\n  }\n  postConstruct() {\n    this.groupExpansionFeature = this.createManagedBean(new GroupExpansionFeature(this.getGui()));\n    this.chartPanelFeature = this.createManagedBean(\n      new ChartPanelFeature(\n        this.chartMenuContext.chartController,\n        this.getGui(),\n        \"ag-chart-format-section\",\n        (_chartType, seriesType) => this.createPanels(seriesType)\n      )\n    );\n    this.chartPanelFeature.refreshPanels();\n  }\n  createPanels(seriesType) {\n    let panelExpandedOnInit = false;\n    this.getFormatPanelDef().groups?.forEach(({ type: group, isOpen: isExpandedOnInit = false }) => {\n      if (!this.isGroupPanelShownInSeries(group, seriesType)) {\n        return;\n      }\n      if (isExpandedOnInit) {\n        if (panelExpandedOnInit) {\n          _warnOnce10(\n            `As of v32, only one charts customize panel group can be expanded at a time. '${group}' will not be expanded.`\n          );\n        }\n        panelExpandedOnInit = true;\n      }\n      const registerGroupComponent = (groupComponent) => this.groupExpansionFeature.addGroupComponent(groupComponent);\n      const opts = {\n        ...this.chartMenuContext,\n        isExpandedOnInit,\n        seriesType,\n        registerGroupComponent\n      };\n      switch (group) {\n        case \"chart\":\n          this.chartPanelFeature.addComponent(new ChartPanel(opts));\n          break;\n        case \"titles\":\n          this.chartPanelFeature.addComponent(new TitlesPanel(opts));\n          break;\n        case \"legend\":\n          this.chartPanelFeature.addComponent(new LegendPanel(opts));\n          break;\n        case \"axis\":\n          if (isPolar(seriesType)) {\n            this.chartPanelFeature.addComponent(new PolarAxisPanel(opts));\n          } else if (isCartesian(seriesType)) {\n            this.chartPanelFeature.addComponent(new CartesianAxisPanel(\"xAxis\", opts));\n            this.chartPanelFeature.addComponent(new CartesianAxisPanel(\"yAxis\", opts));\n          }\n          break;\n        case \"horizontalAxis\":\n          this.chartPanelFeature.addComponent(new CartesianAxisPanel(\"xAxis\", opts));\n          break;\n        case \"verticalAxis\":\n          this.chartPanelFeature.addComponent(new CartesianAxisPanel(\"yAxis\", opts));\n          break;\n        case \"series\":\n          this.chartPanelFeature.addComponent(new SeriesPanel(opts));\n          break;\n        case \"navigator\":\n          _warnOnce10(\n            `'navigator' is now displayed in the charts advanced settings instead of the customize panel, and this setting will be ignored.`\n          );\n          break;\n        default:\n          _warnOnce10(`Invalid charts customize panel group name supplied: '${group}'`);\n      }\n    });\n  }\n  getFormatPanelDef() {\n    const userProvidedFormatPanelDef = this.gos.get(\"chartToolPanelsDef\")?.formatPanel;\n    return userProvidedFormatPanelDef ? userProvidedFormatPanelDef : DefaultFormatPanelDef;\n  }\n  isGroupPanelShownInSeries(group, seriesType) {\n    return [\"chart\", \"titles\", \"legend\", \"series\"].includes(group) || isCartesian(seriesType) && [\"axis\", \"horizontalAxis\", \"verticalAxis\"].includes(group) || isPolar(seriesType) && group === \"axis\";\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/chartSettingsPanel.ts\nimport {\n  Component as Component37,\n  RefPlaceholder as RefPlaceholder18,\n  _clearElement as _clearElement3,\n  _createIconNoSpan as _createIconNoSpan3,\n  _getAbsoluteWidth,\n  _radioCssClass,\n  _setDisplayed as _setDisplayed4,\n  _shallowCompare\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniChartsContainer.ts\nimport { Component as Component36, KeyCode as KeyCode2, _setAriaLabel, _warnOnce as _warnOnce11 } from \"@ag-grid-community/core\";\nimport { AgGroupComponent as AgGroupComponent6 } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/miniChartHelpers.ts\nimport { _Scene } from \"ag-charts-community\";\nfunction createColumnRects(params) {\n  const { stacked, size, padding, xScalePadding, xScaleDomain, yScaleDomain } = params;\n  const xScale = new _Scene.BandScale();\n  xScale.domain = xScaleDomain;\n  xScale.range = [padding, size - padding];\n  xScale.paddingInner = xScalePadding;\n  xScale.paddingOuter = xScalePadding;\n  const yScale = new _Scene.LinearScale();\n  yScale.domain = yScaleDomain;\n  yScale.range = [size - padding, padding];\n  const createBars = (series, xScale2, yScale2) => {\n    return series.map((datum, i) => {\n      const top = yScale2.convert(datum);\n      const rect = new _Scene.Rect();\n      rect.x = xScale2.convert(i);\n      rect.y = top;\n      rect.width = xScale2.bandwidth;\n      rect.height = yScale2.convert(0) - top;\n      rect.strokeWidth = 0;\n      rect.crisp = true;\n      return rect;\n    });\n  };\n  if (stacked) {\n    return params.data.map((d) => createBars(d, xScale, yScale));\n  }\n  return createBars(params.data, xScale, yScale);\n}\nfunction createLinePaths(root, data, size, padding) {\n  const xScale = new _Scene.LinearScale();\n  xScale.domain = [0, 4];\n  xScale.range = [padding, size - padding];\n  const yScale = new _Scene.LinearScale();\n  yScale.domain = [0, 10];\n  yScale.range = [size - padding, padding];\n  const lines = data.map((series) => {\n    const line = new _Scene.Path();\n    line.strokeWidth = 3;\n    line.lineCap = \"round\";\n    line.fill = void 0;\n    series.forEach((datum, i) => {\n      line.path[i > 0 ? \"lineTo\" : \"moveTo\"](xScale.convert(i), yScale.convert(datum));\n    });\n    return line;\n  });\n  const linesGroup = new _Scene.Group();\n  linesGroup.setClipRectInGroupCoordinateSpace(\n    new _Scene.BBox(padding, padding, size - padding * 2, size - padding * 2)\n  );\n  linesGroup.append(lines);\n  root.append(linesGroup);\n  return lines;\n}\nfunction createPolarPaths(root, data, size, radius, innerRadius, markerSize = 0) {\n  const angleScale = new _Scene.LinearScale();\n  angleScale.domain = [0, 7];\n  angleScale.range = [-Math.PI, Math.PI].map((angle) => angle + Math.PI / 2);\n  const radiusScale = new _Scene.LinearScale();\n  radiusScale.domain = [0, 10];\n  radiusScale.range = [radius, innerRadius];\n  const markers = [];\n  const paths = data.map((series) => {\n    const path = new _Scene.Path();\n    path.strokeWidth = 1;\n    path.strokeOpacity = 0.5;\n    path.lineCap = \"round\";\n    path.fill = void 0;\n    path.fillOpacity = 0.8;\n    series.forEach((datum, i) => {\n      const angle = angleScale.convert(i);\n      const r = radius + innerRadius - radiusScale.convert(datum);\n      const x = r * Math.cos(angle);\n      const y = r * Math.sin(angle);\n      path.path[i > 0 ? \"lineTo\" : \"moveTo\"](x, y);\n      if (markerSize > 0) {\n        const marker = new _Scene.Circle();\n        marker.x = x;\n        marker.y = y;\n        marker.size = markerSize;\n        markers.push(marker);\n      }\n    });\n    path.path.closePath();\n    return path;\n  });\n  const group = new _Scene.Group();\n  const center = size / 2;\n  group.translationX = center;\n  group.translationY = center;\n  group.append([...paths, ...markers]);\n  root.append(group);\n  return { paths, markers };\n}\nfunction accumulateData(data) {\n  let [min, max] = [Infinity, -Infinity];\n  const processedData = data.reduce((acc, curr, currIndex) => {\n    const previous = currIndex > 0 ? acc[currIndex - 1] : void 0;\n    acc[currIndex] ?? (acc[currIndex] = []);\n    const current = acc[currIndex];\n    curr.forEach((datum, datumIndex) => {\n      if (previous) {\n        datum += previous[datumIndex];\n      }\n      current[datumIndex] = datum;\n      if (current[datumIndex] < min) {\n        min = current[datumIndex];\n      }\n      if (current[datumIndex] > max) {\n        max = current[datumIndex];\n      }\n    });\n    return acc;\n  }, []);\n  return { processedData, min, max };\n}\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/miniChartWithAxes.ts\nimport { _Scene as _Scene3 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/miniChart.ts\nimport { Component as Component35, _errorOnce as _errorOnce2 } from \"@ag-grid-community/core\";\nimport { _Scene as _Scene2 } from \"ag-charts-community\";\nvar CANVAS_CLASS = \"ag-chart-mini-thumbnail-canvas\";\nvar ERROR_MESSAGE = \"AG Grid - chart update failed\";\nvar MiniChart = class extends Component35 {\n  constructor(container, tooltipName) {\n    super();\n    this.tooltipName = tooltipName;\n    this.size = 58;\n    this.padding = 5;\n    this.root = new _Scene2.Group();\n    const scene = new _Scene2.Scene({\n      width: this.size,\n      height: this.size,\n      domManager: {\n        addChild(type, _, child) {\n          const newEl = child ?? container.ownerDocument.createElement(type);\n          container.appendChild(newEl);\n          return newEl;\n        }\n      }\n    });\n    scene.canvas.element.classList.add(CANVAS_CLASS);\n    scene.setRoot(this.root);\n    this.scene = scene;\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    this.scene.canvas.element.title = this.chartTranslationService.translate(this.tooltipName);\n    this.scene.render().catch((e) => {\n      _errorOnce2(`${ERROR_MESSAGE}`, e);\n    });\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/miniChartWithAxes.ts\nvar MiniChartWithAxes = class extends MiniChart {\n  constructor(container, tooltipName) {\n    super(container, tooltipName);\n    this.stroke = \"gray\";\n    this.axisOvershoot = 3;\n  }\n  postConstruct() {\n    const size = this.size;\n    const padding = this.padding;\n    const leftAxis = new _Scene3.Line();\n    leftAxis.x1 = padding;\n    leftAxis.y1 = padding;\n    leftAxis.x2 = padding;\n    leftAxis.y2 = size - padding + this.axisOvershoot;\n    leftAxis.stroke = this.stroke;\n    const bottomAxis = new _Scene3.Line();\n    bottomAxis.x1 = padding - this.axisOvershoot + 1;\n    bottomAxis.y1 = size - padding;\n    bottomAxis.x2 = size - padding + 1;\n    bottomAxis.y2 = size - padding;\n    bottomAxis.stroke = this.stroke;\n    const root = this.root;\n    root.append(leftAxis);\n    root.append(bottomAxis);\n    super.postConstruct();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/column/miniColumn.ts\nvar MiniColumn = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"groupedColumnTooltip\");\n    this.columnData = [2, 3, 4];\n    const { root, columnData, size, padding } = this;\n    this.columns = createColumnRects({\n      stacked: false,\n      root,\n      data: columnData,\n      size,\n      padding,\n      xScaleDomain: [0, 1, 2],\n      yScaleDomain: [0, 4],\n      xScalePadding: 0.3\n    });\n    root.append(this.columns);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.columns.forEach((column, i) => {\n      column.fill = fills[i];\n      column.stroke = strokes[i];\n    });\n  }\n};\nMiniColumn.chartType = \"groupedColumn\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/column/miniStackedColumn.ts\nvar _MiniStackedColumn = class _MiniStackedColumn extends MiniChartWithAxes {\n  constructor(container, fills, strokes, _themeTemplateParameters, _isCustomTheme, data = _MiniStackedColumn.data, yScaleDomain = [0, 16], tooltipName = \"stackedColumnTooltip\") {\n    super(container, tooltipName);\n    const { root, size, padding } = this;\n    this.stackedColumns = createColumnRects({\n      stacked: true,\n      root,\n      data,\n      size,\n      padding,\n      xScaleDomain: [0, 1, 2],\n      yScaleDomain,\n      xScalePadding: 0.3\n    });\n    root.append([].concat.apply([], this.stackedColumns));\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.stackedColumns.forEach(\n      (series, i) => series.forEach((column) => {\n        column.fill = fills[i];\n        column.stroke = strokes[i];\n      })\n    );\n  }\n};\n_MiniStackedColumn.chartType = \"stackedColumn\";\n_MiniStackedColumn.data = [\n  [8, 12, 16],\n  [6, 9, 12],\n  [2, 3, 4]\n];\nvar MiniStackedColumn = _MiniStackedColumn;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/column/miniNormalizedColumn.ts\nvar _MiniNormalizedColumn = class _MiniNormalizedColumn extends MiniStackedColumn {\n  constructor(container, fills, strokes, themeTemplateParameters, isCustomTheme) {\n    super(\n      container,\n      fills,\n      strokes,\n      themeTemplateParameters,\n      isCustomTheme,\n      _MiniNormalizedColumn.data,\n      [0, 10],\n      \"normalizedColumnTooltip\"\n    );\n  }\n};\n_MiniNormalizedColumn.chartType = \"normalizedColumn\";\n_MiniNormalizedColumn.data = [\n  [10, 10, 10],\n  [6, 7, 8],\n  [2, 4, 6]\n];\nvar MiniNormalizedColumn = _MiniNormalizedColumn;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/bar/miniBar.ts\nimport { _Scene as _Scene4 } from \"ag-charts-community\";\nvar MiniBar = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"groupedBarTooltip\");\n    const padding = this.padding;\n    const size = this.size;\n    const data = [2, 3, 4];\n    const yScale = new _Scene4.BandScale();\n    yScale.domain = [0, 1, 2];\n    yScale.range = [padding, size - padding];\n    yScale.paddingInner = 0.3;\n    yScale.paddingOuter = 0.3;\n    const xScale = new _Scene4.LinearScale();\n    xScale.domain = [0, 4];\n    xScale.range = [size - padding, padding];\n    const bottom = xScale.convert(0);\n    const height = yScale.bandwidth;\n    this.bars = data.map((datum, i) => {\n      const rect = new _Scene4.Rect();\n      rect.x = padding;\n      rect.y = yScale.convert(i);\n      rect.width = bottom - xScale.convert(datum);\n      rect.height = height;\n      rect.strokeWidth = 0;\n      rect.crisp = true;\n      return rect;\n    });\n    this.updateColors(fills, strokes);\n    this.root.append(this.bars);\n  }\n  updateColors(fills, strokes) {\n    this.bars.forEach((bar, i) => {\n      bar.fill = fills[i];\n      bar.stroke = strokes[i];\n    });\n  }\n};\nMiniBar.chartType = \"groupedBar\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/bar/miniStackedBar.ts\nimport { _Scene as _Scene5 } from \"ag-charts-community\";\nvar _MiniStackedBar = class _MiniStackedBar extends MiniChartWithAxes {\n  constructor(container, fills, strokes, _themeTemplateParameters, _isCustomTheme, data = _MiniStackedBar.data, xScaleDomain = [0, 16], tooltipName = \"stackedBarTooltip\") {\n    super(container, tooltipName);\n    const size = this.size;\n    const padding = this.padding;\n    const yScale = new _Scene5.BandScale();\n    yScale.domain = [0, 1, 2];\n    yScale.range = [padding, size - padding];\n    yScale.paddingInner = 0.3;\n    yScale.paddingOuter = 0.3;\n    const xScale = new _Scene5.LinearScale();\n    xScale.domain = xScaleDomain;\n    xScale.range = [size - padding, padding];\n    const bottom = xScale.convert(0);\n    const height = yScale.bandwidth;\n    this.bars = data.map(\n      (series) => series.map((datum, i) => {\n        const rect = new _Scene5.Rect();\n        rect.x = padding;\n        rect.y = yScale.convert(i);\n        rect.width = bottom - xScale.convert(datum);\n        rect.height = height;\n        rect.strokeWidth = 0;\n        rect.crisp = true;\n        return rect;\n      })\n    );\n    this.updateColors(fills, strokes);\n    this.root.append([].concat.apply([], this.bars));\n  }\n  updateColors(fills, strokes) {\n    this.bars.forEach(\n      (series, i) => series.forEach((bar) => {\n        bar.fill = fills[i];\n        bar.stroke = strokes[i];\n      })\n    );\n  }\n};\n_MiniStackedBar.chartType = \"stackedBar\";\n_MiniStackedBar.data = [\n  [8, 12, 16],\n  [6, 9, 12],\n  [2, 3, 4]\n];\nvar MiniStackedBar = _MiniStackedBar;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/bar/miniNormalizedBar.ts\nvar _MiniNormalizedBar = class _MiniNormalizedBar extends MiniStackedBar {\n  constructor(container, fills, strokes, themeTemplateParameters, isCustomTheme) {\n    super(\n      container,\n      fills,\n      strokes,\n      themeTemplateParameters,\n      isCustomTheme,\n      _MiniNormalizedBar.data,\n      [0, 10],\n      \"normalizedBarTooltip\"\n    );\n  }\n};\n_MiniNormalizedBar.chartType = \"normalizedBar\";\n_MiniNormalizedBar.data = [\n  [10, 10, 10],\n  [6, 7, 8],\n  [2, 4, 6]\n];\nvar MiniNormalizedBar = _MiniNormalizedBar;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/pie/miniDonut.ts\nimport { _Scene as _Scene6 } from \"ag-charts-community\";\nvar toRadians = _Scene6.toRadians;\nvar MiniDonut = class extends MiniChart {\n  constructor(container, fills, strokes, _themeTemplateParameters, _isCustomTheme, centerRadiusScaler = 0.6, tooltipName = \"donutTooltip\") {\n    super(container, tooltipName);\n    const radius = (this.size - this.padding * 2) / 2;\n    const center = radius + this.padding;\n    const angles = [\n      [toRadians(-90), toRadians(30)],\n      [toRadians(30), toRadians(120)],\n      [toRadians(120), toRadians(180)],\n      [toRadians(180), toRadians(210)],\n      [toRadians(210), toRadians(240)],\n      [toRadians(240), toRadians(270)]\n    ];\n    this.sectors = angles.map(([startAngle, endAngle]) => {\n      const sector = new _Scene6.Sector();\n      sector.centerX = center;\n      sector.centerY = center;\n      sector.innerRadius = radius * centerRadiusScaler;\n      sector.outerRadius = radius;\n      sector.startAngle = startAngle;\n      sector.endAngle = endAngle;\n      sector.stroke = void 0;\n      sector.strokeWidth = 0;\n      sector.inset = 0.75;\n      return sector;\n    });\n    this.updateColors(fills, strokes);\n    this.root.append(this.sectors);\n  }\n  updateColors(fills, strokes) {\n    this.sectors.forEach((sector, i) => {\n      sector.fill = fills[i % fills.length];\n      sector.stroke = strokes[i % strokes.length];\n    });\n  }\n};\nMiniDonut.chartType = \"donut\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/pie/miniPie.ts\nvar MiniPie = class extends MiniDonut {\n  constructor(container, fills, strokes, themeTemplateParameters, isCustomTheme) {\n    super(container, fills, strokes, themeTemplateParameters, isCustomTheme, 0, \"pieTooltip\");\n  }\n};\nMiniPie.chartType = \"pie\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/line/miniLine.ts\nvar MiniLine = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"lineTooltip\");\n    this.data = [\n      [9, 7, 8, 5, 6],\n      [5, 6, 3, 4, 1],\n      [1, 3, 4, 8, 7]\n    ];\n    this.lines = createLinePaths(this.root, this.data, this.size, this.padding);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.lines.forEach((line, i) => {\n      line.stroke = fills[i];\n    });\n  }\n};\nMiniLine.chartType = \"line\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/scatter/miniScatter.ts\nimport { _Scene as _Scene7 } from \"ag-charts-community\";\nvar MiniScatter = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"scatterTooltip\");\n    const size = this.size;\n    const padding = this.padding;\n    const data = [\n      [\n        [0.3, 3],\n        [1.1, 0.9],\n        [2, 0.4],\n        [3.4, 2.4]\n      ],\n      [\n        [0, 0.3],\n        [1, 2],\n        [2.4, 1.4],\n        [3, 0]\n      ]\n    ];\n    const xScale = new _Scene7.LinearScale();\n    xScale.domain = [-0.5, 4];\n    xScale.range = [padding * 2, size - padding];\n    const yScale = new _Scene7.LinearScale();\n    yScale.domain = [-0.5, 3.5];\n    yScale.range = [size - padding, padding];\n    const points = [];\n    data.forEach((series) => {\n      series.forEach(([x, y]) => {\n        const arc = new _Scene7.Arc();\n        arc.strokeWidth = 0;\n        arc.centerX = xScale.convert(x);\n        arc.centerY = yScale.convert(y);\n        arc.radius = 2.5;\n        points.push(arc);\n      });\n    });\n    this.points = points;\n    this.updateColors(fills, strokes);\n    const pointsGroup = new _Scene7.Group();\n    pointsGroup.setClipRectInGroupCoordinateSpace(\n      new _Scene7.BBox(padding, padding, size - padding * 2, size - padding * 2)\n    );\n    pointsGroup.append(this.points);\n    this.root.append(pointsGroup);\n  }\n  updateColors(fills, strokes) {\n    this.points.forEach((line, i) => {\n      line.stroke = strokes[i % strokes.length];\n      line.fill = fills[i % fills.length];\n    });\n  }\n};\nMiniScatter.chartType = \"scatter\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/scatter/miniBubble.ts\nimport { _Scene as _Scene8 } from \"ag-charts-community\";\nvar MiniBubble = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"bubbleTooltip\");\n    const size = this.size;\n    const padding = this.padding;\n    const data = [\n      [\n        [0.1, 0.3, 5],\n        [0.5, 0.4, 7],\n        [0.2, 0.8, 7]\n      ],\n      [\n        [0.8, 0.7, 5],\n        [0.7, 0.3, 9]\n      ]\n    ];\n    const xScale = new _Scene8.LinearScale();\n    xScale.domain = [0, 1];\n    xScale.range = [padding * 2, size - padding];\n    const yScale = new _Scene8.LinearScale();\n    yScale.domain = [0, 1];\n    yScale.range = [size - padding, padding];\n    const points = [];\n    data.forEach((series) => {\n      series.forEach(([x, y, radius]) => {\n        const arc = new _Scene8.Arc();\n        arc.strokeWidth = 0;\n        arc.centerX = xScale.convert(x);\n        arc.centerY = yScale.convert(y);\n        arc.radius = radius;\n        arc.fillOpacity = 0.7;\n        points.push(arc);\n      });\n    });\n    this.points = points;\n    this.updateColors(fills, strokes);\n    const pointsGroup = new _Scene8.Group();\n    pointsGroup.setClipRectInGroupCoordinateSpace(\n      new _Scene8.BBox(padding, padding, size - padding * 2, size - padding * 2)\n    );\n    pointsGroup.append(this.points);\n    this.root.append(pointsGroup);\n  }\n  updateColors(fills, strokes) {\n    this.points.forEach((line, i) => {\n      line.stroke = strokes[i % strokes.length];\n      line.fill = fills[i % fills.length];\n    });\n  }\n};\nMiniBubble.chartType = \"bubble\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/area/miniArea.ts\nimport { _Scene as _Scene9 } from \"ag-charts-community\";\nvar _MiniArea = class _MiniArea extends MiniChartWithAxes {\n  constructor(container, fills, strokes, _themeTemplateParameters, _isCustomTheme, data = _MiniArea.data) {\n    super(container, \"groupedAreaTooltip\");\n    const size = this.size;\n    const padding = this.padding;\n    const xScale = new _Scene9.BandScale();\n    xScale.domain = [0, 1, 2];\n    xScale.paddingInner = 1;\n    xScale.paddingOuter = 0;\n    xScale.range = [padding + 0.5, size - padding - 0.5];\n    const yScale = new _Scene9.LinearScale();\n    yScale.domain = [0, 6];\n    yScale.range = [size - padding + 0.5, padding];\n    const xCount = data.length;\n    const last = xCount * 2 - 1;\n    const pathData = [];\n    const bottomY = yScale.convert(0);\n    data.forEach((datum, i) => {\n      const x = xScale.convert(i);\n      datum.forEach((yDatum, j) => {\n        const y = yScale.convert(yDatum);\n        const points = pathData[j] || (pathData[j] = []);\n        points[i] = {\n          x,\n          y\n        };\n        points[last - i] = {\n          x,\n          y: bottomY\n        };\n      });\n    });\n    this.areas = pathData.reverse().map((points) => {\n      const area = new _Scene9.Path();\n      area.strokeWidth = 1;\n      area.strokeOpacity = 0.75;\n      area.fillOpacity = 0.7;\n      const path = area.path;\n      path.clear();\n      points.forEach((point, i) => path[i > 0 ? \"lineTo\" : \"moveTo\"](point.x, point.y));\n      path.closePath();\n      return area;\n    });\n    this.updateColors(fills, strokes);\n    this.root.append(this.areas);\n  }\n  updateColors(fills, strokes) {\n    this.areas.forEach((area, i) => {\n      area.fill = fills[i];\n      area.stroke = strokes[i];\n    });\n  }\n};\n_MiniArea.chartType = \"area\";\n_MiniArea.data = [\n  [1, 3, 5],\n  [2, 6, 4],\n  [5, 3, 1]\n];\nvar MiniArea = _MiniArea;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/area/miniStackedArea.ts\nimport { _Scene as _Scene10 } from \"ag-charts-community\";\nvar _MiniStackedArea = class _MiniStackedArea extends MiniChartWithAxes {\n  constructor(container, fills, strokes, _themeTemplateParameters, _isCustomTheme, data = _MiniStackedArea.data, tooltipName = \"stackedAreaTooltip\") {\n    super(container, tooltipName);\n    const size = this.size;\n    const padding = this.padding;\n    const xScale = new _Scene10.BandScale();\n    xScale.domain = [0, 1, 2];\n    xScale.paddingInner = 1;\n    xScale.paddingOuter = 0;\n    xScale.range = [padding + 0.5, size - padding - 0.5];\n    const yScale = new _Scene10.LinearScale();\n    yScale.domain = [0, 16];\n    yScale.range = [size - padding + 0.5, padding + 0.5];\n    const xCount = data.length;\n    const last = xCount * 2 - 1;\n    const pathData = [];\n    data.forEach((datum, i) => {\n      const x = xScale.convert(i);\n      let total = 0;\n      datum.forEach((yDatum, j) => {\n        const y = yScale.convert(total + yDatum);\n        const points = pathData[j] || (pathData[j] = []);\n        points[i] = {\n          x,\n          y\n        };\n        points[last - i] = {\n          x,\n          y: yScale.convert(total)\n          // bottom y\n        };\n        total += yDatum;\n      });\n    });\n    this.areas = pathData.map((points) => {\n      const area = new _Scene10.Path();\n      area.strokeWidth = 0;\n      const path = area.path;\n      path.clear();\n      points.forEach((point, i) => path[i > 0 ? \"lineTo\" : \"moveTo\"](point.x, point.y));\n      path.closePath();\n      return area;\n    });\n    this.updateColors(fills, strokes);\n    this.root.append(this.areas);\n  }\n  updateColors(fills, strokes) {\n    this.areas.forEach((area, i) => {\n      area.fill = fills[i];\n      area.stroke = strokes[i];\n    });\n  }\n};\n_MiniStackedArea.chartType = \"stackedArea\";\n_MiniStackedArea.data = [\n  [2, 3, 2],\n  [3, 6, 5],\n  [6, 2, 2]\n];\nvar MiniStackedArea = _MiniStackedArea;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/area/miniNormalizedArea.ts\nvar _MiniNormalizedArea = class _MiniNormalizedArea extends MiniStackedArea {\n  constructor(container, fills, strokes, themeTemplateParameters, isCustomTheme, data = _MiniNormalizedArea.data) {\n    super(container, fills, strokes, themeTemplateParameters, isCustomTheme, data, \"normalizedAreaTooltip\");\n  }\n};\n_MiniNormalizedArea.chartType = \"normalizedArea\";\n_MiniNormalizedArea.data = MiniStackedArea.data.map((stack) => {\n  const sum = stack.reduce((p, c) => p + c, 0);\n  return stack.map((v) => v / sum * 16);\n});\nvar MiniNormalizedArea = _MiniNormalizedArea;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/histogram/miniHistogram.ts\nimport { _Scene as _Scene11 } from \"ag-charts-community\";\nvar MiniHistogram = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"histogramTooltip\");\n    const padding = this.padding;\n    const size = this.size;\n    const data = [2, 5, 11, 13, 10, 6, 1];\n    const xScale = new _Scene11.LinearScale();\n    xScale.domain = [0, data.length];\n    xScale.range = [padding, size - padding];\n    const yScale = new _Scene11.LinearScale();\n    yScale.domain = [0, data.reduce((a, b) => Math.max(a, b), 0)];\n    yScale.range = [size - padding, padding];\n    const bottom = yScale.convert(0);\n    this.bars = data.map((datum, i) => {\n      const top = yScale.convert(datum);\n      const left = xScale.convert(i);\n      const right = xScale.convert(i + 1);\n      const rect = new _Scene11.Rect();\n      rect.x = left;\n      rect.y = top;\n      rect.width = right - left;\n      rect.height = bottom - top;\n      rect.strokeWidth = 1;\n      rect.strokeOpacity = 0.75;\n      rect.crisp = true;\n      return rect;\n    });\n    this.updateColors(fills, strokes);\n    this.root.append(this.bars);\n  }\n  updateColors([fill], [stroke]) {\n    this.bars.forEach((bar) => {\n      bar.fill = fill;\n      bar.stroke = stroke;\n    });\n  }\n};\nMiniHistogram.chartType = \"histogram\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/polar/miniRadialColumn.ts\nimport { _Scene as _Scene13 } from \"ag-charts-community\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/miniChartWithPolarAxes.ts\nimport { _Scene as _Scene12 } from \"ag-charts-community\";\nvar MiniChartWithPolarAxes = class extends MiniChart {\n  constructor(container, tooltipName) {\n    super(container, tooltipName);\n    this.stroke = \"gray\";\n    this.showRadiusAxisLine = true;\n    this.showAngleAxisLines = true;\n  }\n  postConstruct() {\n    const size = this.size;\n    const padding = this.padding;\n    const combinedPadding = padding * 2;\n    const axisLineRadius = (size - combinedPadding) / 2;\n    const gridRadii = this.showAngleAxisLines ? [axisLineRadius, axisLineRadius * 0.8, axisLineRadius * 0.6, axisLineRadius * 0.4] : [];\n    const radiusAxisLine = new _Scene12.Line();\n    radiusAxisLine.x1 = size / 2;\n    radiusAxisLine.y1 = padding;\n    radiusAxisLine.x2 = size / 2;\n    radiusAxisLine.y2 = size - padding - axisLineRadius - gridRadii[gridRadii.length - 1];\n    radiusAxisLine.stroke = this.stroke;\n    radiusAxisLine.strokeOpacity = 0.5;\n    radiusAxisLine.fill = void 0;\n    radiusAxisLine.visible = this.showRadiusAxisLine;\n    const x = padding + axisLineRadius;\n    this.gridLines = gridRadii.map((radius, index) => {\n      const gridLine = new _Scene12.Path();\n      gridLine.path.arc(x, x, radius, 0, 2 * Math.PI);\n      gridLine.strokeWidth = 1;\n      gridLine.stroke = this.stroke;\n      gridLine.strokeOpacity = index === 0 ? 0.5 : 0.2;\n      gridLine.fill = void 0;\n      return gridLine;\n    });\n    const root = this.root;\n    root.append(radiusAxisLine);\n    if (this.gridLines.length > 0)\n      root.append(this.gridLines);\n    super.postConstruct();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/polar/miniRadialColumn.ts\nvar MiniRadialColumn = class extends MiniChartWithPolarAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"radialColumnTooltip\");\n    this.data = [\n      [6, 8, 10, 2, 6, 5],\n      [4, 4, 3, 6, 4, 4],\n      [5, 4, 2, 9, 8, 9]\n    ];\n    this.showRadiusAxisLine = false;\n    const { padding, size, data } = this;\n    const radius = (size - padding * 2) / 2;\n    const innerRadiusRatio = 0.4;\n    const axisInnerRadius = radius * innerRadiusRatio;\n    const angleScale = new _Scene13.BandScale();\n    angleScale.domain = data[0].map((_, index) => index);\n    angleScale.range = [0, 2 * Math.PI];\n    angleScale.paddingInner = 0;\n    angleScale.paddingOuter = 0;\n    const bandwidth = angleScale.bandwidth * 0.7;\n    const { processedData, max } = accumulateData(data);\n    const radiusScale = new _Scene13.LinearScale();\n    radiusScale.domain = [0, max];\n    radiusScale.range = [axisInnerRadius, radius];\n    const center = this.size / 2;\n    this.series = processedData.map((series, seriesIndex) => {\n      const firstSeries = seriesIndex === 0;\n      const previousSeries = firstSeries ? void 0 : processedData[seriesIndex - 1];\n      const seriesGroup = new _Scene13.Group({ zIndex: 1e6 });\n      const seriesColumns = series.map((datum, i) => {\n        const previousDatum = previousSeries?.[i];\n        const outerRadius = radiusScale.convert(datum);\n        const innerRadius = radiusScale.convert(previousDatum ?? 0);\n        const startAngle = angleScale.convert(i);\n        const endAngle = startAngle + bandwidth;\n        const columnWidth = _Scene13.getRadialColumnWidth(startAngle, endAngle, radius, 0.5, 0.5);\n        const column = new _Scene13.RadialColumnShape();\n        column.scalingCenterX = center;\n        column.scalingCenterY = center;\n        column.columnWidth = columnWidth;\n        column.innerRadius = innerRadius;\n        column.outerRadius = outerRadius;\n        column.startAngle = startAngle;\n        column.endAngle = endAngle;\n        column.isBeveled = true;\n        column.axisInnerRadius = axisInnerRadius;\n        column.axisOuterRadius = radius;\n        column.stroke = void 0;\n        column.strokeWidth = 0;\n        return column;\n      });\n      seriesGroup.append(seriesColumns);\n      seriesGroup.translationX = center;\n      seriesGroup.translationY = center;\n      return seriesGroup;\n    });\n    this.root.append(this.series);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.series.forEach((group, i) => {\n      group.children?.forEach((sector) => {\n        sector.fill = fills[i % fills.length];\n        sector.stroke = strokes[i % strokes.length];\n      });\n    });\n  }\n};\nMiniRadialColumn.chartType = \"radialColumn\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/polar/miniRadialBar.ts\nimport { _Scene as _Scene14 } from \"ag-charts-community\";\nvar MiniRadialBar = class extends MiniChartWithPolarAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"radialBarTooltip\");\n    this.data = [\n      [6, 8, 10],\n      [4, 4, 3],\n      [5, 4, 2]\n    ];\n    this.showRadiusAxisLine = false;\n    const radius = (this.size - this.padding) / 2;\n    const innerRadiusRatio = 0.4;\n    const innerRadius = radius * innerRadiusRatio;\n    const totalRadius = radius + innerRadius;\n    const radiusScale = new _Scene14.BandScale();\n    radiusScale.domain = this.data[0].map((_, index) => index);\n    radiusScale.range = [radius, innerRadius];\n    radiusScale.paddingInner = 0.5;\n    radiusScale.paddingOuter = 0;\n    const bandwidth = radiusScale.bandwidth;\n    const { processedData, max } = accumulateData(this.data);\n    const angleScale = new _Scene14.LinearScale();\n    angleScale.domain = [0, Math.ceil(max * 1.5)];\n    const start = 3 / 2 * Math.PI;\n    const end = start + 2 * Math.PI;\n    angleScale.range = [start, end];\n    const center = this.size / 2;\n    this.series = processedData.map((series, index) => {\n      const previousSeries = index < 0 ? void 0 : processedData[index - 1];\n      const seriesGroup = new _Scene14.Group({ zIndex: 1e6 });\n      const seriesSectors = series.map((datum, i) => {\n        const previousDatum = previousSeries?.[i] ?? 0;\n        const innerRadius2 = totalRadius - radiusScale.convert(i);\n        const outerRadius = innerRadius2 + bandwidth;\n        const startAngle = angleScale.convert(previousDatum);\n        const endAngle = angleScale.convert(datum);\n        const sector = new _Scene14.Sector();\n        sector.centerX = center;\n        sector.centerY = center;\n        sector.innerRadius = innerRadius2;\n        sector.outerRadius = outerRadius;\n        sector.startAngle = startAngle;\n        sector.endAngle = endAngle;\n        sector.stroke = void 0;\n        sector.strokeWidth = 0;\n        return sector;\n      });\n      seriesGroup.append(seriesSectors);\n      return seriesGroup;\n    });\n    this.root.append(this.series);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.series.forEach((group, i) => {\n      group.children?.forEach((sector) => {\n        sector.fill = fills[i % fills.length];\n        sector.stroke = strokes[i % strokes.length];\n      });\n    });\n  }\n};\nMiniRadialBar.chartType = \"radialBar\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/polar/miniRadarLine.ts\nvar MiniRadarLine = class extends MiniChartWithPolarAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"radarLineTooltip\");\n    this.markerSize = 4;\n    this.data = [\n      [8, 7, 8, 7, 8, 8, 7, 8],\n      [6, 8, 5, 10, 6, 7, 4, 6],\n      [0, 3, 3, 5, 4, 4, 2, 0]\n    ];\n    this.showRadiusAxisLine = false;\n    const radius = (this.size - this.padding * 2) / 2;\n    const innerRadius = 0;\n    const { paths, markers } = createPolarPaths(\n      this.root,\n      this.data,\n      this.size,\n      radius,\n      innerRadius,\n      this.markerSize\n    );\n    this.lines = paths;\n    this.markers = markers;\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.lines.forEach((line, i) => {\n      const n = this.data[i].length;\n      line.stroke = fills[i];\n      const startIdx = i * n;\n      const endIdx = startIdx + n;\n      const markers = this.markers.slice(startIdx, endIdx);\n      markers.forEach((marker) => {\n        marker.stroke = strokes[i];\n        marker.fill = fills[i];\n      });\n    });\n  }\n};\nMiniRadarLine.chartType = \"radarLine\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/polar/miniRadarArea.ts\nvar MiniRadarArea = class extends MiniChartWithPolarAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"radarAreaTooltip\");\n    this.data = [\n      [8, 10, 5, 7, 4, 1, 5, 8],\n      [1, 1, 2, 7, 7, 8, 10, 1],\n      [4, 5, 9, 9, 4, 2, 3, 4]\n    ];\n    this.showRadiusAxisLine = false;\n    const radius = (this.size - this.padding * 2) / 2;\n    const innerRadius = radius - this.size * 0.3;\n    this.areas = createPolarPaths(this.root, this.data, this.size, radius, innerRadius).paths;\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.areas.forEach((area, i) => {\n      area.fill = fills[i];\n      area.stroke = strokes[i];\n    });\n  }\n};\nMiniRadarArea.chartType = \"radarArea\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/polar/miniNightingale.ts\nimport { _Scene as _Scene15 } from \"ag-charts-community\";\nvar MiniNightingale = class extends MiniChartWithPolarAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"nightingaleTooltip\");\n    this.data = [\n      [6, 10, 9, 8, 7, 8],\n      [4, 6, 5, 4, 5, 5],\n      [3, 5, 4, 3, 4, 7]\n    ];\n    this.showRadiusAxisLine = false;\n    const radius = (this.size - this.padding * 2) / 2;\n    const angleScale = new _Scene15.BandScale();\n    angleScale.domain = this.data[0].map((_, index) => index);\n    angleScale.range = [-Math.PI, Math.PI];\n    angleScale.paddingInner = 0;\n    angleScale.paddingOuter = 0;\n    const bandwidth = angleScale.bandwidth * 0.7;\n    const { processedData, max } = accumulateData(this.data);\n    const radiusScale = new _Scene15.LinearScale();\n    radiusScale.domain = [0, max];\n    radiusScale.range = [0, radius];\n    const center = this.size / 2;\n    this.series = processedData.map((series, index) => {\n      const previousSeries = index < 0 ? void 0 : processedData[index - 1];\n      const seriesGroup = new _Scene15.Group({ zIndex: 1e6 });\n      const seriesSectors = series.map((datum, i) => {\n        const previousDatum = previousSeries?.[i];\n        const outerRadius = radiusScale.convert(datum);\n        const innerRadius = radiusScale.convert(previousDatum ?? 0);\n        const startAngle = angleScale.convert(i);\n        const endAngle = startAngle + bandwidth;\n        const sector = new _Scene15.Sector();\n        sector.centerX = center;\n        sector.centerY = center;\n        sector.innerRadius = innerRadius;\n        sector.outerRadius = outerRadius;\n        sector.startAngle = startAngle;\n        sector.endAngle = endAngle;\n        sector.stroke = void 0;\n        sector.strokeWidth = 0;\n        return sector;\n      });\n      seriesGroup.append(seriesSectors);\n      return seriesGroup;\n    });\n    this.root.append(this.series);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.series.forEach((group, i) => {\n      group.children?.forEach((sector) => {\n        sector.fill = fills[i % fills.length];\n        sector.stroke = strokes[i % strokes.length];\n      });\n    });\n  }\n};\nMiniNightingale.chartType = \"nightingale\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/statistical/miniRangeBar.ts\nimport { _Scene as _Scene16 } from \"ag-charts-community\";\nvar MiniRangeBar = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"rangeBarTooltip\");\n    const data = [3, 3.5, 3];\n    this.bars = this.createRangeBar(this.root, data, this.size, this.padding, \"vertical\");\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.bars.forEach((bar, i) => {\n      bar.fill = fills[i];\n      bar.stroke = strokes[i];\n    });\n  }\n  createRangeBar(root, data, size, padding, direction) {\n    const barAlongX = direction === \"horizontal\";\n    const scalePadding = 2 * padding;\n    const xScale = new _Scene16.BandScale();\n    xScale.domain = data.map((_, index) => index);\n    xScale.range = [padding, size - padding];\n    xScale.paddingInner = 0.3;\n    xScale.paddingOuter = 0.3;\n    const lowRatio = 0.7;\n    const highRatio = 1.3;\n    const yScale = new _Scene16.LinearScale();\n    yScale.domain = [\n      data.reduce((a, b) => Math.min(a, b), Infinity) * lowRatio,\n      data.reduce((a, b) => Math.max(a, b), 0) * highRatio\n    ];\n    yScale.range = [scalePadding, size - scalePadding];\n    const width = xScale.bandwidth;\n    const bars = data.map((datum, i) => {\n      const [low, high] = [datum * lowRatio, datum * highRatio];\n      const x = xScale.convert(i);\n      const y = yScale.convert(low);\n      const height = yScale.convert(high) - y;\n      const rect = new _Scene16.Rect();\n      rect.x = barAlongX ? y : x;\n      rect.y = barAlongX ? x : y;\n      rect.width = barAlongX ? height : width;\n      rect.height = barAlongX ? width : height;\n      rect.strokeWidth = 0;\n      rect.crisp = true;\n      return rect;\n    });\n    root.append(bars);\n    return bars;\n  }\n};\nMiniRangeBar.chartType = \"rangeBar\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/statistical/miniRangeArea.ts\nimport { _Scene as _Scene17 } from \"ag-charts-community\";\nvar MiniRangeArea = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"rangeAreaTooltip\");\n    const period = 4;\n    const dataSeriesMidpoints = [\n      zigzag({ offset: 0.375 * period, length: period, pattern: { low: 3, high: 5, period } }),\n      zigzag({ offset: 0.375 * period, length: period, pattern: { low: 2.25, high: 4.25, period } }),\n      zigzag({ offset: 0.75 * period, length: period, pattern: { low: 2.5, high: 4.5, period } })\n    ];\n    const dataSeriesWidth = 1.75;\n    const data = dataSeriesMidpoints.map(\n      (series) => series.map(([x, y]) => ({\n        x,\n        low: y - 0.5 * dataSeriesWidth,\n        high: y + 0.5 * dataSeriesWidth\n      }))\n    );\n    const { lines, areas } = this.createRangeArea(this.root, data, this.size, this.padding);\n    this.lines = lines;\n    this.areas = areas;\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    fills = swapArrayItems(fills, 1, 2);\n    strokes = swapArrayItems(strokes, 1, 2);\n    this.lines.forEach(([highLine, lowLine], i) => {\n      highLine.fill = void 0;\n      highLine.stroke = strokes[i];\n      lowLine.fill = void 0;\n      lowLine.stroke = strokes[i];\n    });\n    this.areas.forEach((area, i) => {\n      area.fill = fills[i];\n    });\n  }\n  createRangeArea(root, data, size, padding) {\n    const xMin = data.reduce((acc, series) => series.reduce((acc2, { x }) => Math.min(acc2, x), acc), Infinity);\n    const xMax = data.reduce((acc, series) => series.reduce((acc2, { x }) => Math.max(acc2, x), acc), -Infinity);\n    const yMin = data.reduce((acc, series) => series.reduce((acc2, { low }) => Math.min(acc2, low), acc), Infinity);\n    const yMax = data.reduce(\n      (acc, series) => series.reduce((acc2, { high }) => Math.max(acc2, high), acc),\n      -Infinity\n    );\n    const xScale = new _Scene17.LinearScale();\n    xScale.domain = [xMin, xMax];\n    xScale.range = [padding, size - padding];\n    const scalePadding = 2 * padding;\n    const yScale = new _Scene17.LinearScale();\n    yScale.domain = [yMin, yMax];\n    yScale.range = [size - scalePadding, scalePadding];\n    const lines = [];\n    const areas = [];\n    const lowPoints = data.map((series) => {\n      const highLine = new _Scene17.Path();\n      const lowLine = new _Scene17.Path();\n      const area = new _Scene17.Path();\n      lines.push([highLine, lowLine]);\n      areas.push(area);\n      highLine.strokeWidth = 0;\n      lowLine.strokeWidth = 0;\n      area.strokeWidth = 0;\n      area.fillOpacity = 0.8;\n      highLine.path.clear();\n      lowLine.path.clear();\n      area.path.clear();\n      return series.map((datum, datumIndex) => {\n        const { x, low, high } = datum;\n        const scaledX = xScale.convert(x);\n        const yLow = yScale.convert(low);\n        const yHigh = yScale.convert(high);\n        const command = datumIndex > 0 ? \"lineTo\" : \"moveTo\";\n        highLine.path[command](scaledX, yHigh);\n        lowLine.path[command](scaledX, yLow);\n        area.path[command](scaledX, yHigh);\n        return [scaledX, yLow];\n      });\n    });\n    lowPoints.forEach((seriesLowPoints, seriesIndex) => {\n      const n = seriesLowPoints.length - 1;\n      const area = areas[seriesIndex];\n      for (let datumIndex = n; datumIndex >= 0; datumIndex--) {\n        const [x, y] = seriesLowPoints[datumIndex];\n        area.path[\"lineTo\"](x, y);\n      }\n    });\n    root.append(areas.concat(...lines));\n    return { lines, areas };\n  }\n};\nMiniRangeArea.chartType = \"rangeArea\";\nfunction zigzag(options) {\n  const { offset, length, pattern } = options;\n  const points = getZigzagInflectionPoints(offset, length, pattern);\n  const xMin = 0;\n  const xMax = length;\n  if (points.length === 0 || points[0][0] !== xMin)\n    points.unshift(getZigzagPoint(xMin, offset, pattern));\n  if (points[points.length - 1][0] !== xMax)\n    points.push(getZigzagPoint(xMax, offset, pattern));\n  return points;\n  function getZigzagInflectionPoints(offset2, length2, pattern2) {\n    const { period } = pattern2;\n    const scaledOffset = offset2 / period;\n    const patternInflectionPoints = [0, 0.5];\n    const inflectionPoints = patternInflectionPoints.map((x) => x - scaledOffset).map(getRemainderAbs).sort((a, b) => a - b);\n    const repeatedPoints = Array.from(\n      { length: Math.floor(inflectionPoints.length * (period / length2)) },\n      (_, i) => inflectionPoints[i % inflectionPoints.length] + Math.floor(i / inflectionPoints.length)\n    );\n    return repeatedPoints.map((x) => x * period).map((x) => getZigzagPoint(x, offset2, pattern2));\n  }\n  function getZigzagPoint(x, offset2, pattern2) {\n    return [x, getZigzagValue(offset2 + x, pattern2)];\n  }\n  function getZigzagValue(x, pattern2) {\n    const { low, high, period } = pattern2;\n    const scaledX = getRemainderAbs(x / period);\n    const y = scaledX > 0.5 ? 1 - 2 * (scaledX - 0.5) : 2 * scaledX;\n    return low + (high - low) * y;\n  }\n}\nfunction getRemainderAbs(value) {\n  const remainder = value % 1;\n  return remainder < 0 ? remainder + 1 : remainder;\n}\nfunction swapArrayItems(items, leftIndex, rightIndex) {\n  const results = [...items];\n  const temp = results[leftIndex];\n  results[leftIndex] = results[rightIndex];\n  results[rightIndex] = temp;\n  return results;\n}\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/statistical/miniBoxPlot.ts\nimport { _Scene as _Scene18, _Theme as _Theme4, _Util as _Util5 } from \"ag-charts-community\";\nvar MiniBoxPlot = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes, themeTemplateParameters, isCustomTheme) {\n    super(container, \"boxPlotTooltip\");\n    const padding = this.padding;\n    const size = this.size;\n    const data = [11, 11.5, 10.5];\n    const maxRatio = 1.2;\n    const q3Ratio = 1.1;\n    const q1Ratio = 0.9;\n    const minRatio = 0.8;\n    const yScale = new _Scene18.LinearScale();\n    yScale.domain = [\n      data.reduce((a, b) => Math.min(a, b), Infinity) * minRatio,\n      data.reduce((a, b) => Math.max(a, b), 0) * maxRatio\n    ];\n    yScale.range = [size - 1.5 * padding, padding];\n    const xScale = new _Scene18.BandScale();\n    xScale.domain = data.map((_, index) => index);\n    xScale.range = [padding, size - padding];\n    xScale.paddingInner = 0.4;\n    xScale.paddingOuter = 0.2;\n    const bandwidth = Math.round(xScale.bandwidth);\n    const halfBandWidth = Math.round(xScale.bandwidth / 2);\n    this.boxPlotGroups = data.map((datum, i) => {\n      const [minValue, q1Value, q3Value, maxValue] = [\n        datum * minRatio,\n        datum * q1Ratio,\n        datum * q3Ratio,\n        datum * maxRatio\n      ];\n      const top = Math.round(yScale.convert(q3Value));\n      const left = Math.round(xScale.convert(i));\n      const right = Math.round(left + bandwidth);\n      const bottom = Math.round(yScale.convert(q1Value));\n      const min = Math.round(yScale.convert(minValue));\n      const mid = Math.round(yScale.convert(datum));\n      const max = Math.round(yScale.convert(maxValue));\n      const whiskerX = left + halfBandWidth;\n      const boxPlotGroup = new _Scene18.Group();\n      const box = new _Scene18.Rect();\n      const median = new _Scene18.Line();\n      const topWhisker = new _Scene18.Line();\n      const bottomWhisker = new _Scene18.Line();\n      const topCap = new _Scene18.Line();\n      const bottomCap = new _Scene18.Line();\n      box.x = left;\n      box.y = top;\n      box.width = bandwidth;\n      box.height = bottom - top;\n      box.strokeWidth = 1;\n      box.strokeOpacity = 0.75;\n      box.crisp = true;\n      this.setLineProperties(median, left, right, mid, mid);\n      this.setLineProperties(topWhisker, whiskerX, whiskerX, max, top);\n      this.setLineProperties(bottomWhisker, whiskerX, whiskerX, min, bottom);\n      this.setLineProperties(topCap, left, right, max, max);\n      this.setLineProperties(bottomCap, left, right, min, min);\n      boxPlotGroup.append([box, median, topWhisker, bottomWhisker, topCap, bottomCap]);\n      return boxPlotGroup;\n    });\n    this.updateColors(fills, strokes, themeTemplateParameters, isCustomTheme);\n    this.root.append(this.boxPlotGroups);\n  }\n  updateColors(fills, strokes, themeTemplateParameters, isCustomTheme) {\n    const themeBackgroundColor = themeTemplateParameters?.get(_Theme4.DEFAULT_BACKGROUND_COLOUR);\n    const backgroundFill = (Array.isArray(themeBackgroundColor) ? themeBackgroundColor[0] : themeBackgroundColor) ?? \"white\";\n    this.boxPlotGroups.forEach((group, i) => {\n      group.children?.forEach((node) => {\n        const fill = fills[i % fills.length];\n        node.fill = isCustomTheme ? fill : _Util5.interpolateColor(fill, backgroundFill)(0.7);\n        node.stroke = strokes[i % strokes.length];\n      });\n    });\n  }\n  setLineProperties(line, x1, x2, y1, y2) {\n    line.x1 = x1;\n    line.x2 = x2;\n    line.y1 = y1;\n    line.y2 = y2;\n    line.strokeOpacity = 0.75;\n  }\n};\nMiniBoxPlot.chartType = \"boxPlot\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/hierarchical/miniTreemap.ts\nimport { _Scene as _Scene19, _Theme as _Theme5 } from \"ag-charts-community\";\nvar MiniTreemap = class extends MiniChart {\n  constructor(container, fills, strokes, themeTemplate, isCustomTheme) {\n    super(container, \"treemapTooltip\");\n    const { size, padding } = this;\n    const data = [\n      [1, 1],\n      [3, 2, 1]\n    ];\n    const treeSize = data.length;\n    const treePadding = treeSize % 2 === 0 ? 0.3 : 0.2;\n    const range = [padding, size - padding];\n    const columns = data.length;\n    const columnParts = columns * (columns + 1) / 2;\n    const columnPadding = treePadding / (columns - 1);\n    const availableRange = range[1] - range[0];\n    const availableWidth = availableRange - treePadding;\n    let previousX = range[0];\n    this.rects = data.reduce((rects, d, columnIndex) => {\n      rects ?? (rects = []);\n      const widthRatio = (columns - columnIndex) / columnParts;\n      const width = availableWidth * widthRatio;\n      const rows = d.length;\n      const rowParts = d.reduce((parts, ratio) => parts += ratio, 0);\n      const rowPadding = treePadding / (rows - 1 || 1);\n      const availableHeight = rows > 1 ? availableRange - treePadding : availableRange;\n      let previousY = range[0];\n      const xRects = d.map((ratio) => {\n        const rect = new _Scene19.Rect();\n        const height = availableHeight * ratio / rowParts;\n        rect.x = previousX;\n        rect.y = previousY;\n        rect.width = width;\n        rect.height = height;\n        rect.strokeWidth = 0.75;\n        rect.crisp = true;\n        previousY += height + rowPadding;\n        return rect;\n      });\n      previousX += width + columnPadding;\n      rects.push(...xRects);\n      return rects;\n    }, []);\n    this.updateColors(fills, strokes, themeTemplate, isCustomTheme);\n    const rectGroup = new _Scene19.Group();\n    rectGroup.setClipRectInGroupCoordinateSpace(new _Scene19.BBox(padding, padding, size - padding, size - padding));\n    rectGroup.append(this.rects);\n    this.root.append(rectGroup);\n  }\n  updateColors(fills, strokes, themeTemplate, isCustomTheme) {\n    const defaultBackgroundColor = themeTemplate?.get(_Theme5.DEFAULT_BACKGROUND_COLOUR);\n    const backgroundFill = (Array.isArray(defaultBackgroundColor) ? defaultBackgroundColor[0] : defaultBackgroundColor) ?? \"white\";\n    this.rects.forEach((rect, i) => {\n      rect.fill = fills[i % strokes.length];\n      rect.stroke = isCustomTheme ? strokes[i % strokes.length] : backgroundFill;\n    });\n  }\n};\nMiniTreemap.chartType = \"treemap\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/hierarchical/miniSunburst.ts\nimport { _Scene as _Scene20 } from \"ag-charts-community\";\nvar MiniSunburst = class extends MiniChartWithPolarAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"sunburstTooltip\");\n    // Hierarchical data using multidimensional array\n    this.data = [\n      [[], []],\n      [[], []],\n      [[], []]\n    ];\n    // Rotate the chart by the given angle (-90 degrees)\n    this.angleOffset = -Math.PI / 2;\n    this.innerRadiusRatio = 0;\n    this.showRadiusAxisLine = false;\n    this.showAngleAxisLines = false;\n    const { data, size, padding, angleOffset, innerRadiusRatio } = this;\n    const radius = (size - padding * 2) / 2;\n    const angleRange = [angleOffset + 0, angleOffset + 2 * Math.PI];\n    const angleExtent = Math.abs(angleRange[1] - angleRange[0]);\n    const radiusRange = [radius * innerRadiusRatio, radius];\n    const radiusExtent = Math.abs(radiusRange[1] - radiusRange[0]);\n    let maxDepth = 0;\n    const findMaxDepth = (data2, parentDepth) => {\n      data2.forEach((child) => {\n        const depth = parentDepth + 1;\n        maxDepth = Math.max(maxDepth, depth);\n        findMaxDepth(child, depth);\n      });\n    };\n    findMaxDepth(data, 0);\n    const radiusRatio = radiusExtent / maxDepth;\n    const center = this.size / 2;\n    const startAngle = angleRange[0];\n    this.series = [];\n    const createSectors = (data2, depth, startAngle2, availableAngle, group) => {\n      const isArray = Array.isArray(data2);\n      if (!isArray) {\n        return;\n      }\n      const childDepth = depth + 1;\n      let previousAngle = startAngle2;\n      data2.forEach((child, childIndex, children) => {\n        let childGroup = group;\n        if (!childGroup) {\n          childGroup = new _Scene20.Group();\n          this.series.push(childGroup);\n        }\n        const innerRadius = radiusRange[0] + depth * radiusRatio;\n        const outerRadius = radiusRange[0] + childDepth * radiusRatio;\n        const angleRatio = 1 / children.length;\n        const start = previousAngle;\n        const end = start + availableAngle * angleRatio;\n        const sector = new _Scene20.Sector();\n        sector.centerX = center;\n        sector.centerY = center;\n        sector.innerRadius = innerRadius;\n        sector.outerRadius = outerRadius;\n        sector.startAngle = start;\n        sector.endAngle = end;\n        sector.stroke = void 0;\n        sector.strokeWidth = 0;\n        sector.inset = 0.75;\n        previousAngle = end;\n        childGroup.append(sector);\n        createSectors(child, childDepth, start, Math.abs(end - start), childGroup);\n      });\n    };\n    createSectors(data, 0, startAngle, angleExtent);\n    this.root.append(this.series);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.series.forEach((group, i) => {\n      group.children?.forEach((sector) => {\n        sector.fill = fills[i % fills.length];\n        sector.stroke = strokes[i % strokes.length];\n      });\n    });\n  }\n};\nMiniSunburst.chartType = \"sunburst\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/specialized/miniHeatmap.ts\nimport { _Scene as _Scene21, _Theme as _Theme6, _Util as _Util6 } from \"ag-charts-community\";\nvar MiniHeatmap = class extends MiniChart {\n  constructor(container, fills, strokes, themeTemplate, isCustomTheme) {\n    super(container, \"heatmapTooltip\");\n    const { size, padding } = this;\n    const heatmapSize = 3;\n    const data = Array.from(\n      { length: heatmapSize },\n      (_, __) => Array.from({ length: heatmapSize }, (_2, yIndex) => yIndex)\n    );\n    const domain = data.map((_, index) => index);\n    const xScale = new _Scene21.BandScale();\n    xScale.domain = domain;\n    xScale.range = [padding, size - padding];\n    xScale.paddingInner = 0.01;\n    xScale.paddingOuter = 0.1;\n    const yScale = new _Scene21.BandScale();\n    yScale.domain = domain;\n    yScale.range = [padding, size - padding];\n    yScale.paddingInner = 0.01;\n    yScale.paddingOuter = 0.1;\n    const width = xScale.bandwidth ?? 0;\n    const height = yScale.bandwidth ?? 0;\n    this.rects = data.reduce((rects, d, index) => {\n      rects ?? (rects = []);\n      const xRects = d.map((_, yIndex) => {\n        const rect = new _Scene21.Rect();\n        rect.x = xScale.convert(index);\n        rect.y = yScale.convert(yIndex);\n        rect.width = width;\n        rect.height = height;\n        rect.strokeWidth = 0;\n        rect.crisp = true;\n        return rect;\n      });\n      rects.push(...xRects);\n      return rects;\n    }, []);\n    this.updateColors(fills, strokes, themeTemplate, isCustomTheme);\n    const rectGroup = new _Scene21.Group();\n    rectGroup.setClipRectInGroupCoordinateSpace(new _Scene21.BBox(padding, padding, size - padding, size - padding));\n    rectGroup.append(this.rects);\n    this.root.append(rectGroup);\n  }\n  updateColors(fills, strokes, themeTemplate, isCustomTheme) {\n    const defaultColorRange = themeTemplate?.get(_Theme6.DEFAULT_DIVERGING_SERIES_COLOUR_RANGE);\n    const defaultBackgroundColor = themeTemplate?.get(_Theme6.DEFAULT_BACKGROUND_COLOUR);\n    const backgroundFill = (Array.isArray(defaultBackgroundColor) ? defaultBackgroundColor[0] : defaultBackgroundColor) ?? \"white\";\n    const colorRange = isCustomTheme ? [fills[0], fills[1]] : defaultColorRange;\n    const stroke = isCustomTheme ? strokes[0] : backgroundFill;\n    const fillFn = _Util6.interpolateColor(colorRange[0], colorRange[1]);\n    this.rects.forEach((rect, i) => {\n      rect.fill = fillFn(i * 0.2);\n      rect.stroke = stroke;\n    });\n  }\n};\nMiniHeatmap.chartType = \"heatmap\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/specialized/miniWaterfall.ts\nimport { _Scene as _Scene22, _Theme as _Theme7 } from \"ag-charts-community\";\nvar MiniWaterfall = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes, themeTemplate, isCustomTheme) {\n    super(container, \"waterfallTooltip\");\n    this.data = [4, 3, -3, 6, -3];\n    this.bars = this.createWaterfall(this.root, this.data, this.size, this.padding, \"vertical\").bars;\n    this.updateColors(fills, strokes, themeTemplate, isCustomTheme);\n  }\n  updateColors(fills, strokes, themeTemplate, isCustomTheme) {\n    const { data } = this;\n    const positive = {\n      fill: isCustomTheme ? fills[0] : themeTemplate?.get(_Theme7.PALETTE_UP_FILL),\n      stroke: isCustomTheme ? strokes[0] : themeTemplate?.get(_Theme7.PALETTE_UP_STROKE)\n    };\n    const negative = {\n      fill: isCustomTheme ? fills[1] : themeTemplate?.get(_Theme7.PALETTE_DOWN_FILL),\n      stroke: isCustomTheme ? strokes[1] : themeTemplate?.get(_Theme7.PALETTE_DOWN_STROKE)\n    };\n    this.bars.forEach((bar, i) => {\n      const isPositive = data[i] >= 0;\n      bar.fill = isPositive ? positive.fill : negative.fill;\n      bar.stroke = isPositive ? positive.stroke : negative.stroke;\n    });\n  }\n  createWaterfall(root, data, size, padding, direction) {\n    const scalePadding = 2 * padding;\n    const { processedData, min, max } = accumulateData(data.map((d) => [d]));\n    const flatData = processedData.reduce((flat, d) => flat.concat(d), []);\n    const yScale = new _Scene22.LinearScale();\n    yScale.domain = [Math.min(min, 0), max];\n    yScale.range = [size - scalePadding, scalePadding];\n    const xScale = new _Scene22.BandScale();\n    xScale.domain = data.map((_, index) => index);\n    xScale.range = [padding, size - padding];\n    xScale.paddingInner = 0.2;\n    xScale.paddingOuter = 0.3;\n    const width = xScale.bandwidth;\n    const connectorLine = new _Scene22.Path();\n    connectorLine.stroke = \"#575757\";\n    connectorLine.strokeWidth = 0;\n    const pixelAlignmentOffset = Math.floor(connectorLine.strokeWidth) % 2 / 2;\n    const connectorPath = connectorLine.path;\n    connectorPath.clear();\n    const barAlongX = direction === \"horizontal\";\n    const bars = flatData.map((datum, i) => {\n      const previousDatum = i > 0 ? flatData[i - 1] : 0;\n      const rawValue = data[i];\n      const isPositive = rawValue > 0;\n      const currY = Math.round(yScale.convert(datum));\n      const trailY = Math.round(yScale.convert(previousDatum));\n      const y = (isPositive ? currY : trailY) - pixelAlignmentOffset;\n      const bottomY = (isPositive ? trailY : currY) + pixelAlignmentOffset;\n      const height = Math.abs(bottomY - y);\n      const x = xScale.convert(i);\n      const rect = new _Scene22.Rect();\n      rect.x = barAlongX ? y : x;\n      rect.y = barAlongX ? x : y;\n      rect.width = barAlongX ? height : width;\n      rect.height = barAlongX ? width : height;\n      rect.strokeWidth = 0;\n      rect.crisp = true;\n      const moveTo = currY + pixelAlignmentOffset;\n      const lineTo = trailY + pixelAlignmentOffset;\n      if (i > 0) {\n        const lineToX = barAlongX ? lineTo : rect.x;\n        const lineToY = barAlongX ? rect.y : lineTo;\n        connectorPath.lineTo(lineToX, lineToY);\n      }\n      const moveToX = barAlongX ? moveTo : rect.x;\n      const moveToY = barAlongX ? rect.y : moveTo;\n      connectorPath.moveTo(moveToX, moveToY);\n      return rect;\n    });\n    root.append([connectorLine, ...bars]);\n    return { bars };\n  }\n};\nMiniWaterfall.chartType = \"waterfall\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/combo/miniColumnLineCombo.ts\nvar MiniColumnLineCombo = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"columnLineComboTooltip\");\n    this.columnData = [3, 4];\n    this.lineData = [[5, 4, 6, 5, 4]];\n    const { root, columnData, lineData, size, padding } = this;\n    this.columns = createColumnRects({\n      stacked: false,\n      root,\n      data: columnData,\n      size,\n      padding,\n      xScaleDomain: [0, 1],\n      yScaleDomain: [0, 4],\n      xScalePadding: 0.5\n    });\n    root.append(this.columns);\n    this.lines = createLinePaths(root, lineData, size, padding);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.columns.forEach((bar, i) => {\n      bar.fill = fills[i];\n      bar.stroke = strokes[i];\n    });\n    this.lines.forEach((line, i) => {\n      line.stroke = fills[i + 2];\n    });\n  }\n};\nMiniColumnLineCombo.chartType = \"columnLineCombo\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/combo/miniAreaColumnCombo.ts\nimport { _Scene as _Scene23 } from \"ag-charts-community\";\nvar MiniAreaColumnCombo = class extends MiniChartWithAxes {\n  constructor(container, fills, strokes) {\n    super(container, \"areaColumnComboTooltip\");\n    this.columnData = [3, 4.5];\n    this.areaData = [[5, 4, 6, 5, 4]];\n    const { root, columnData, areaData, size, padding } = this;\n    this.columns = createColumnRects({\n      stacked: false,\n      root,\n      data: columnData,\n      size,\n      padding,\n      xScaleDomain: [0, 1],\n      yScaleDomain: [0, 6],\n      xScalePadding: 0.5\n    });\n    const xScale = new _Scene23.BandScale();\n    xScale.range = [padding, size - padding];\n    xScale.domain = [0, 1, 2, 3, 4];\n    xScale.paddingInner = 1;\n    xScale.paddingOuter = 0;\n    const yScale = new _Scene23.LinearScale();\n    yScale.range = [size - padding, padding];\n    yScale.domain = [0, 6];\n    const pathData = [];\n    const yZero = yScale.convert(0);\n    const firstX = xScale.convert(0);\n    areaData.forEach((series, i) => {\n      const points = pathData[i] || (pathData[i] = []);\n      series.forEach((data, j) => {\n        const yDatum = data;\n        const xDatum = j;\n        const x = xScale.convert(xDatum);\n        const y = yScale.convert(yDatum);\n        points[j] = { x, y };\n      });\n      const lastX = xScale.convert(series.length - 1);\n      pathData[i].push(\n        {\n          x: lastX,\n          y: yZero\n        },\n        {\n          x: firstX,\n          y: yZero\n        }\n      );\n    });\n    this.areas = pathData.map((points) => {\n      const area = new _Scene23.Path();\n      area.strokeWidth = 0;\n      area.fillOpacity = 0.8;\n      const path = area.path;\n      points.forEach((point, i) => path[i > 0 ? \"lineTo\" : \"moveTo\"](point.x, point.y));\n      return area;\n    });\n    root.append(this.areas);\n    root.append([].concat.apply([], this.columns));\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.areas.forEach((area, i) => {\n      area.fill = fills[i];\n      area.stroke = strokes[i];\n    });\n    this.columns.forEach((bar, i) => {\n      bar.fill = fills[i + 1];\n      bar.stroke = strokes[i + 1];\n    });\n  }\n};\nMiniAreaColumnCombo.chartType = \"areaColumnCombo\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniCharts/combo/miniCustomCombo.ts\nimport { _Scene as _Scene24 } from \"ag-charts-community\";\nvar MiniCustomCombo = class extends MiniChart {\n  constructor(container, fills, strokes) {\n    super(container, \"customComboTooltip\");\n    this.columnData = [3, 4];\n    this.lineData = [[5, 4, 6, 5, 4]];\n    const { root, columnData, lineData, size, padding } = this;\n    this.columns = createColumnRects({\n      stacked: false,\n      root,\n      data: columnData,\n      size,\n      padding,\n      xScaleDomain: [0, 1],\n      yScaleDomain: [0, 4],\n      xScalePadding: 0.5\n    });\n    root.append(this.columns);\n    this.lines = createLinePaths(root, lineData, size, padding);\n    const axisStroke = \"grey\";\n    const axisOvershoot = 3;\n    const leftAxis = new _Scene24.Line();\n    leftAxis.x1 = padding;\n    leftAxis.y1 = padding;\n    leftAxis.x2 = padding;\n    leftAxis.y2 = size - padding + axisOvershoot;\n    leftAxis.stroke = axisStroke;\n    const bottomAxis = new _Scene24.Line();\n    bottomAxis.x1 = padding - axisOvershoot + 1;\n    bottomAxis.y1 = size - padding;\n    bottomAxis.x2 = size - padding + 1;\n    bottomAxis.y2 = size - padding;\n    bottomAxis.stroke = axisStroke;\n    const penIcon = new _Scene24.Path();\n    this.buildPenIconPath(penIcon);\n    penIcon.fill = \"whitesmoke\";\n    penIcon.stroke = \"darkslategrey\";\n    penIcon.strokeWidth = 1;\n    root.append([bottomAxis, leftAxis, penIcon]);\n    this.updateColors(fills, strokes);\n  }\n  updateColors(fills, strokes) {\n    this.columns.forEach((bar, i) => {\n      bar.fill = fills[i];\n      bar.stroke = strokes[i];\n    });\n    this.lines.forEach((line, i) => {\n      line.stroke = fills[i + 2];\n    });\n  }\n  buildPenIconPath(penIcon) {\n    const { path } = penIcon;\n    path.moveTo(25.76, 43.46);\n    path.lineTo(31.27, 48.53);\n    path.moveTo(49.86, 22);\n    path.lineTo(49.86, 22);\n    path.cubicCurveTo(49.01994659053345, 21.317514933510974, 47.89593834348529, 21.09645997825817, 46.86, 21.41);\n    path.lineTo(46.86, 21.41);\n    path.cubicCurveTo(45.55460035985361, 21.77260167850787, 44.38777081121966, 22.517979360321792, 43.51, 23.55);\n    path.lineTo(25.51, 43.8);\n    path.lineTo(25.43, 43.89);\n    path.lineTo(23.01, 51.89);\n    path.lineTo(22.83, 52.46);\n    path.lineTo(31.02, 48.86);\n    path.lineTo(49.02, 28.52);\n    path.lineTo(49.02, 28.52);\n    path.cubicCurveTo(49.940716461596224, 27.521914221246085, 50.54302631059587, 26.2720342455763, 50.75, 24.93);\n    path.lineTo(50.75, 24.93);\n    path.cubicCurveTo(50.95363374988308, 23.866379846512814, 50.62080640232334, 22.77066734274871, 49.86, 22);\n    path.closePath();\n    path.moveTo(41.76, 25.5);\n    path.lineTo(47.34, 30.5);\n    path.moveTo(40.74, 26.65);\n    path.lineTo(46.25, 31.71);\n  }\n};\nMiniCustomCombo.chartType = \"customCombo\";\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/miniChartsContainer.ts\nvar miniChartMapping = {\n  columnGroup: {\n    column: { range: true, pivot: true, enterprise: false, icon: MiniColumn },\n    stackedColumn: { range: true, pivot: true, enterprise: false, icon: MiniStackedColumn },\n    normalizedColumn: { range: true, pivot: true, enterprise: false, icon: MiniNormalizedColumn }\n  },\n  barGroup: {\n    bar: { range: true, pivot: true, enterprise: false, icon: MiniBar },\n    stackedBar: { range: true, pivot: true, enterprise: false, icon: MiniStackedBar },\n    normalizedBar: { range: true, pivot: true, enterprise: false, icon: MiniNormalizedBar }\n  },\n  pieGroup: {\n    pie: { range: true, pivot: true, enterprise: false, icon: MiniPie },\n    donut: { range: true, pivot: true, enterprise: false, icon: MiniDonut },\n    doughnut: { range: true, pivot: true, enterprise: false, icon: MiniDonut }\n  },\n  lineGroup: { line: { range: true, pivot: true, enterprise: false, icon: MiniLine } },\n  scatterGroup: {\n    scatter: { range: true, pivot: true, enterprise: false, icon: MiniScatter },\n    bubble: { range: true, pivot: true, enterprise: false, icon: MiniBubble }\n  },\n  areaGroup: {\n    area: { range: true, pivot: true, enterprise: false, icon: MiniArea },\n    stackedArea: { range: true, pivot: true, enterprise: false, icon: MiniStackedArea },\n    normalizedArea: { range: true, pivot: true, enterprise: false, icon: MiniNormalizedArea }\n  },\n  polarGroup: {\n    radarLine: { range: true, pivot: false, enterprise: true, icon: MiniRadarLine },\n    radarArea: { range: true, pivot: false, enterprise: true, icon: MiniRadarArea },\n    nightingale: { range: true, pivot: false, enterprise: true, icon: MiniNightingale },\n    radialColumn: { range: true, pivot: false, enterprise: true, icon: MiniRadialColumn },\n    radialBar: { range: true, pivot: false, enterprise: true, icon: MiniRadialBar }\n  },\n  statisticalGroup: {\n    boxPlot: { range: true, pivot: false, enterprise: true, icon: MiniBoxPlot },\n    histogram: { range: true, pivot: false, enterprise: false, icon: MiniHistogram },\n    rangeBar: { range: true, pivot: false, enterprise: true, icon: MiniRangeBar },\n    rangeArea: { range: true, pivot: false, enterprise: true, icon: MiniRangeArea }\n  },\n  hierarchicalGroup: {\n    treemap: { range: true, pivot: true, enterprise: true, icon: MiniTreemap },\n    sunburst: { range: true, pivot: true, enterprise: true, icon: MiniSunburst }\n  },\n  specializedGroup: {\n    heatmap: { range: true, pivot: false, enterprise: true, icon: MiniHeatmap },\n    waterfall: { range: true, pivot: false, enterprise: true, icon: MiniWaterfall }\n  },\n  combinationGroup: {\n    columnLineCombo: { range: true, pivot: true, enterprise: false, icon: MiniColumnLineCombo },\n    areaColumnCombo: { range: true, pivot: true, enterprise: false, icon: MiniAreaColumnCombo },\n    customCombo: { range: true, pivot: true, enterprise: false, icon: MiniCustomCombo }\n  }\n};\nvar DEFAULT_CHART_GROUPS = {\n  columnGroup: [\"column\", \"stackedColumn\", \"normalizedColumn\"],\n  barGroup: [\"bar\", \"stackedBar\", \"normalizedBar\"],\n  pieGroup: [\"pie\", \"donut\"],\n  lineGroup: [\"line\"],\n  scatterGroup: [\"scatter\", \"bubble\"],\n  areaGroup: [\"area\", \"stackedArea\", \"normalizedArea\"],\n  polarGroup: [\"radarLine\", \"radarArea\", \"nightingale\", \"radialColumn\", \"radialBar\"],\n  statisticalGroup: [\"boxPlot\", \"histogram\", \"rangeBar\", \"rangeArea\"],\n  hierarchicalGroup: [\"treemap\", \"sunburst\"],\n  specializedGroup: [\"heatmap\", \"waterfall\"],\n  combinationGroup: [\"columnLineCombo\", \"areaColumnCombo\", \"customCombo\"]\n};\nvar MiniChartsContainer = class extends Component36 {\n  constructor(chartController, fills, strokes, themeTemplateParameters, isCustomTheme, chartGroups = DEFAULT_CHART_GROUPS) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-settings-mini-wrapper\"></div>`\n    );\n    this.wrappers = /* @__PURE__ */ new Map();\n    this.chartController = chartController;\n    this.fills = fills;\n    this.strokes = strokes;\n    this.themeTemplateParameters = themeTemplateParameters;\n    this.isCustomTheme = isCustomTheme;\n    this.chartGroups = { ...chartGroups };\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    if (!this.chartController.customComboExists() && this.chartGroups.combinationGroup) {\n      this.chartGroups.combinationGroup = this.chartGroups.combinationGroup.filter(\n        (chartType) => chartType !== \"customCombo\"\n      );\n    }\n    const eGui = this.getGui();\n    const isEnterprise = this.chartController.isEnterprise();\n    const isPivotChart = this.chartController.isPivotChart();\n    const isRangeChart = !isPivotChart;\n    const displayedMenuGroups = Object.keys(this.chartGroups).map((group) => {\n      const menuGroup = group in miniChartMapping ? miniChartMapping[group] : void 0;\n      if (!menuGroup) {\n        _warnOnce11(`invalid chartGroupsDef config '${group}'`);\n        return null;\n      }\n      const chartGroupValues = this.chartGroups[group] ?? [];\n      const menuItems = chartGroupValues.map((chartType) => {\n        const menuItem = chartType in menuGroup ? menuGroup[chartType] : void 0;\n        if (!menuItem) {\n          _warnOnce11(`invalid chartGroupsDef config '${group}.${chartType}'`);\n          return null;\n        }\n        if (!isEnterprise && menuItem.enterprise) {\n          return null;\n        }\n        if (isRangeChart && menuItem.range)\n          return menuItem;\n        if (isPivotChart && menuItem.pivot)\n          return menuItem;\n        return null;\n      }).filter((menuItem) => menuItem != null);\n      if (menuItems.length === 0)\n        return null;\n      return {\n        label: this.chartTranslationService.translate(group),\n        items: menuItems\n      };\n    }).filter((menuGroup) => menuGroup != null);\n    for (const { label, items } of displayedMenuGroups) {\n      const groupComponent = this.createBean(\n        new AgGroupComponent6({\n          title: label,\n          suppressEnabledCheckbox: true,\n          enabled: true,\n          suppressOpenCloseIcons: true,\n          cssIdentifier: \"charts-settings\",\n          direction: \"horizontal\",\n          suppressKeyboardNavigation: true\n        })\n      );\n      for (const menuItem of items) {\n        const MiniClass = menuItem.icon;\n        const miniWrapper = document.createElement(\"div\");\n        miniWrapper.classList.add(\"ag-chart-mini-thumbnail\");\n        miniWrapper.setAttribute(\"tabindex\", \"0\");\n        miniWrapper.setAttribute(\"role\", \"button\");\n        const miniClassChartType = MiniClass.chartType;\n        const listener = () => {\n          this.chartController.setChartType(miniClassChartType);\n          this.updateSelectedMiniChart();\n        };\n        this.addManagedListeners(miniWrapper, {\n          click: listener,\n          keydown: (event) => {\n            if (event.key == KeyCode2.ENTER || event.key === KeyCode2.SPACE) {\n              event.preventDefault();\n              listener();\n            }\n          }\n        });\n        this.wrappers.set(miniClassChartType, miniWrapper);\n        this.createBean(\n          new MiniClass(\n            miniWrapper,\n            this.fills,\n            this.strokes,\n            this.themeTemplateParameters,\n            this.isCustomTheme\n          )\n        );\n        groupComponent.addItem(miniWrapper);\n      }\n      eGui.appendChild(groupComponent.getGui());\n    }\n    this.updateSelectedMiniChart();\n  }\n  updateSelectedMiniChart() {\n    const selectedChartType = this.chartController.getChartType();\n    this.wrappers.forEach((miniChart, miniChartType) => {\n      const selected = miniChartType === selectedChartType;\n      miniChart.classList.toggle(\"ag-selected\", selected);\n      const chartName = this.chartTranslationService.translate(getFullChartNameTranslationKey(miniChartType));\n      const ariaLabel = selected ? `${chartName}. ${this.chartTranslationService.translate(\"ariaChartSelected\")}` : chartName;\n      _setAriaLabel(miniChart, ariaLabel);\n    });\n  }\n  destroy() {\n    this.wrappers.clear();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/settings/chartSettingsPanel.ts\nvar ChartSettingsPanel = class extends Component37 {\n  constructor(chartController) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-settings-wrapper\">\n            <div data-ref=\"eMiniChartsContainer\" class=\"ag-chart-settings-mini-charts-container ag-scrollable-container\"></div>\n            <div data-ref=\"eNavBar\" class=\"ag-chart-settings-nav-bar\">\n                <div data-ref=\"ePrevBtn\" class=\"ag-chart-settings-prev\">\n                    <button type=\"button\" class=\"ag-button ag-chart-settings-prev-button\"></button>\n                </div>\n                <div data-ref=\"eCardSelector\" class=\"ag-chart-settings-card-selector\"></div>\n                <div data-ref=\"eNextBtn\" class=\"ag-chart-settings-next\">\n                    <button type=\"button\" class=\"ag-button ag-chart-settings-next-button\"></button>\n                </div>\n            </div>\n        </div>`\n    );\n    this.chartController = chartController;\n    this.eMiniChartsContainer = RefPlaceholder18;\n    this.eNavBar = RefPlaceholder18;\n    this.eCardSelector = RefPlaceholder18;\n    this.ePrevBtn = RefPlaceholder18;\n    this.eNextBtn = RefPlaceholder18;\n    this.miniChartsContainers = [];\n    this.cardItems = [];\n    this.activePaletteIndex = 0;\n    this.palettes = [];\n    this.themes = [];\n  }\n  postConstruct() {\n    this.resetPalettes();\n    this.ePrevBtn.insertAdjacentElement(\"afterbegin\", _createIconNoSpan3(\"previous\", this.gos));\n    this.eNextBtn.insertAdjacentElement(\"afterbegin\", _createIconNoSpan3(\"next\", this.gos));\n    this.addManagedElementListeners(this.ePrevBtn, { click: () => this.setActivePalette(this.getPrev(), \"left\") });\n    this.addManagedElementListeners(this.eNextBtn, { click: () => this.setActivePalette(this.getNext(), \"right\") });\n    const reset = () => this.resetPalettes(true);\n    this.addManagedListeners(this.chartController, {\n      chartTypeChanged: reset,\n      chartApiUpdate: reset\n    });\n    this.scrollSelectedIntoView();\n  }\n  scrollSelectedIntoView() {\n    setTimeout(() => {\n      const isMiniChartsContainerVisible = (miniChartsContainers) => {\n        return !miniChartsContainers.getGui().classList.contains(\"ag-hidden\");\n      };\n      const currentMiniChartContainer = this.miniChartsContainers.find(isMiniChartsContainerVisible);\n      const currentChart = currentMiniChartContainer.getGui().querySelector(\".ag-selected\");\n      if (currentChart) {\n        const parent = currentChart.offsetParent;\n        if (parent) {\n          this.eMiniChartsContainer.scrollTo(0, parent.offsetTop);\n        }\n      }\n    }, 250);\n  }\n  resetPalettes(forceReset) {\n    const palettes = this.chartController.getPalettes();\n    const themeTemplateParameters = this.chartController.getThemeTemplateParameters();\n    const chartGroups = this.gos.get(\"chartToolPanelsDef\")?.settingsPanel?.chartGroupsDef;\n    if (_shallowCompare(palettes, this.palettes) && !forceReset || this.isAnimating) {\n      return;\n    }\n    this.palettes = palettes;\n    this.themes = this.chartController.getThemeNames();\n    this.activePaletteIndex = this.themes.findIndex((name) => name === this.chartController.getChartThemeName());\n    this.cardItems = [];\n    _clearElement3(this.eCardSelector);\n    this.destroyMiniCharts();\n    const { themes } = this;\n    this.palettes.forEach((palette, index) => {\n      const isActivePalette = this.activePaletteIndex === index;\n      const { fills = [], strokes = [] } = palette;\n      const themeName = themes[index];\n      const isCustomTheme = !isStockTheme(themeName);\n      const miniChartsContainer = this.createBean(\n        new MiniChartsContainer(\n          this.chartController,\n          fills,\n          strokes,\n          themeTemplateParameters[index],\n          isCustomTheme,\n          chartGroups\n        )\n      );\n      this.miniChartsContainers.push(miniChartsContainer);\n      this.eMiniChartsContainer.appendChild(miniChartsContainer.getGui());\n      this.addCardLink(index);\n      if (isActivePalette) {\n        miniChartsContainer.updateSelectedMiniChart();\n      } else {\n        miniChartsContainer.setDisplayed(false);\n      }\n    });\n    _setDisplayed4(this.eNavBar, this.palettes.length > 1);\n    _radioCssClass(this.cardItems[this.activePaletteIndex], \"ag-selected\", \"ag-not-selected\");\n  }\n  addCardLink(index) {\n    const link = document.createElement(\"div\");\n    link.classList.add(\"ag-chart-settings-card-item\");\n    this.addManagedElementListeners(link, {\n      click: () => {\n        this.setActivePalette(index, index < this.activePaletteIndex ? \"left\" : \"right\");\n      }\n    });\n    this.eCardSelector.appendChild(link);\n    this.cardItems.push(link);\n  }\n  getPrev() {\n    let prev = this.activePaletteIndex - 1;\n    if (prev < 0) {\n      prev = this.palettes.length - 1;\n    }\n    return prev;\n  }\n  getNext() {\n    let next = this.activePaletteIndex + 1;\n    if (next >= this.palettes.length) {\n      next = 0;\n    }\n    return next;\n  }\n  setActivePalette(index, animationDirection) {\n    if (this.isAnimating || this.activePaletteIndex === index) {\n      return;\n    }\n    _radioCssClass(this.cardItems[index], \"ag-selected\", \"ag-not-selected\");\n    const currentPalette = this.miniChartsContainers[this.activePaletteIndex];\n    const currentGui = currentPalette.getGui();\n    const futurePalette = this.miniChartsContainers[index];\n    const nextGui = futurePalette.getGui();\n    currentPalette.updateSelectedMiniChart();\n    futurePalette.updateSelectedMiniChart();\n    const multiplier = animationDirection === \"left\" ? -1 : 1;\n    const final = nextGui.style.left = `${_getAbsoluteWidth(this.getGui()) * multiplier}px`;\n    this.activePaletteIndex = index;\n    this.isAnimating = true;\n    const animatingClass = \"ag-animating\";\n    futurePalette.setDisplayed(true);\n    currentPalette.addCssClass(animatingClass);\n    futurePalette.addCssClass(animatingClass);\n    this.chartController.setChartThemeName(this.themes[index]);\n    window.setTimeout(() => {\n      currentGui.style.left = `${-parseFloat(final)}px`;\n      nextGui.style.left = \"0px\";\n    }, 0);\n    window.setTimeout(() => {\n      this.isAnimating = false;\n      currentPalette.removeCssClass(animatingClass);\n      futurePalette.removeCssClass(animatingClass);\n      currentPalette.setDisplayed(false);\n    }, 300);\n  }\n  destroyMiniCharts() {\n    _clearElement3(this.eMiniChartsContainer);\n    this.miniChartsContainers = this.destroyBeans(this.miniChartsContainers);\n  }\n  destroy() {\n    this.destroyMiniCharts();\n    super.destroy();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/menu/tabbedChartMenu.ts\nvar _TabbedChartMenu = class _TabbedChartMenu extends Component38 {\n  constructor(panels, chartMenuContext) {\n    super();\n    this.panels = panels;\n    this.chartMenuContext = chartMenuContext;\n    this.tabs = [];\n  }\n  wireBeans(beans) {\n    this.chartTranslationService = beans.chartTranslationService;\n  }\n  postConstruct() {\n    this.panels.forEach((panel) => {\n      const panelType = panel.replace(\"chart\", \"\").toLowerCase();\n      const panelComp = this.createPanel(panelType);\n      const tabItem = this.createTab(panel, panelType, panelComp);\n      this.tabs.push(tabItem);\n      this.addDestroyFunc(() => this.destroyBean(panelComp));\n    });\n    this.tabbedLayout = new TabbedLayout({\n      items: this.tabs,\n      cssClass: \"ag-chart-tabbed-menu\",\n      keepScrollPosition: true,\n      suppressFocusBodyOnOpen: true,\n      suppressTrapFocus: true,\n      enableCloseButton: true,\n      closeButtonAriaLabel: this.chartTranslationService.translate(\"ariaChartMenuClose\"),\n      onCloseClicked: () => {\n        this.eventSource?.focus({ preventScroll: true });\n        this.dispatchLocalEvent({ type: \"closed\" });\n      }\n    });\n    this.createBean(this.tabbedLayout);\n  }\n  createTab(name, title, panelComp) {\n    const eWrapperDiv = document.createElement(\"div\");\n    eWrapperDiv.classList.add(\"ag-chart-tab\", `ag-chart-${title}`);\n    this.createBean(panelComp);\n    eWrapperDiv.appendChild(panelComp.getGui());\n    const titleEl = document.createElement(\"div\");\n    const translatedTitle = this.chartTranslationService.translate(title);\n    titleEl.innerText = translatedTitle;\n    return {\n      title: titleEl,\n      titleLabel: translatedTitle,\n      bodyPromise: AgPromise.resolve(eWrapperDiv),\n      getScrollableContainer: () => {\n        const scrollableContainer = eWrapperDiv.querySelector(\".ag-scrollable-container\");\n        return scrollableContainer || eWrapperDiv;\n      },\n      name\n    };\n  }\n  showTab(tab) {\n    const tabItem = this.tabs[tab];\n    this.tabbedLayout.showItem(tabItem);\n  }\n  getGui() {\n    return this.tabbedLayout && this.tabbedLayout.getGui();\n  }\n  showMenu(eventSource, suppressFocus) {\n    this.eventSource = eventSource;\n    if (!suppressFocus) {\n      this.tabbedLayout?.focusHeader(true);\n    }\n  }\n  destroy() {\n    if (this.parentComponent && this.parentComponent.isAlive()) {\n      this.destroyBean(this.parentComponent);\n    }\n    super.destroy();\n  }\n  createPanel(panelType) {\n    switch (panelType) {\n      case _TabbedChartMenu.TAB_DATA:\n        return new ChartDataPanel(this.chartMenuContext);\n      case _TabbedChartMenu.TAB_FORMAT:\n        return new FormatPanel(this.chartMenuContext);\n      default:\n        return new ChartSettingsPanel(this.chartMenuContext.chartController);\n    }\n  }\n};\n_TabbedChartMenu.TAB_DATA = \"data\";\n_TabbedChartMenu.TAB_FORMAT = \"format\";\nvar TabbedChartMenu = _TabbedChartMenu;\n\n// enterprise-modules/charts/src/charts/chartComp/menu/chartMenu.ts\nvar ChartMenu = class extends Component39 {\n  constructor(eChartContainer, eMenuPanelContainer, chartMenuContext) {\n    super(\n      /* html */\n      `<div class=\"ag-chart-menu-wrapper\"></div>`\n    );\n    this.eChartContainer = eChartContainer;\n    this.eMenuPanelContainer = eMenuPanelContainer;\n    this.chartMenuContext = chartMenuContext;\n    this.buttons = {\n      chartLink: { iconName: \"linked\", callback: () => this.chartMenuService.toggleLinked(this.chartMenuContext) },\n      chartUnlink: {\n        iconName: \"unlinked\",\n        callback: () => this.chartMenuService.toggleLinked(this.chartMenuContext)\n      },\n      chartDownload: { iconName: \"save\", callback: () => this.chartMenuService.downloadChart(this.chartMenuContext) },\n      chartMenu: { iconName: \"menuAlt\", callback: (eventSource) => this.showMenuList(eventSource) }\n    };\n    this.panels = [];\n    this.menuVisible = false;\n    this.chartController = chartMenuContext.chartController;\n  }\n  wireBeans(beans) {\n    this.chartMenuService = beans.chartMenuService;\n    this.chartMenuListFactory = beans.chartMenuListFactory;\n    this.environment = beans.environment;\n  }\n  postConstruct() {\n    this.chartToolbar = this.createManagedBean(new ChartToolbar());\n    this.getGui().appendChild(this.chartToolbar.getGui());\n    this.refreshToolbarAndPanels();\n    this.addManagedEventListeners({\n      chartCreated: (e) => {\n        if (e.chartId === this.chartController.getChartId()) {\n          const showDefaultToolPanel = Boolean(this.gos.get(\"chartToolPanelsDef\")?.defaultToolPanel);\n          if (showDefaultToolPanel) {\n            this.showMenu({ panel: this.defaultPanel, suppressFocus: true });\n          }\n        }\n      }\n    });\n    this.addManagedListeners(this.chartController, {\n      chartLinkedChanged: this.refreshToolbarAndPanels.bind(this)\n    });\n    this.refreshMenuClasses();\n    this.addManagedListeners(this.chartController, { chartApiUpdate: this.refreshToolbarAndPanels.bind(this) });\n  }\n  isVisible() {\n    return this.menuVisible;\n  }\n  getExtraPaddingDirections() {\n    return [\"chartMenu\", \"chartLink\", \"chartUnlink\", \"chartDownload\"].some(\n      (v) => this.chartToolbarOptions.includes(v)\n    ) ? [\"top\"] : [];\n  }\n  refreshToolbarAndPanels() {\n    this.initToolbarOptionsAndPanels();\n    this.updateToolbar();\n  }\n  initToolbarOptionsAndPanels() {\n    const { panels, defaultPanel } = this.chartMenuService.getChartToolPanels(this.chartController);\n    this.panels = panels;\n    this.defaultPanel = defaultPanel;\n    this.chartToolbarOptions = this.chartMenuService.getChartToolbarOptions();\n  }\n  updateToolbar() {\n    const buttons = this.chartToolbarOptions.map((buttonName) => {\n      const { iconName, callback } = this.buttons[buttonName];\n      return {\n        buttonName,\n        iconName,\n        callback\n      };\n    });\n    this.chartToolbar.updateParams({ buttons });\n  }\n  createMenuPanel(defaultTab) {\n    const menuPanel = this.menuPanel = this.createBean(\n      new AgPanel({\n        height: \"100%\",\n        closable: true,\n        hideTitleBar: true,\n        cssIdentifier: \"chart-menu\"\n      })\n    );\n    menuPanel.setParentComponent(this);\n    this.eMenuPanelContainer.appendChild(menuPanel.getGui());\n    this.tabbedMenu = this.createBean(new TabbedChartMenu(this.panels, this.chartMenuContext));\n    this.addManagedListeners(this.tabbedMenu, {\n      closed: () => {\n        this.hideMenu();\n      }\n    });\n    this.addManagedListeners(menuPanel, { destroyed: () => this.destroyBean(this.tabbedMenu) });\n    return new AgPromise2((res) => {\n      window.setTimeout(() => {\n        menuPanel.setBodyComponent(this.tabbedMenu);\n        this.tabbedMenu.showTab(defaultTab);\n        res(menuPanel);\n      }, 100);\n    });\n  }\n  showContainer(eventSource, suppressFocus) {\n    if (!this.menuPanel) {\n      return;\n    }\n    this.menuVisible = true;\n    this.refreshMenuClasses();\n    this.tabbedMenu.showMenu(eventSource, suppressFocus);\n  }\n  showMenu(params) {\n    const { panel, eventSource, suppressFocus } = params ?? {};\n    if (this.menuPanel && !panel) {\n      this.showContainer(eventSource, suppressFocus);\n    } else {\n      const menuPanel = panel || this.defaultPanel;\n      let tab = this.panels.indexOf(menuPanel);\n      if (tab < 0) {\n        _warnOnce12(`'${panel}' is not a valid Chart Tool Panel name`);\n        tab = this.panels.indexOf(this.defaultPanel);\n      }\n      if (this.menuPanel) {\n        this.tabbedMenu.showTab(tab);\n        this.showContainer(eventSource, suppressFocus);\n      } else {\n        this.createMenuPanel(tab).then(() => this.showContainer(eventSource, suppressFocus));\n      }\n    }\n  }\n  hideMenu() {\n    this.menuVisible = false;\n    this.refreshMenuClasses();\n  }\n  refreshMenuClasses() {\n    this.eChartContainer.classList.toggle(\"ag-chart-menu-visible\", this.menuVisible);\n    this.eChartContainer.classList.toggle(\"ag-chart-menu-hidden\", !this.menuVisible);\n  }\n  showMenuList(eventSource) {\n    this.chartMenuListFactory.showMenuList({\n      eventSource,\n      showMenu: () => this.showMenu({ eventSource }),\n      chartMenuContext: this.chartMenuContext\n    });\n  }\n  destroy() {\n    super.destroy();\n    if (this.menuPanel && this.menuPanel.isAlive()) {\n      this.destroyBean(this.menuPanel);\n    }\n    if (this.tabbedMenu && this.tabbedMenu.isAlive()) {\n      this.destroyBean(this.tabbedMenu);\n    }\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartComp/services/chartOptionsService.ts\nimport { BeanStub as BeanStub14, _errorOnce as _errorOnce3 } from \"@ag-grid-community/core\";\nvar CARTESIAN_AXIS_TYPES = [\"number\", \"category\", \"time\", \"grouped-category\"];\nvar POLAR_AXIS_TYPES = [\"angle-category\", \"angle-number\", \"radius-category\", \"radius-number\"];\nvar VALID_AXIS_TYPES = [...CARTESIAN_AXIS_TYPES, ...POLAR_AXIS_TYPES];\nvar ChartOptionsService = class extends BeanStub14 {\n  constructor(chartController) {\n    super();\n    this.chartController = chartController;\n  }\n  getChartThemeOverridesProxy() {\n    return {\n      getValue: (expression) => this.getChartOption(expression),\n      setValue: (expression, value) => this.setChartThemeOverrides([{ expression, value }]),\n      setValues: (properties) => this.setChartThemeOverrides(properties)\n    };\n  }\n  getAxisThemeOverridesProxy() {\n    return {\n      getValue: (expression) => this.getAxisProperty(expression),\n      setValue: (expression, value) => this.setAxisThemeOverrides([{ expression, value }]),\n      setValues: (properties) => this.setAxisThemeOverrides(properties)\n    };\n  }\n  getCartesianAxisOptionsProxy(axisType) {\n    return {\n      getValue: (expression) => this.getCartesianAxisProperty(axisType, expression),\n      setValue: (expression, value) => this.setCartesianAxisOptions(axisType, [{ expression, value }]),\n      setValues: (properties) => this.setCartesianAxisOptions(axisType, properties)\n    };\n  }\n  getCartesianAxisThemeOverridesProxy(axisType) {\n    return {\n      getValue: (expression) => this.getCartesianAxisProperty(axisType, expression),\n      setValue: (expression, value) => this.setCartesianAxisThemeOverrides(axisType, [{ expression, value }]),\n      setValues: (properties) => this.setCartesianAxisThemeOverrides(axisType, properties)\n    };\n  }\n  getCartesianAxisAppliedThemeOverridesProxy(axisType) {\n    return {\n      getValue: (expression) => this.getCartesianAxisThemeOverride(\n        axisType,\n        // Allow the caller to specify a wildcard expression to retrieve the whole set of overrides\n        expression === \"*\" ? null : expression\n      ),\n      setValue: (expression, value) => this.setCartesianAxisThemeOverrides(\n        axisType,\n        // Allow the caller to specify a wildcard expression to set the whole set of overrides\n        [{ expression: expression === \"*\" ? null : expression, value }]\n      ),\n      setValues: (properties) => this.setCartesianAxisThemeOverrides(axisType, properties)\n    };\n  }\n  getSeriesOptionsProxy(getSelectedSeries) {\n    return {\n      getValue: (expression, calculated) => this.getSeriesOption(getSelectedSeries(), expression, calculated),\n      setValue: (expression, value) => this.setSeriesOptions(getSelectedSeries(), [{ expression, value }]),\n      setValues: (properties) => this.setSeriesOptions(getSelectedSeries(), properties)\n    };\n  }\n  /**\n   * Determine the set of theme overrides that should be retained when transitioning from one chart type to another.\n   */\n  getPersistedChartThemeOverrides(existingChartOptions, existingAxes, existingChartType, targetChartType) {\n    const retainedThemeOverrideKeys = this.getRetainedChartThemeOverrideKeys(existingChartType, targetChartType);\n    const retainedChartAxisThemeOverrideKeys = this.getRetainedChartAxisThemeOverrideKeys(\n      null,\n      existingChartType,\n      targetChartType\n    );\n    const targetChartOptions = this.createChartOptions();\n    for (const expression of retainedThemeOverrideKeys) {\n      const value = this.retrieveChartOptionsThemeOverride(existingChartOptions, existingChartType, expression);\n      if (value !== void 0) {\n        this.assignChartOptionsThemeOverride(targetChartOptions, targetChartType, expression, value);\n      }\n    }\n    if (existingAxes) {\n      this.assignPersistedAxisOverrides({\n        existingAxes,\n        retainedChartAxisThemeOverrideKeys,\n        existingChartOptions,\n        targetChartOptions,\n        existingChartType,\n        targetChartType\n      });\n    }\n    return targetChartOptions.theme.overrides;\n  }\n  assignPersistedAxisOverrides(params) {\n    const {\n      existingAxes,\n      retainedChartAxisThemeOverrideKeys,\n      existingChartOptions,\n      targetChartOptions,\n      existingChartType,\n      targetChartType\n    } = params;\n    for (const { expression, targetAxisTypes } of retainedChartAxisThemeOverrideKeys) {\n      for (const existingAxisType of existingAxes.map((axis) => axis.type)) {\n        const value = this.retrieveChartOptionsThemeOverride(\n          existingChartOptions,\n          existingChartType,\n          [\"axes\", existingAxisType, expression].join(\".\")\n        );\n        if (value !== void 0) {\n          for (const targetAxisType of targetAxisTypes) {\n            this.assignChartOptionsThemeOverride(\n              targetChartOptions,\n              targetChartType,\n              [\"axes\", targetAxisType, expression].join(\".\"),\n              value\n            );\n          }\n        }\n      }\n    }\n  }\n  getRetainedChartThemeOverrideKeys(existingChartType, targetChartType) {\n    const UNIVERSAL_PERSISTED_THEME_OVERRIDES = [\"animation\"];\n    const PERSISTED_CARTESIAN_CHART_THEME_OVERRIDES = [\"zoom\", \"navigator\"];\n    const chartSpecificThemeOverrideKeys = ((previousChartType, updatedChartType) => {\n      const expressions = new Array();\n      if (isCartesian(getSeriesType(previousChartType)) && isCartesian(getSeriesType(updatedChartType))) {\n        expressions.push(...PERSISTED_CARTESIAN_CHART_THEME_OVERRIDES);\n      }\n      return expressions;\n    })(existingChartType, targetChartType);\n    return [...UNIVERSAL_PERSISTED_THEME_OVERRIDES, ...chartSpecificThemeOverrideKeys];\n  }\n  getRetainedChartAxisThemeOverrideKeys(axisType, existingChartType, targetChartType) {\n    if (isCartesian(getSeriesType(existingChartType)) && isCartesian(getSeriesType(targetChartType))) {\n      const retainedKeys = this.getRetainedCartesianAxisThemeOverrideKeys(axisType);\n      return retainedKeys.map((expression) => ({ expression, targetAxisTypes: CARTESIAN_AXIS_TYPES }));\n    }\n    return [];\n  }\n  getRetainedCartesianAxisThemeOverrideKeys(axisType) {\n    const axisPositionSuffixes = axisType === \"xAxis\" ? [\"\", \".top\", \".bottom\"] : axisType === \"yAxis\" ? [\"\", \".left\", \".right\"] : [\"\", \".left\", \".right\", \".top\", \".bottom\"];\n    const PERSISTED_CARTESIAN_AXIS_THEME_OVERRIDES = [\"crosshair\"];\n    const expressions = new Array();\n    for (const expression of PERSISTED_CARTESIAN_AXIS_THEME_OVERRIDES) {\n      for (const axisPositionSuffix of axisPositionSuffixes) {\n        expressions.push(`${expression}${axisPositionSuffix}`);\n      }\n    }\n    return expressions;\n  }\n  getChartOption(expression) {\n    return get(this.getChart(), expression, void 0);\n  }\n  setChartThemeOverrides(properties) {\n    const chartType = this.getChartType();\n    const chartOptions = this.createChartOptions();\n    for (const { expression, value } of properties) {\n      this.assignChartOptionsThemeOverride(chartOptions, chartType, expression, value);\n    }\n    this.applyChartOptions(chartOptions);\n  }\n  applyChartOptions(chartOptions, options) {\n    if (Object.keys(chartOptions).length === 0)\n      return;\n    this.updateChart(chartOptions);\n    const shouldRaiseEvent = !options?.silent;\n    if (shouldRaiseEvent)\n      this.raiseChartOptionsChangedEvent();\n  }\n  awaitChartOptionUpdate(func) {\n    const chart = this.chartController.getChartProxy().getChart();\n    chart.waitForUpdate().then(() => func()).catch((e) => _errorOnce3(`chart update failed`, e));\n  }\n  getAxisProperty(expression) {\n    return get(this.getChart().axes?.[0], expression, void 0);\n  }\n  setAxisThemeOverrides(properties) {\n    const chart = this.getChart();\n    const chartType = this.getChartType();\n    const chartOptions = this.createChartOptions();\n    for (const { expression, value } of properties) {\n      const relevantAxes = chart.axes?.filter((axis) => {\n        const parts = expression.split(\".\");\n        let current = axis;\n        for (const part of parts) {\n          if (!(part in current)) {\n            return false;\n          }\n          current = current[part];\n        }\n        return true;\n      });\n      if (!relevantAxes)\n        continue;\n      for (const axis of relevantAxes) {\n        if (!this.isValidAxisType(axis))\n          continue;\n        this.assignChartAxisThemeOverride(chartOptions, chartType, axis.type, null, expression, value);\n      }\n    }\n    this.applyChartOptions(chartOptions);\n  }\n  getCartesianAxisProperty(axisType, expression) {\n    const axes = this.getChartAxes();\n    const axis = this.getCartesianAxis(axes, axisType);\n    return get(axis, expression, void 0);\n  }\n  getCartesianAxisThemeOverride(axisType, expression) {\n    const axes = this.getChartAxes();\n    const chartAxis = this.getCartesianAxis(axes, axisType);\n    if (!chartAxis || !this.isValidAxisType(chartAxis))\n      return void 0;\n    const chartType = this.getChartType();\n    const chartOptions = this.getChart().getOptions();\n    return this.retrieveChartAxisThemeOverride(\n      chartOptions,\n      chartType,\n      chartAxis.type,\n      axisType === \"yAxis\" ? [\"left\", \"right\"] : [\"bottom\", \"top\"],\n      expression\n    );\n  }\n  setCartesianAxisThemeOverrides(axisType, properties) {\n    const axes = this.getChartAxes();\n    const chartAxis = this.getCartesianAxis(axes, axisType);\n    if (!chartAxis || !this.isValidAxisType(chartAxis))\n      return;\n    const chartType = this.getChartType();\n    const chartOptions = this.createChartOptions();\n    for (const { expression, value } of properties) {\n      this.assignChartAxisThemeOverride(\n        chartOptions,\n        chartType,\n        chartAxis.type,\n        axisType === \"yAxis\" ? [\"left\", \"right\"] : [\"bottom\", \"top\"],\n        expression,\n        value\n      );\n    }\n    this.applyChartOptions(chartOptions);\n  }\n  setCartesianAxisOptions(axisType, properties) {\n    this.updateCartesianAxisOptions(axisType, (chartOptions, axes, chartAxis) => {\n      const axisIndex = axes.indexOf(chartAxis);\n      for (const { expression, value } of properties) {\n        this.assignChartOption(chartOptions, `axes.${axisIndex}.${expression}`, value);\n      }\n    });\n  }\n  updateCartesianAxisOptions(axisType, updateFunc) {\n    const existingChartOptions = this.getChart().getOptions();\n    const axisOptions = \"axes\" in existingChartOptions ? existingChartOptions.axes : void 0;\n    if (!existingChartOptions || !axisOptions)\n      return;\n    const axes = this.getChartAxes();\n    const chartAxis = this.getCartesianAxis(axes, axisType);\n    if (!chartAxis)\n      return;\n    const chartOptions = this.createChartOptions();\n    chartOptions.axes = axisOptions;\n    updateFunc(chartOptions, axes, chartAxis, existingChartOptions);\n    this.applyChartOptions(chartOptions);\n  }\n  setCartesianCategoryAxisType(axisType, value) {\n    this.updateCartesianAxisOptions(axisType, (chartOptions, _axes, chartAxis, existingChartOptions) => {\n      const chartType = this.getChartType();\n      this.assignPersistedAxisOverrides({\n        existingAxes: [chartAxis],\n        retainedChartAxisThemeOverrideKeys: this.getRetainedChartAxisThemeOverrideKeys(\n          axisType,\n          chartType,\n          chartType\n        ),\n        existingChartOptions,\n        targetChartOptions: chartOptions,\n        existingChartType: chartType,\n        targetChartType: chartType\n      });\n      this.assignChartOption(chartOptions, `axes.0.type`, value);\n      this.chartController.setCategoryAxisType(value);\n    });\n  }\n  getCartesianAxis(axes, axisType) {\n    if (axes.length < 2) {\n      return void 0;\n    }\n    switch (axisType) {\n      case \"xAxis\":\n        return axes[0].direction === \"x\" ? axes[0] : axes[1];\n      case \"yAxis\":\n        return axes[1].direction === \"y\" ? axes[1] : axes[0];\n    }\n  }\n  getSeriesOption(seriesType, expression, calculated) {\n    const series = this.getChart().series.find((s) => isMatchingSeries(seriesType, s));\n    return get(calculated ? series : series?.properties.toJson(), expression, void 0);\n  }\n  setSeriesOptions(seriesType, properties) {\n    const chartOptions = this.createChartOptions();\n    for (const { expression, value } of properties) {\n      this.assignChartOptionsSeriesThemeOverride(chartOptions, seriesType, `series.${expression}`, value);\n    }\n    this.applyChartOptions(chartOptions);\n  }\n  getPairedMode() {\n    return this.chartController.getChartProxy().isPaired();\n  }\n  setPairedMode(paired) {\n    this.chartController.getChartProxy().setPaired(paired);\n  }\n  getChartAxes() {\n    const chart = this.getChart();\n    return chart.axes ?? [];\n  }\n  retrieveChartAxisThemeOverride(chartOptions, chartType, axisType, axisPositions, expression) {\n    if (axisPositions) {\n      for (const axisPosition of axisPositions) {\n        const value = this.retrieveChartOptionsThemeOverride(\n          chartOptions,\n          chartType,\n          [\"axes\", axisType, axisPosition, ...expression ? [expression] : []].join(\".\")\n        );\n        if (value === void 0)\n          continue;\n        return value;\n      }\n    } else {\n      return this.retrieveChartOptionsThemeOverride(\n        chartOptions,\n        chartType,\n        [\"axes\", axisType, ...expression ? [expression] : []].join(\".\")\n      );\n    }\n  }\n  assignChartAxisThemeOverride(chartOptions, chartType, axisType, axisPositions, expression, value) {\n    if (axisPositions) {\n      for (const axisPosition of axisPositions) {\n        this.assignChartOptionsThemeOverride(\n          chartOptions,\n          chartType,\n          [\"axes\", axisType, axisPosition, ...expression ? [expression] : []].join(\".\"),\n          value\n        );\n      }\n    } else {\n      this.assignChartOptionsThemeOverride(\n        chartOptions,\n        chartType,\n        [\"axes\", axisType, ...expression ? [expression] : []].join(\".\"),\n        value\n      );\n    }\n  }\n  isValidAxisType(chartAxis) {\n    return VALID_AXIS_TYPES.includes(chartAxis.type);\n  }\n  getChartType() {\n    return this.chartController.getChartType();\n  }\n  getChart() {\n    return this.chartController.getChartProxy().getChart();\n  }\n  updateChart(chartOptions) {\n    const chartRef = this.chartController.getChartProxy().getChartRef();\n    chartRef.skipAnimations();\n    chartRef.updateDelta(chartOptions);\n  }\n  createChartOptions() {\n    const chartOptions = {\n      theme: {\n        overrides: {}\n      }\n    };\n    return chartOptions;\n  }\n  retrieveChartOptionsThemeOverride(chartOptions, chartType, expression) {\n    const chartSeriesTypes = this.getChartThemeOverridesSeriesTypeKeys(chartType);\n    for (const seriesType of chartSeriesTypes) {\n      const value = this.retrieveChartOptionsSeriesThemeOverride(chartOptions, seriesType, expression);\n      if (value === void 0)\n        continue;\n      return value;\n    }\n    return void 0;\n  }\n  assignChartOptionsThemeOverride(chartOptions, chartType, expression, value) {\n    const chartSeriesTypes = this.getChartThemeOverridesSeriesTypeKeys(chartType);\n    for (const seriesType of chartSeriesTypes) {\n      this.assignChartOptionsSeriesThemeOverride(chartOptions, seriesType, expression, value);\n    }\n  }\n  retrieveChartOptionsSeriesThemeOverride(chartOptions, seriesType, expression) {\n    return this.retrieveChartOption(\n      chartOptions,\n      [\"theme\", \"overrides\", seriesType, ...expression ? [expression] : []].join(\".\")\n    );\n  }\n  assignChartOptionsSeriesThemeOverride(chartOptions, seriesType, expression, value) {\n    this.assignChartOption(\n      chartOptions,\n      [\"theme\", \"overrides\", seriesType, ...expression ? [expression] : []].join(\".\"),\n      value\n    );\n  }\n  getChartThemeOverridesSeriesTypeKeys(chartType) {\n    const chartSeriesTypes = this.chartController.getChartSeriesTypes(chartType);\n    if (this.chartController.isComboChart()) {\n      chartSeriesTypes.push(\"common\");\n    }\n    return chartSeriesTypes;\n  }\n  retrieveChartOption(chartOptions, expression) {\n    return get(chartOptions, expression, void 0);\n  }\n  assignChartOption(chartOptions, expression, value) {\n    set(chartOptions, expression, value);\n  }\n  raiseChartOptionsChangedEvent() {\n    const chartModel = this.chartController.getChartModel();\n    const event = {\n      type: \"chartOptionsChanged\",\n      chartId: chartModel.chartId,\n      chartType: chartModel.chartType,\n      chartThemeName: this.chartController.getChartThemeName(),\n      chartOptions: chartModel.chartOptions\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  destroy() {\n    super.destroy();\n  }\n};\nfunction isMatchingSeries(seriesType, series) {\n  return isSeriesType(seriesType) && series.type === seriesType;\n}\n\n// enterprise-modules/charts/src/charts/chartComp/gridChartComp.ts\nvar GridChartComp = class _GridChartComp extends Component40 {\n  constructor(params) {\n    super(\n      /* html */\n      `<div class=\"ag-chart\">\n            <div data-ref=\"eChartContainer\" class=\"ag-chart-components-wrapper ag-chart-menu-hidden\">\n                <div data-ref=\"eChart\" class=\"ag-chart-canvas-wrapper\"></div>\n                <div data-ref=\"eEmpty\" class=\"ag-chart-empty-text ag-unselectable\"></div>\n            </div>\n            <div data-ref=\"eMenuContainer\" class=\"ag-chart-docked-container\"></div>\n            </div>`\n    );\n    this.eChart = RefPlaceholder19;\n    this.eChartContainer = RefPlaceholder19;\n    this.eMenuContainer = RefPlaceholder19;\n    this.eEmpty = RefPlaceholder19;\n    this.params = params;\n  }\n  wireBeans(beans) {\n    this.crossFilterService = beans.chartCrossFilterService;\n    this.chartTranslationService = beans.chartTranslationService;\n    this.chartMenuService = beans.chartMenuService;\n    this.focusService = beans.focusService;\n    this.popupService = beans.popupService;\n  }\n  postConstruct() {\n    const modelParams = {\n      ...this.params,\n      chartType: getCanonicalChartType(this.params.chartType),\n      chartThemeName: this.getThemeName()\n    };\n    const isRtl = this.gos.get(\"enableRtl\");\n    this.addCssClass(isRtl ? \"ag-rtl\" : \"ag-ltr\");\n    const model = this.createBean(new ChartDataModel(modelParams));\n    this.chartController = this.createManagedBean(new ChartController(model));\n    this.chartOptionsService = this.createManagedBean(new ChartOptionsService(this.chartController));\n    this.validateCustomThemes();\n    this.createChart();\n    if (this.params.insideDialog) {\n      this.addDialog();\n    }\n    this.addMenu();\n    this.addManagedElementListeners(this.getGui(), { focusin: this.setActiveChartCellRange.bind(this) });\n    this.addManagedListeners(this.chartController, { chartModelUpdate: this.update.bind(this) });\n    this.addManagedPropertyListeners(\n      [\"chartThemeOverrides\", \"chartThemes\"],\n      this.reactivePropertyUpdate.bind(this)\n    );\n    this.update();\n    this.raiseChartCreatedEvent();\n  }\n  createChart() {\n    let chartInstance = void 0;\n    if (this.chartProxy) {\n      chartInstance = this.chartProxy.destroy({ keepChartInstance: true });\n    }\n    const crossFilterCallback = (event, reset) => {\n      const ctx = this.params.crossFilteringContext;\n      ctx.lastSelectedChartId = reset ? \"\" : this.chartController.getChartId();\n      if (reset) {\n        this.params.crossFilteringResetCallback();\n      }\n      this.crossFilterService.filter(event, reset);\n    };\n    const chartType = this.chartController.getChartType();\n    const chartProxyParams = {\n      chartType,\n      chartInstance,\n      getChartThemeName: this.getChartThemeName.bind(this),\n      getChartThemes: this.getChartThemes.bind(this),\n      customChartThemes: this.gos.get(\"customChartThemes\"),\n      getGridOptionsChartThemeOverrides: () => this.getGridOptionsChartThemeOverrides(),\n      getExtraPaddingDirections: () => this.chartMenu?.getExtraPaddingDirections() ?? [],\n      apiChartThemeOverrides: this.params.chartThemeOverrides,\n      crossFiltering: this.params.crossFiltering ?? false,\n      crossFilterCallback,\n      parentElement: this.eChart,\n      grouping: this.chartController.isGrouping(),\n      chartThemeToRestore: this.params.chartThemeName,\n      chartOptionsToRestore: this.params.chartOptionsToRestore,\n      chartPaletteToRestore: this.params.chartPaletteToRestore,\n      seriesChartTypes: this.chartController.getSeriesChartTypes(),\n      translate: (toTranslate) => this.chartTranslationService.translate(toTranslate)\n    };\n    this.params.chartOptionsToRestore = void 0;\n    this.chartType = chartType;\n    this.chartProxy = _GridChartComp.createChartProxy(chartProxyParams);\n    if (!this.chartProxy) {\n      _warnOnce13(\"invalid chart type supplied: \" + chartProxyParams.chartType);\n      return;\n    }\n    this.chartController.setChartProxy(this.chartProxy);\n    this.createMenuContext();\n  }\n  createMenuContext() {\n    if (this.chartMenuContext) {\n      return;\n    }\n    const chartMenuParamsFactory = this.createManagedBean(\n      new ChartMenuParamsFactory(this.chartOptionsService.getChartThemeOverridesProxy())\n    );\n    const chartAxisMenuParamsFactory = this.createManagedBean(\n      new ChartMenuParamsFactory(this.chartOptionsService.getAxisThemeOverridesProxy())\n    );\n    this.chartMenuContext = {\n      chartController: this.chartController,\n      chartOptionsService: this.chartOptionsService,\n      chartMenuParamsFactory,\n      chartAxisMenuParamsFactory\n    };\n  }\n  getChartThemeName() {\n    return this.chartController.getChartThemeName();\n  }\n  getChartThemes() {\n    return this.chartController.getThemeNames();\n  }\n  getGridOptionsChartThemeOverrides() {\n    return this.gos.get(\"chartThemeOverrides\");\n  }\n  static createChartProxy(chartProxyParams) {\n    switch (chartProxyParams.chartType) {\n      case \"column\":\n      case \"bar\":\n      case \"groupedColumn\":\n      case \"stackedColumn\":\n      case \"normalizedColumn\":\n      case \"groupedBar\":\n      case \"stackedBar\":\n      case \"normalizedBar\":\n        return new BarChartProxy(chartProxyParams);\n      case \"pie\":\n      case \"donut\":\n      case \"doughnut\":\n        return new PieChartProxy(chartProxyParams);\n      case \"area\":\n      case \"stackedArea\":\n      case \"normalizedArea\":\n        return new AreaChartProxy(chartProxyParams);\n      case \"line\":\n        return new LineChartProxy(chartProxyParams);\n      case \"scatter\":\n      case \"bubble\":\n        return new ScatterChartProxy(chartProxyParams);\n      case \"histogram\":\n        return new HistogramChartProxy(chartProxyParams);\n      case \"radarLine\":\n      case \"radarArea\":\n      case \"nightingale\":\n      case \"radialColumn\":\n      case \"radialBar\":\n        return new PolarChartProxy(chartProxyParams);\n      case \"rangeBar\":\n      case \"rangeArea\":\n        return new RangeChartProxy(chartProxyParams);\n      case \"boxPlot\":\n        return new BoxPlotChartProxy(chartProxyParams);\n      case \"treemap\":\n      case \"sunburst\":\n        return new HierarchicalChartProxy(chartProxyParams);\n      case \"heatmap\":\n        return new HeatmapChartProxy(chartProxyParams);\n      case \"waterfall\":\n        return new WaterfallChartProxy(chartProxyParams);\n      case \"columnLineCombo\":\n      case \"areaColumnCombo\":\n      case \"customCombo\":\n        return new ComboChartProxy(chartProxyParams);\n      default:\n        throw `AG Grid: Unable to create chart as an invalid chartType = '${chartProxyParams.chartType}' was supplied.`;\n    }\n  }\n  addDialog() {\n    const title = this.chartTranslationService.translate(\n      this.params.pivotChart ? \"pivotChartTitle\" : \"rangeChartTitle\"\n    );\n    const { width, height } = this.getBestDialogSize();\n    const afterGuiAttached = this.params.focusDialogOnOpen ? () => setTimeout(() => this.focusService.focusInto(this.getGui())) : void 0;\n    this.chartDialog = new AgDialog3({\n      resizable: true,\n      movable: true,\n      maximizable: true,\n      title,\n      width,\n      height,\n      component: this,\n      centered: true,\n      closable: true,\n      afterGuiAttached\n    });\n    this.createBean(this.chartDialog);\n    this.chartDialog.addEventListener(\"destroyed\", () => {\n      this.destroy();\n      this.chartMenuService.hideAdvancedSettings();\n      const lastFocusedCell = this.focusService.getFocusedCell();\n      setTimeout(() => {\n        if (lastFocusedCell) {\n          this.focusService.setFocusedCell({ ...lastFocusedCell, forceBrowserFocus: true });\n        } else {\n          this.focusService.focusGridInnerElement();\n        }\n      });\n    });\n  }\n  getBestDialogSize() {\n    const popupParent = this.popupService.getPopupParent();\n    const maxWidth = _getAbsoluteWidth2(popupParent) * 0.75;\n    const maxHeight = _getAbsoluteHeight(popupParent) * 0.75;\n    const ratio = 0.553;\n    const chart = this.chartProxy.getChart();\n    let width = this.params.insideDialog ? 850 : chart.width;\n    let height = this.params.insideDialog ? 470 : chart.height;\n    if (width > maxWidth || height > maxHeight) {\n      width = Math.min(width, maxWidth);\n      height = Math.round(width * ratio);\n      if (height > maxHeight) {\n        height = maxHeight;\n        width = Math.min(width, Math.round(height / ratio));\n      }\n    }\n    return { width, height };\n  }\n  addMenu() {\n    if (!this.params.crossFiltering) {\n      this.chartMenu = this.createBean(\n        new ChartMenu(this.eChartContainer, this.eMenuContainer, this.chartMenuContext)\n      );\n      this.eChartContainer.appendChild(this.chartMenu.getGui());\n    }\n  }\n  update(params) {\n    if (params?.chartId) {\n      const validUpdate = this.chartController.update(params);\n      if (!validUpdate) {\n        return;\n      }\n    }\n    const updatedChartType = this.chartTypeChanged(params);\n    const persistedThemeOverrides = updatedChartType || this.chartEmpty ? ((updatedChartType2) => {\n      const currentChartType = this.chartType;\n      const targetChartType = updatedChartType2;\n      const existingChartInstance = this.chartProxy.getChart();\n      const existingChartOptions = existingChartInstance?.getOptions();\n      const existingAxes = existingChartInstance?.axes;\n      return this.chartOptionsService.getPersistedChartThemeOverrides(\n        existingChartOptions,\n        existingAxes,\n        currentChartType,\n        targetChartType ?? currentChartType\n      );\n    })(updatedChartType) : void 0;\n    if (updatedChartType)\n      this.createChart();\n    const updatedThemeOverrides = persistedThemeOverrides && params?.chartThemeOverrides ? deepMerge(persistedThemeOverrides, params.chartThemeOverrides) : persistedThemeOverrides || params?.chartThemeOverrides;\n    this.updateChart(updatedThemeOverrides);\n    if (params?.chartId) {\n      this.chartProxy.getChart().waitForUpdate().then(() => {\n        this.chartController.raiseChartApiUpdateEvent();\n      });\n    }\n  }\n  updateChart(updatedOverrides) {\n    const { chartProxy } = this;\n    const selectedCols = this.chartController.getSelectedValueColState();\n    const data = this.chartController.getChartData();\n    const chartEmpty = this.handleEmptyChart(data, selectedCols.length);\n    this.chartEmpty = chartEmpty;\n    if (chartEmpty) {\n      if (updatedOverrides)\n        this.chartController.updateThemeOverrides(updatedOverrides);\n      return;\n    }\n    const chartUpdateParams = this.chartController.getChartUpdateParams(updatedOverrides);\n    chartProxy.update(chartUpdateParams);\n    this.chartProxy.getChart().waitForUpdate().then(() => {\n      this.chartController.raiseChartUpdatedEvent();\n    });\n  }\n  chartTypeChanged(updateParams) {\n    const [currentType, updatedChartType] = [this.chartController.getChartType(), updateParams?.chartType];\n    const targetChartType = updatedChartType ? getCanonicalChartType(updatedChartType) : void 0;\n    if (this.chartType !== currentType)\n      return targetChartType ?? currentType;\n    if (targetChartType && currentType !== targetChartType)\n      return targetChartType;\n    return null;\n  }\n  getChartModel() {\n    return this.chartController.getChartModel();\n  }\n  getChartImageDataURL(fileFormat) {\n    return this.chartProxy.getChartImageDataURL(fileFormat);\n  }\n  handleEmptyChart(data, numFields) {\n    const pivotModeDisabled = this.chartController.isPivotChart() && !this.chartController.isPivotMode();\n    const chartType = this.chartController.getChartType();\n    let minFieldsRequired = 1;\n    if (this.chartController.isActiveXYChart()) {\n      minFieldsRequired = chartType === \"bubble\" ? 3 : 2;\n    } else if (isHierarchical(getSeriesType(chartType))) {\n      minFieldsRequired = 0;\n    }\n    const isEmptyChart = numFields < minFieldsRequired || data.length === 0;\n    if (this.eChart) {\n      const isEmpty = pivotModeDisabled || isEmptyChart;\n      _setDisplayed5(this.eChart, !isEmpty);\n      _setDisplayed5(this.eEmpty, isEmpty);\n    }\n    if (pivotModeDisabled) {\n      this.eEmpty.innerText = this.chartTranslationService.translate(\"pivotChartRequiresPivotMode\");\n      return true;\n    }\n    if (isEmptyChart) {\n      this.eEmpty.innerText = this.chartTranslationService.translate(\"noDataToChart\");\n      return true;\n    }\n    return false;\n  }\n  downloadChart(dimensions, fileName, fileFormat) {\n    this.chartProxy.downloadChart(dimensions, fileName, fileFormat);\n  }\n  openChartToolPanel(panel) {\n    const menuPanel = panel ? CHART_TOOL_PANEL_MENU_OPTIONS[panel] : panel;\n    this.chartMenu.showMenu({ panel: menuPanel });\n  }\n  closeChartToolPanel() {\n    this.chartMenu.hideMenu();\n  }\n  getChartId() {\n    return this.chartController.getChartId();\n  }\n  getUnderlyingChart() {\n    return this.chartProxy.getChartRef();\n  }\n  crossFilteringReset() {\n    this.chartProxy.crossFilteringReset();\n  }\n  setActiveChartCellRange(focusEvent) {\n    if (this.getGui().contains(focusEvent.relatedTarget)) {\n      return;\n    }\n    this.chartController.setChartRange(true);\n    this.focusService.clearFocusedCell();\n  }\n  getThemeName() {\n    const availableChartThemes = this.gos.get(\"chartThemes\") || DEFAULT_THEMES;\n    if (availableChartThemes.length === 0) {\n      throw new Error(\"Cannot create chart: no chart themes available.\");\n    }\n    const { chartThemeName } = this.params;\n    return _includes7(availableChartThemes, chartThemeName) ? chartThemeName : availableChartThemes[0];\n  }\n  getAllKeysInObjects(objects) {\n    const allValues = {};\n    objects.filter((obj) => obj != null).forEach((obj) => {\n      Object.keys(obj).forEach((key) => allValues[key] = null);\n    });\n    return Object.keys(allValues);\n  }\n  validateCustomThemes() {\n    const suppliedThemes = this.getChartThemes();\n    const customChartThemes = this.gos.get(\"customChartThemes\");\n    if (customChartThemes) {\n      this.getAllKeysInObjects([customChartThemes]).forEach((customThemeName) => {\n        if (!_includes7(suppliedThemes, customThemeName)) {\n          _warnOnce13(\n            \"a custom chart theme with the name '\" + customThemeName + \"' has been supplied but not added to the 'chartThemes' list\"\n          );\n        }\n      });\n    }\n  }\n  reactivePropertyUpdate() {\n    this.chartController.setChartThemeName(this.getThemeName(), true);\n    const chartId = this.getChartId();\n    const modelType = this.chartController.isCrossFilterChart() ? \"crossFilter\" : this.getChartModel().modelType;\n    const chartThemeOverrides = this.gos.get(\"chartThemeOverrides\") || {};\n    this.update({\n      type: `${modelType}ChartUpdate`,\n      chartId,\n      chartThemeOverrides\n    });\n  }\n  raiseChartCreatedEvent() {\n    const event = {\n      type: \"chartCreated\",\n      chartId: this.chartController.getChartId()\n    };\n    this.chartProxy.getChart().waitForUpdate().then(() => {\n      this.eventService.dispatchEvent(event);\n    });\n  }\n  raiseChartDestroyedEvent() {\n    const event = {\n      type: \"chartDestroyed\",\n      chartId: this.chartController.getChartId()\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  destroy() {\n    super.destroy();\n    if (this.chartProxy) {\n      this.chartProxy.destroy();\n    }\n    this.destroyBean(this.chartMenu);\n    if (this.chartDialog && this.chartDialog.isAlive()) {\n      this.destroyBean(this.chartDialog);\n    }\n    this.onDestroyColorSchemeChangeListener?.();\n    const eGui = this.getGui();\n    _clearElement4(eGui);\n    _removeFromParent7(eGui);\n    this.raiseChartDestroyedEvent();\n  }\n};\n\n// enterprise-modules/charts/src/charts/chartModelMigration.ts\nvar DEBUG = false;\nfunction upgradeChartModel(model) {\n  const originalVersion = model.version;\n  if (model.version == null) {\n    model.version = heuristicVersionDetection(model);\n  }\n  model = migrateIfBefore(\"23.0.0\", model, migrateV23);\n  model = migrateIfBefore(\"24.0.0\", model, migrateV24);\n  model = migrateIfBefore(\"25.1.0\", model, migrateV25_1);\n  model = migrateIfBefore(\"26.0.0\", model, migrateV26);\n  model = migrateIfBefore(\"26.1.0\", model, migrateV26_1);\n  model = migrateIfBefore(\"26.2.0\", model, migrateV26_2);\n  model = migrateIfBefore(\"28.0.0\", model, migrateV28);\n  model = migrateIfBefore(\"28.2.0\", model, migrateV28_2);\n  model = migrateIfBefore(\"29.0.0\", model, migrateV29);\n  model = migrateIfBefore(\"29.1.0\", model, migrateV29_1);\n  model = migrateIfBefore(\"29.2.0\", model, migrateV29_2);\n  model = migrateIfBefore(\"30.0.0\", model, migrateV30);\n  model = migrateIfBefore(\"31.0.0\", model, migrateV31);\n  model = migrateIfBefore(\"32.0.0\", model, migrateV32);\n  model = cleanup(model);\n  model = migrateIfBefore(VERSION, model, (m) => m);\n  if (DEBUG && originalVersion !== model.version) {\n    console.log(\"AG Grid: ChartModel migration complete\", { model });\n  }\n  return model;\n}\nfunction migrateV23(model) {\n  model = jsonRename(\"chartOptions.legend.item.marker.type\", \"shape\", model);\n  model = jsonRename(\"chartOptions.seriesDefaults.marker.type\", \"shape\", model);\n  model = jsonRename(\"chartOptions.legend.padding\", \"spacing\", model);\n  return model;\n}\nfunction migrateV24(model) {\n  model = jsonDelete(\"chartOptions.seriesDefaults.marker.minSize\", model);\n  const {\n    chartType,\n    chartPalette,\n    // Migrate.\n    chartOptions: { xAxis, yAxis, ...chartOptions },\n    ...chartModel\n  } = model;\n  const axesTypes = getLegacyAxisType(chartType);\n  const axes = axesTypes?.map((type, i) => ({\n    type,\n    ...i === 0 ? xAxis : yAxis\n  }));\n  const LEGACY_PALETTES = {\n    borneo: \"ag-default\",\n    material: \"ag-material\",\n    bright: \"ag-vivid\"\n  };\n  return {\n    chartType,\n    chartThemeName: LEGACY_PALETTES[chartPalette] ?? \"ag-default\",\n    chartOptions: {\n      ...chartOptions,\n      axes,\n      xAxis,\n      yAxis\n    },\n    ...chartModel\n  };\n}\nfunction migrateV25_1(model) {\n  model = jsonRename(\"chartOptions.seriesDefaults.label.minRequiredAngle\", \"minAngle\", model);\n  return model;\n}\nfunction migrateV26(model) {\n  const highlightOptUpdate = ({ dimOpacity, ...opts }) => ({\n    ...opts,\n    ...dimOpacity != null ? { series: { dimOpacity } } : {}\n  });\n  model = jsonMutate(\"chartOptions.seriesDefaults.highlightStyle\", model, highlightOptUpdate);\n  model = jsonDelete(\"chart\", model);\n  model = jsonDelete(\"chartOptions.seriesDefaults.tooltipClass\", model);\n  model = jsonDelete(\"chartOptions.seriesDefaults.tooltipTracking\", model);\n  model = jsonDeleteDefault(\"chartOptions.axes[].label.rotation\", 0, model);\n  model = jsonDeleteDefault(\"chartOptions.axes[].label.rotation\", 335, model);\n  return model;\n}\nfunction migrateV26_1(model) {\n  const highlightOptUpdate = ({ item, series, ...opts }) => ({\n    item: { ...opts, ...item },\n    ...series ? { series } : {}\n  });\n  model = jsonMutate(\"chartOptions.seriesDefaults.highlightStyle\", model, highlightOptUpdate);\n  model = jsonMutate(\"chartOptions.series[].highlightStyle\", model, highlightOptUpdate);\n  return model;\n}\nfunction migrateV26_2(model) {\n  model = jsonMove(\"chartOptions.seriesDefaults.fill.opacity\", \"chartOptions.seriesDefaults.fillOpacity\", model);\n  model = jsonMove(\"chartOptions.seriesDefaults.stroke.opacity\", \"chartOptions.seriesDefaults.strokeOpacity\", model);\n  model = jsonMove(\"chartOptions.seriesDefaults.stroke.width\", \"chartOptions.seriesDefaults.strokeWidth\", model);\n  model = jsonDelete(\"chartOptions.seriesDefaults.fill\", model);\n  model = jsonDelete(\"chartOptions.seriesDefaults.stroke\", model);\n  model = jsonDelete(\"chartOptions.seriesDefaults.callout.colors\", model);\n  model = jsonDelete(\"chartOptions.xAxis\", model);\n  model = jsonDelete(\"chartOptions.yAxis\", model);\n  const {\n    chartType: providedChartType,\n    chartOptions: { axes, series, seriesDefaults, ...otherChartOptions },\n    ...otherModelProps\n  } = model;\n  const chartType = getCanonicalChartType(providedChartType);\n  const seriesType = getSeriesType(chartType);\n  const seriesTypes = [seriesType];\n  const chartTypeMixin = {};\n  if (!isPieChartSeries(seriesType)) {\n    const minimalAxis = { top: {}, bottom: {}, left: {}, right: {} };\n    const updatedAxes = axes.map(({ type, ...axisProps }) => ({\n      [type]: { ...minimalAxis, ...axisProps }\n    })).reduce(merge, {});\n    ALL_AXIS_TYPES.filter((v) => updatedAxes[v] == null).forEach((v) => {\n      updatedAxes[v] = { ...minimalAxis };\n    });\n    chartTypeMixin.axes = updatedAxes;\n  }\n  const updatedChartOptions = seriesTypes.map((t) => ({\n    [t]: {\n      ...chartTypeMixin,\n      series: seriesDefaults,\n      ...otherChartOptions\n    }\n  })).reduce(merge, {});\n  model = {\n    ...otherModelProps,\n    chartType,\n    chartOptions: updatedChartOptions\n  };\n  return model;\n}\nfunction migrateV28(model) {\n  model = jsonDelete(\"chartOptions.*.title.padding\", model);\n  model = jsonDelete(\"chartOptions.*.subtitle.padding\", model);\n  model = jsonDelete(\"chartOptions.*.axes.*.title.padding\", model);\n  model = jsonBackfill(\"chartOptions.*.axes.*.title.enabled\", false, model);\n  return model;\n}\nfunction migrateV28_2(model) {\n  model = jsonRename(\"chartOptions.pie.series.callout\", \"calloutLine\", model);\n  model = jsonRename(\"chartOptions.pie.series.label\", \"calloutLabel\", model);\n  model = jsonRename(\"chartOptions.pie.series.labelKey\", \"sectorLabelKey\", model);\n  model = jsonRename(\"chartOptions.pie.series.labelName\", \"sectorLabelName\", model);\n  model = jsonRename(\"chartOptions.donut.series.callout\", \"calloutLine\", model);\n  model = jsonRename(\"chartOptions.donut.series.label\", \"calloutLabel\", model);\n  model = jsonRename(\"chartOptions.donut.series.labelKey\", \"sectorLabelKey\", model);\n  model = jsonRename(\"chartOptions.donut.series.labelName\", \"sectorLabelName\", model);\n  return model;\n}\nfunction migrateV29(model) {\n  model = jsonMoveIfMissing(\"chartOptions.scatter.series.fill\", \"chartOptions.scatter.series.marker.fill\", model);\n  model = jsonMoveIfMissing(\n    \"chartOptions.scatter.series.fillOpacity\",\n    \"chartOptions.scatter.series.marker.fillOpacity\",\n    model\n  );\n  model = jsonMoveIfMissing(\"chartOptions.scatter.series.stroke\", \"chartOptions.scatter.series.marker.stroke\", model);\n  model = jsonMoveIfMissing(\n    \"chartOptions.scatter.series.strokeOpacity\",\n    \"chartOptions.scatter.series.marker.strokeOpacity\",\n    model\n  );\n  model = jsonMoveIfMissing(\n    \"chartOptions.scatter.series.strokeWidth\",\n    \"chartOptions.scatter.series.marker.strokeWidth\",\n    model\n  );\n  model = jsonMove(\"chartOptions.scatter.series.paired\", \"chartOptions.scatter.paired\", model);\n  return model;\n}\nfunction migrateV29_1(model) {\n  model = jsonDelete(\"chartOptions.axes[].tick.count\", model);\n  return model;\n}\nfunction migrateV29_2(model) {\n  const tooltipOptUpdate = ({ tracking, ...opts }) => {\n    const output = { ...opts };\n    if (tracking === false) {\n      output.position ?? (output.position = { type: \"pointer\" });\n      output.range ?? (output.range = \"nearest\");\n    } else if (tracking === true) {\n      output.position ?? (output.position = { type: \"node\" });\n      output.range ?? (output.range = \"nearest\");\n    }\n    return output;\n  };\n  model = jsonMutate(\"chartOptions.*.tooltip\", model, tooltipOptUpdate);\n  return model;\n}\nfunction migrateV30(model) {\n  model = jsonRename(\"chartOptions.pie.series.labelKey\", \"sectorLabelKey\", model);\n  model = jsonRename(\"chartOptions.pie.series.labelName\", \"sectorLabelName\", model);\n  model = migrateV29_1(model);\n  model = migrateV29_2(model);\n  model = jsonDelete(\"chartOptions.*.series.flipXY\", model);\n  model = jsonAdd(\"chartOptions.common.legend.enabled\", true, model);\n  model = jsonBackfill(\"chartOptions.common.legend.position\", \"right\", model);\n  return model;\n}\nfunction migrateV31(model) {\n  const V30_LEGACY_PALETTES = {\n    \"ag-pastel\": \"ag-sheets\",\n    \"ag-solar\": \"ag-polychroma\"\n  };\n  const updatedModel = jsonRename(\"chartOptions.column\", \"bar\", model);\n  const chartThemeName = V30_LEGACY_PALETTES[updatedModel.chartThemeName] || updatedModel.chartThemeName;\n  return {\n    ...updatedModel,\n    chartThemeName\n  };\n}\nfunction migrateV32(model) {\n  model = jsonMutateProperty(\"chartOptions.*.autoSize\", true, model, (parent, targetProp) => {\n    if (parent[targetProp] === true) {\n    } else if (parent[targetProp] === false) {\n      parent[\"minHeight\"] = 600;\n      parent[\"minWidth\"] = 300;\n    }\n    delete parent[targetProp];\n  });\n  return model;\n}\nfunction cleanup(model) {\n  model = jsonDelete(\"chartOptions.*.width\", model);\n  model = jsonDelete(\"chartOptions.*.height\", model);\n  model = jsonBackfill(\"chartOptions.*.axes.category.label.autoRotate\", true, model);\n  return model;\n}\nfunction heuristicVersionDetection(model) {\n  const modelAny = model;\n  if (model.version != null) {\n    return model.version;\n  }\n  const hasKey = (obj, ...keys) => {\n    return Object.keys(obj || {}).some((k) => keys.includes(k));\n  };\n  const chartOptions = modelAny.chartOptions;\n  const seriesOptions = hasKey(chartOptions, \"seriesDefaults\") ? chartOptions?.seriesDefaults : chartOptions?.[Object.keys(chartOptions)[0]];\n  const hints = {\n    \"27.0.0\": hasKey(modelAny, \"seriesChartTypes\"),\n    \"26.2.0\": !hasKey(chartOptions, \"seriesDefaults\"),\n    \"26.1.0\": hasKey(seriesOptions?.highlightStyle, \"item\"),\n    \"26.0.0\": hasKey(seriesOptions?.highlightStyle, \"series\"),\n    // '26.0.0': modelAny.chart === undefined,\n    \"25.1.0\": hasKey(seriesOptions?.label, \"minAngle\"),\n    \"25.0.0\": hasKey(modelAny, \"modelType\", \"aggFunc\", \"unlinkChart\", \"suppressChartRanges\") || hasKey(seriesOptions, \"lineDash\", \"lineDashOffset\"),\n    \"24.0.0\": hasKey(modelAny, \"chartThemeName\", \"chart\") || hasKey(chartOptions, \"series\"),\n    \"23.2.0\": hasKey(chartOptions, \"navigator\"),\n    \"23.0.0\": hasKey(chartOptions?.legend?.item?.marker, \"shape\"),\n    \"22.1.0\": hasKey(modelAny, \"chartPalette\", \"chartType\")\n  };\n  const defaultVersion = \"27.1.0\";\n  const matchingHints = Object.entries(hints).filter(([_, match]) => match);\n  if (DEBUG)\n    console.log(\"AG Grid: ChartModel migration\", { heuristicVersionCandidates: matchingHints });\n  const [heuristicVersion = defaultVersion] = matchingHints[0];\n  if (DEBUG)\n    console.log(\"AG Grid: ChartModel migration\", { heuristicVersion });\n  return heuristicVersion;\n}\nfunction migrateIfBefore(maxVersion, model, migration) {\n  if (versionNumber(maxVersion) > versionNumber(model.version)) {\n    if (DEBUG)\n      console.log(\"AG Grid: ChartModel migration\", { migratingTo: maxVersion });\n    const result = migration(model);\n    result.version = maxVersion;\n    if (DEBUG)\n      console.log(\"AG Grid: ChartModel migration\", { migratedTo: maxVersion, result });\n    return result;\n  }\n  return model;\n}\nfunction versionParts(version) {\n  const split = typeof version === \"string\" ? version.split(\".\").map((v) => Number(v)) : [];\n  if (split.length !== 3 || split.some((v) => isNaN(v))) {\n    throw new Error(\"AG Grid - Illegal version string: \" + version);\n  }\n  return {\n    major: split[0],\n    minor: split[1],\n    patch: split[2]\n  };\n}\nfunction versionNumber(version) {\n  const { major, minor, patch } = versionParts(version);\n  return major * 1e4 + minor * 100 + patch;\n}\nfunction jsonDeleteDefault(path, defaultValue, json) {\n  return jsonMutateProperty(path, true, json, (parent, prop) => {\n    if (parent[prop] === defaultValue) {\n      delete parent[prop];\n    }\n  });\n}\nfunction jsonBackfill(path, defaultValue, json) {\n  return jsonMutateProperty(path, false, json, (parent, prop) => {\n    if (parent[prop] == null) {\n      parent[prop] = defaultValue;\n    }\n  });\n}\nfunction jsonAdd(path, value, json) {\n  if (typeof path === \"string\") {\n    path = path.split(\".\");\n  }\n  const nextPath = path[0];\n  if (path.length > 1) {\n    json[nextPath] = jsonAdd(path.slice(1), value, json[nextPath] ?? {});\n  }\n  const hasProperty = Object.keys(json).includes(nextPath);\n  if (!hasProperty) {\n    json[nextPath] = value;\n  }\n  return json;\n}\nfunction jsonMove(from, to, json) {\n  let valueToMove = void 0;\n  let valueFound = false;\n  json = jsonMutateProperty(from, true, json, (parent, prop) => {\n    valueFound = true;\n    valueToMove = parent[prop];\n    delete parent[prop];\n  });\n  if (!valueFound) {\n    return json;\n  }\n  return jsonMutateProperty(to, false, json, (parent, prop) => {\n    parent[prop] = valueToMove;\n  });\n}\nfunction jsonMoveIfMissing(from, to, json) {\n  let valueToMove = void 0;\n  let valueFound = false;\n  json = jsonMutateProperty(from, true, json, (parent, prop) => {\n    valueFound = true;\n    valueToMove = parent[prop];\n    delete parent[prop];\n  });\n  if (!valueFound) {\n    return json;\n  }\n  return jsonMutateProperty(to, false, json, (parent, prop) => {\n    if (parent[prop] === void 0) {\n      parent[prop] = valueToMove;\n    }\n  });\n}\nfunction jsonRename(path, renameTo, json) {\n  return jsonMutateProperty(path, true, json, (parent, prop) => {\n    parent[renameTo] = parent[prop];\n    delete parent[prop];\n  });\n}\nfunction jsonDelete(path, json) {\n  return jsonMutateProperty(path, true, json, (parent, prop) => delete parent[prop]);\n}\nfunction jsonMutateProperty(path, skipMissing, json, mutator) {\n  const pathElements = path instanceof Array ? path : path.split(\".\");\n  const parentPathElements = pathElements.slice(0, pathElements.length - 1);\n  const targetName = pathElements[pathElements.length - 1];\n  return jsonMutate(parentPathElements, json, (parent) => {\n    const hasProperty = Object.keys(parent).includes(targetName);\n    if (skipMissing && !hasProperty) {\n      return parent;\n    }\n    const result = { ...parent };\n    mutator(result, targetName);\n    return result;\n  });\n}\nfunction jsonMutate(path, json, mutator) {\n  const pathElements = path instanceof Array ? path : path.split(\".\");\n  json = { ...json };\n  if (pathElements.length === 0) {\n    return mutator(json);\n  } else if (pathElements[0].startsWith(\"{\")) {\n    const pathOptions = pathElements[0].substring(1, pathElements[0].lastIndexOf(\"}\")).split(\",\");\n    for (const pathOption of pathOptions) {\n      if (json[pathOption] != null) {\n        json[pathOption] = jsonMutate(pathElements.slice(1), json[pathOption], mutator);\n      }\n    }\n  } else if (pathElements[0].endsWith(\"[]\")) {\n    const arrayName = pathElements[0].substring(0, path[0].indexOf(\"[\"));\n    if (json[arrayName] instanceof Array) {\n      json[arrayName] = json[arrayName].map((v) => jsonMutate(pathElements.slice(1), v, mutator));\n    }\n  } else if (pathElements[0] === \"*\") {\n    for (const jsonProp in json) {\n      json[jsonProp] = jsonMutate(pathElements.slice(1), json[jsonProp], mutator);\n    }\n  } else if (json[pathElements[0]] != null) {\n    json[pathElements[0]] = jsonMutate(pathElements.slice(1), json[pathElements[0]], mutator);\n  }\n  return json;\n}\nvar merge = (r, n) => ({ ...r, ...n });\n\n// enterprise-modules/charts/src/charts/chartService.ts\nvar ChartService = class extends BeanStub15 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"chartService\";\n    // we destroy all charts bound to this grid when grid is destroyed. activeCharts contains all charts, including\n    // those in developer provided containers.\n    this.activeCharts = /* @__PURE__ */ new Set();\n    this.activeChartComps = /* @__PURE__ */ new Set();\n    // this shared (singleton) context is used by cross filtering in line and area charts\n    this.crossFilteringContext = {\n      lastSelectedChartId: \"\"\n    };\n    this.isEnterprise = () => _ModuleSupport4.enterpriseModule.isEnterprise;\n  }\n  wireBeans(beans) {\n    this.visibleColsService = beans.visibleColsService;\n    this.rangeService = beans.rangeService;\n    this.environment = beans.environment;\n    this.focusService = beans.focusService;\n  }\n  updateChart(params) {\n    if (this.activeChartComps.size === 0) {\n      _warnOnce14(`No active charts to update.`);\n      return;\n    }\n    const chartComp = [...this.activeChartComps].find((chartComp2) => chartComp2.getChartId() === params.chartId);\n    if (!chartComp) {\n      _warnOnce14(`Unable to update chart. No active chart found with ID: ${params.chartId}.`);\n      return;\n    }\n    chartComp.update(params);\n  }\n  getChartModels() {\n    const models = [];\n    const versionedModel = (c) => {\n      return { ...c, version: VERSION };\n    };\n    this.activeChartComps.forEach((c) => models.push(versionedModel(c.getChartModel())));\n    return models;\n  }\n  getChartRef(chartId) {\n    let chartRef;\n    this.activeCharts.forEach((cr) => {\n      if (cr.chartId === chartId) {\n        chartRef = cr;\n      }\n    });\n    return chartRef;\n  }\n  getChartComp(chartId) {\n    let chartComp;\n    this.activeChartComps.forEach((comp) => {\n      if (comp.getChartId() === chartId) {\n        chartComp = comp;\n      }\n    });\n    return chartComp;\n  }\n  getChartImageDataURL(params) {\n    let url;\n    this.activeChartComps.forEach((c) => {\n      if (c.getChartId() === params.chartId) {\n        url = c.getChartImageDataURL(params.fileFormat);\n      }\n    });\n    return url;\n  }\n  downloadChart(params) {\n    const chartComp = Array.from(this.activeChartComps).find((c) => c.getChartId() === params.chartId);\n    chartComp?.downloadChart(params.dimensions, params.fileName, params.fileFormat);\n  }\n  openChartToolPanel(params) {\n    const chartComp = Array.from(this.activeChartComps).find((c) => c.getChartId() === params.chartId);\n    chartComp?.openChartToolPanel(params.panel);\n  }\n  closeChartToolPanel(chartId) {\n    const chartComp = Array.from(this.activeChartComps).find((c) => c.getChartId() === chartId);\n    chartComp?.closeChartToolPanel();\n  }\n  createChartFromCurrentRange(chartType = \"groupedColumn\", fromApi) {\n    const cellRange = this.getSelectedRange();\n    return this.createChart({ cellRange, chartType, focusDialogOnOpen: !fromApi });\n  }\n  restoreChart(model, chartContainer) {\n    if (!model) {\n      _warnOnce14(\"unable to restore chart as no chart model is provided\");\n      return;\n    }\n    if (model.version !== VERSION) {\n      model = upgradeChartModel(model);\n    }\n    let cellRange;\n    let pivotChart;\n    let suppressChartRanges;\n    let chartPaletteToRestore;\n    if (model.modelType === \"pivot\") {\n      this.gos.updateGridOptions({ options: { pivotMode: true }, source: \"pivotChart\" });\n      cellRange = this.createCellRange(void 0, true);\n      pivotChart = true;\n      suppressChartRanges = true;\n    } else {\n      cellRange = this.createCellRange(model.cellRange);\n      chartPaletteToRestore = model.chartPalette;\n      suppressChartRanges = model.suppressChartRanges;\n    }\n    if (!cellRange) {\n      return;\n    }\n    return this.createChart({\n      ...model,\n      cellRange,\n      pivotChart,\n      suppressChartRanges,\n      chartContainer,\n      chartOptionsToRestore: model.chartOptions,\n      chartPaletteToRestore\n    });\n  }\n  createRangeChart(params, fromApi) {\n    const cellRange = this.createCellRange(params.cellRange);\n    if (!cellRange) {\n      return;\n    }\n    return this.createChart({\n      ...params,\n      cellRange,\n      focusDialogOnOpen: !fromApi\n    });\n  }\n  createPivotChart(params, fromApi) {\n    this.gos.updateGridOptions({ options: { pivotMode: true }, source: \"pivotChart\" });\n    const cellRange = this.createCellRange(void 0, true);\n    if (!cellRange) {\n      return;\n    }\n    return this.createChart({\n      ...params,\n      cellRange,\n      pivotChart: true,\n      suppressChartRanges: true,\n      focusDialogOnOpen: !fromApi\n    });\n  }\n  createCrossFilterChart(params, fromApi) {\n    const cellRange = this.createCellRange(params.cellRange);\n    if (!cellRange) {\n      return;\n    }\n    const suppressChartRangesSupplied = typeof params.suppressChartRanges !== \"undefined\" && params.suppressChartRanges !== null;\n    const suppressChartRanges = suppressChartRangesSupplied ? params.suppressChartRanges : true;\n    return this.createChart({\n      ...params,\n      cellRange,\n      suppressChartRanges,\n      crossFiltering: true,\n      focusDialogOnOpen: !fromApi\n    });\n  }\n  createChart(params) {\n    const validationResult = ChartParamsValidator.validateCreateParams(params);\n    if (!validationResult) {\n      return void 0;\n    }\n    params = validationResult === true ? params : validationResult;\n    const { chartType, chartContainer } = params;\n    const createChartContainerFunc = this.gos.getCallback(\"createChartContainer\");\n    const gridChartParams = {\n      ...params,\n      chartId: this.generateId(),\n      chartType: getCanonicalChartType(chartType),\n      insideDialog: !(chartContainer || createChartContainerFunc),\n      crossFilteringContext: this.crossFilteringContext,\n      crossFilteringResetCallback: () => this.activeChartComps.forEach((c) => c.crossFilteringReset())\n    };\n    const chartComp = new GridChartComp(gridChartParams);\n    this.createBean(chartComp);\n    const chartRef = this.createChartRef(chartComp);\n    if (chartContainer) {\n      chartContainer.appendChild(chartComp.getGui());\n      const themeEl = this.environment.getThemeAncestorElement();\n      if (themeEl && !themeEl.contains(chartContainer)) {\n        this.environment.applyThemeClasses(chartContainer);\n      }\n    } else if (createChartContainerFunc) {\n      createChartContainerFunc(chartRef);\n    } else {\n      chartComp.addEventListener(\"destroyed\", () => {\n        this.activeChartComps.delete(chartComp);\n        this.activeCharts.delete(chartRef);\n      });\n    }\n    return chartRef;\n  }\n  createChartRef(chartComp) {\n    const chartRef = {\n      destroyChart: () => {\n        if (this.activeCharts.has(chartRef)) {\n          this.destroyBean(chartComp);\n          this.activeChartComps.delete(chartComp);\n          this.activeCharts.delete(chartRef);\n        }\n      },\n      focusChart: () => {\n        this.focusService.focusInto(chartComp.getGui());\n      },\n      chartElement: chartComp.getGui(),\n      chart: chartComp.getUnderlyingChart(),\n      chartId: chartComp.getChartModel().chartId\n    };\n    this.activeCharts.add(chartRef);\n    this.activeChartComps.add(chartComp);\n    return chartRef;\n  }\n  getSelectedRange() {\n    const ranges = this.rangeService?.getCellRanges() ?? [];\n    return ranges.length > 0 ? ranges[0] : { columns: [] };\n  }\n  generateId() {\n    return `id-${Math.random().toString(36).substring(2, 18)}`;\n  }\n  createCellRange(cellRangeParams, allRange) {\n    const rangeParams = allRange ? {\n      rowStartIndex: null,\n      rowStartPinned: void 0,\n      rowEndIndex: null,\n      rowEndPinned: void 0,\n      columns: this.visibleColsService.getAllCols().map((col) => col.getColId())\n    } : cellRangeParams;\n    const cellRange = rangeParams && this.rangeService?.createPartialCellRangeFromRangeParams(rangeParams, true);\n    if (!cellRange) {\n      _warnOnce14(\n        `unable to create chart as ${allRange ? \"there are no columns in the grid\" : \"no range is selected\"}.`\n      );\n    }\n    return cellRange;\n  }\n  destroy() {\n    this.activeCharts.forEach((chart) => chart.destroyChart());\n    super.destroy();\n  }\n};\nChartService.CHARTS_VERSION = CHARTS_VERSION;\n\n// enterprise-modules/charts/src/charts/chartsApi.ts\nfunction getChartModels(beans) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.getChartModels());\n}\nfunction getChartRef(beans, chartId) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.getChartRef(chartId));\n}\nfunction getChartImageDataURL(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.getChartImageDataURL(params));\n}\nfunction downloadChart(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.downloadChart(params));\n}\nfunction openChartToolPanel(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.openChartToolPanel(params));\n}\nfunction closeChartToolPanel(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.closeChartToolPanel(params.chartId));\n}\nfunction createRangeChart(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.createRangeChart(params, true));\n}\nfunction createPivotChart(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.createPivotChart(params, true));\n}\nfunction createCrossFilterChart(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.createCrossFilterChart(params, true));\n}\nfunction updateChart(beans, params) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.updateChart(params));\n}\nfunction restoreChart(beans, chartModel, chartContainer) {\n  return beans.frameworkOverrides.wrapIncoming(() => beans.chartService?.restoreChart(chartModel, chartContainer));\n}\n\n// enterprise-modules/charts/src/utils/validGridChartsVersion.ts\nvar VERSION_CHECKING_FIRST_GRID_MAJOR_VERSION = 28;\nvar VERSION_CHECKING_FIRST_CHARTS_MAJOR_VERSION = 6;\nfunction isValidVersion(version) {\n  return version && version.match(/\\d+\\.\\d+\\.\\d+/);\n}\nfunction isValidMajorVersion({\n  gridMajorVersion,\n  chartsMajorVersion\n}) {\n  const gridMajor = parseInt(gridMajorVersion, 10);\n  const chartsMajor = parseInt(chartsMajorVersion, 10);\n  const gridMajorDifference = gridMajor - VERSION_CHECKING_FIRST_GRID_MAJOR_VERSION;\n  const chartsMajorDifference = chartsMajor - VERSION_CHECKING_FIRST_CHARTS_MAJOR_VERSION;\n  const isFirstOrAfterVersion = gridMajorDifference >= 0;\n  return gridMajorDifference === chartsMajorDifference && isFirstOrAfterVersion;\n}\nfunction gridChartVersion(gridVersion) {\n  if (!gridVersion || !isValidVersion(gridVersion)) {\n    return void 0;\n  }\n  const [gridMajor, gridMinor] = gridVersion.split(\".\") || [];\n  const gridMajorMinor = `${gridMajor}.${gridMinor}.x`;\n  const gridMajorNumber = parseInt(gridMajor, 10);\n  const chartsMajor = gridMajorNumber - VERSION_CHECKING_FIRST_GRID_MAJOR_VERSION + VERSION_CHECKING_FIRST_CHARTS_MAJOR_VERSION;\n  if (chartsMajor < 0) {\n    return void 0;\n  }\n  const chartsMinor = gridMinor;\n  const chartsMajorMinor = `${chartsMajor}.${chartsMinor}.x`;\n  return {\n    gridMajorMinor,\n    chartsMajorMinor\n  };\n}\nfunction validGridChartsVersionErrorMessage({\n  type,\n  gridVersion,\n  chartsVersion\n}) {\n  const invalidMessage = \"AG Grid: AG Grid version is incompatible. Please see https://www.ag-grid.com/javascript-data-grid/modules/ for more information.\";\n  if (!gridVersion) {\n    return invalidMessage;\n  }\n  const version = gridChartVersion(gridVersion);\n  if (!version) {\n    return invalidMessage;\n  }\n  const { gridMajorMinor, chartsMajorMinor } = version;\n  if (type === \"incompatible\") {\n    return `AG Grid version ${gridVersion} and AG Charts version ${chartsVersion} is not supported. AG Grid version ${gridMajorMinor} should be used with AG Chart ${chartsMajorMinor}. Please see https://www.ag-grid.com/javascript-data-grid/modules/ for more information.`;\n  } else if (type === \"invalidCharts\") {\n    return `AG Grid version ${gridMajorMinor} should be used with AG Chart ${chartsMajorMinor}. Please see https://www.ag-grid.com/javascript-data-grid/modules/ for more information.`;\n  }\n  return invalidMessage;\n}\nfunction validGridChartsVersion({\n  gridVersion,\n  chartsVersion\n}) {\n  if (!isValidVersion(chartsVersion)) {\n    return {\n      isValid: false,\n      message: validGridChartsVersionErrorMessage({ type: \"invalidCharts\", gridVersion, chartsVersion })\n    };\n  }\n  if (!isValidVersion(gridVersion)) {\n    return {\n      isValid: false,\n      message: validGridChartsVersionErrorMessage({ type: \"invalidGrid\", gridVersion, chartsVersion })\n    };\n  }\n  const [gridMajor, gridMinor] = gridVersion.split(\".\") || [];\n  const [chartsMajor, chartsMinor, chartsPatch] = chartsVersion.split(\".\") || [];\n  const isValidMajor = isValidMajorVersion({\n    gridMajorVersion: gridMajor,\n    chartsMajorVersion: chartsMajor\n  });\n  if (isValidMajor && gridMinor === chartsMinor || chartsPatch.includes(\"beta\")) {\n    return {\n      isValid: true\n    };\n  } else if (!isValidMajor || gridMinor !== chartsMinor) {\n    return {\n      isValid: false,\n      message: validGridChartsVersionErrorMessage({ type: \"incompatible\", gridVersion, chartsVersion })\n    };\n  }\n  return {\n    isValid: false,\n    message: validGridChartsVersionErrorMessage({ type: \"invalid\", gridVersion, chartsVersion })\n  };\n}\n\n// enterprise-modules/charts/src/gridChartsModule.ts\nvar GridChartsCoreModule = {\n  version: VERSION,\n  validate: () => {\n    return validGridChartsVersion({\n      gridVersion: VERSION,\n      chartsVersion: ChartService.CHARTS_VERSION\n    });\n  },\n  moduleName: `${ModuleNames2.GridChartsModule}-core`,\n  beans: [\n    ChartService,\n    ChartTranslationService,\n    ChartCrossFilterService,\n    ChartMenuListFactory,\n    ChartMenuService,\n    AdvancedSettingsMenuFactory\n  ],\n  userComponents: [\n    {\n      name: \"agMenuItem\",\n      classImp: AgMenuItemRenderer\n    }\n  ],\n  dependantModules: [RangeSelectionModule, EnterpriseCoreModule]\n};\nvar GridChartsApiModule = {\n  version: VERSION,\n  moduleName: `${ModuleNames2.GridChartsModule}-api`,\n  apiFunctions: {\n    getChartModels,\n    getChartRef,\n    getChartImageDataURL,\n    downloadChart,\n    openChartToolPanel,\n    closeChartToolPanel,\n    createRangeChart,\n    createPivotChart,\n    createCrossFilterChart,\n    updateChart,\n    restoreChart\n  },\n  dependantModules: [GridChartsCoreModule]\n};\nvar GridChartsModule = {\n  version: VERSION,\n  moduleName: ModuleNames2.GridChartsModule,\n  dependantModules: [GridChartsCoreModule, GridChartsApiModule]\n};\n\n// enterprise-modules/charts/src/main.ts\nexport * from \"ag-charts-community\";\nvar agCharts = {\n  time,\n  AgCharts: AgCharts2\n};\nexport {\n  GridChartsModule,\n  agCharts\n};\n"],
  "mappings": "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",
  "names": ["AgCharts2", "time", "ModuleNames2", "AgMenuItemRenderer", "EnterpriseCoreModule", "RangeSelectionModule", "BeanStub2", "TabGuardComp", "AgDialog2", "Component6", "ChartMappings", "SERIES_TYPES", "isSeriesType", "seriesType", "isComboChart", "chartType", "doesSeriesHaveProperty", "prop", "isEnterpriseChartType", "getSeriesType", "stackedChartTypes", "isStacked", "isCartesian", "isPolar", "isRadial", "isHierarchical", "getCanonicalChartType", "getSeriesTypeIfExists", "isPieChartSeries", "canOnlyHaveSingleSeries", "getMaxNumCategories", "getMaxNumSeries", "supportsInvertedCategorySeries", "canSwitchDirection", "getFullChartNameTranslationKey", "BeanStub", "_removeFromParent", "ChartPanelFeature", "chartController", "eGui", "cssClass", "createPanels", "component", "reuse", "isGrouping", "panel", "AgInputNumberFieldSelector", "Component", "AgGroupComponentSelector", "AnimationPanel", "chartMenuParamsFactory", "beans", "animationGroupParams", "animationHeightInputParams", "AgCheckboxSelector", "Component3", "AgGroupComponentSelector2", "AgPickerField", "AgDialog", "_Util3", "Component2", "KeyCode", "RefPlaceholder2", "_exists", "_setDisplayed", "_Util2", "AgInputTextField", "RefPlaceholder", "_Util", "AgColorInput", "color", "rgbaColor", "value", "silent", "isValid", "callback", "AgColorInputSelector", "_AgColorPanel", "config", "e", "tabIndex", "valRect", "x", "y", "isLeft", "isRight", "isUp", "isDown", "isVertical", "isHorizontal", "currentX", "currentY", "rect", "slider", "sliderRect", "parentRect", "offset", "diff", "suppressColorInputUpdate", "hue", "rgbaColorWithoutAlpha", "spectrumRgbaColor", "colorPicker", "saturation", "brightness", "dragger", "draggerRect", "recentColors", "innerHtml", "index", "val", "updateColorInput", "h", "s", "b", "spectrumHueRect", "spectrumAlphaRect", "target", "id", "currentColor", "AgColorPanel", "AgColorPicker", "eDocument", "eGuiRect", "pickerComponent", "colorPanel", "AgColorPickerSelector", "CrosshairPanel", "crosshairGroupParams", "crosshairLabelCheckboxParams", "crosshairSnapCheckboxParams", "crosshairStrokeColorPickerParams", "AgCheckboxSelector2", "Component4", "AgGroupComponentSelector3", "AgAbstractLabel", "AgInputNumberFieldSelector2", "RefPlaceholder3", "AgAbstractInputField", "AgInputRange", "min", "max", "step", "ret", "AgInputRangeSelector", "AgSlider", "minValue", "maxValue", "textFieldWidth", "onValueChange", "callbackFn", "textValue", "sliderValue", "width", "AgSliderSelector", "NavigatorPanel", "navigatorGroupParams", "navigatorHeightSliderParams", "navigatorMiniChartCheckboxParams", "AgCheckboxSelector3", "Component5", "RefPlaceholder4", "AgGroupComponentSelector4", "ZoomPanel", "zoomGroupParams", "zoomScrollingCheckboxParams", "zoomScrollingStepSliderParams", "zoomSelectingCheckboxParams", "INTERACTIVITY_GROUPS", "AdvancedSettingsPanel", "chartMenuContext", "group", "comp", "chartAxisMenuParamsFactory", "AdvancedSettingsMenuFactory", "eventSource", "menu", "AdvancedSettingsMenu", "backwards", "panelGui", "nextEl", "focusableElements", "BeanStub3", "Component7", "RefPlaceholder5", "_createIconNoSpan", "AgMenuList", "ChartMenuListFactory", "params", "showMenu", "areChartToolPanelsEnabled", "menuItems", "chartMenuList", "ChartMenuList", "multiplier", "alignSide", "activeEl", "params2", "defaultItems", "chartMenuItems", "originalList", "resultList", "menuItemOrString", "result", "subMenu", "key", "name", "iconName", "action", "hidePopup", "BeanStub4", "_includes", "_warnOnce", "ChartCrossFilterService", "_ChartCrossFilterService", "event", "reset", "filterModel", "colId", "dataKey", "rawValue", "selectedValue", "existingGridValues", "valueAlreadyExists", "updatedValues", "v", "filteredValues", "column", "rowNode", "filterType", "gridColumn", "BeanStub5", "_warnOnce2", "CHART_TOOLBAR_ALLOW_LIST", "CHART_TOOL_PANEL_MENU_OPTIONS", "ChartMenuService", "dimensions", "fileName", "fileFormat", "defaultChartToolbarOptions", "toolbarItemsFunc", "option", "chartToolPanelsDef", "panels", "menuOption", "defaultToolPanel", "defaultPanel", "BeanStub6", "_ChartTranslationService", "toTranslate", "translate", "defaultTranslation", "ChartTranslationService", "BeanStub15", "_warnOnce14", "CHARTS_VERSION", "_ModuleSupport4", "VERSION", "Component40", "RefPlaceholder19", "_clearElement4", "_getAbsoluteHeight", "_getAbsoluteWidth2", "_includes7", "_removeFromParent7", "_setDisplayed5", "_warnOnce13", "AgDialog3", "BeanStub11", "_warnOnce8", "_ModuleSupport2", "_Theme2", "_includes2", "_warnOnce3", "_Theme", "ALL_AXIS_TYPES", "getLegacyAxisType", "emptyTarget", "cloneUnlessOtherwiseSpecified", "options", "deepMerge", "defaultArrayMerge", "source", "element", "getMergeFunction", "customMerge", "getEnumerableOwnPropertySymbols", "symbol", "getKeys", "propertyIsOnObject", "object", "property", "propertyIsUnsafe", "mergeObject", "destination", "defaultIsMergeableObject", "isNonNullObject", "isSpecial", "stringValue", "sourceIsArray", "targetIsArray", "get", "expression", "defaultValue", "keys", "objectToRead", "set", "objectToUpdate", "i", "createAgChartTheme", "chartProxyParams", "proxy", "isEnterprise", "chartThemeDefaults", "updatedOverrides", "chartOptionsToRestore", "chartPaletteToRestore", "chartThemeToRestore", "themeName", "getSelectedTheme", "stockTheme", "isStockTheme", "rootTheme", "lookupCustomChartTheme", "gridOptionsThemeOverrides", "apiThemeOverrides", "standaloneChartType", "crossFilteringOverrides", "createCrossFilterThemeOverrides", "theme", "inbuiltStockThemeOverrides", "isTitleEnabled2", "obj", "r", "n", "rootThemePalette", "isIdenticalPalette", "paletteA", "paletteB", "arrayCompare", "arrA", "arrB", "legend", "STATIC_INBUILT_STOCK_THEME_AXES_OVERRIDES", "titleEnabled", "extraPadding", "chartThemeName", "availableThemes", "customChartThemes", "customChartTheme", "BeanStub10", "CellRangeType", "_includes4", "BeanStub7", "ModuleNames", "ModuleRegistry", "_includes3", "_last", "_values", "_warnOnce4", "ChartDatasource", "_ChartDatasource", "crossFiltering", "startRow", "endRow", "valueCols", "dimensionCols", "grouping", "extractedRowData", "columnNames", "groupNodeIndexes", "groupsToRemove", "filteredNodes", "allRowNodes", "numRows", "modelLastRow", "col", "columnNamesArr", "pivotKeys", "headerName", "numRemovedNodes", "data", "valueObject", "valueString", "labels2", "l", "groupKey", "ChartDataModel", "filteredOutColId", "actualValue", "groupChartData", "groupIndexesToRemove", "allData", "dataFromGrid", "lastCol", "lastColId", "map", "dataAggregated", "currentMap", "groupItem", "dimCol", "dimColId", "aggStage", "valueCol", "dataToAgg", "child", "aggResult", "dataToAggFiltered", "aggResultFiltered", "secondaryColumns", "pivotKeySeparator", "extractSeparator", "columnGroup", "childId", "groupId", "firstSecondaryCol", "initialLabel", "rowNodes", "sortOptions", "BeanStub8", "_warnOnce5", "ChartColumnService", "clearValueCols", "gridCols", "colDef", "chartDataType", "row", "cellValue", "isNumber", "childRow", "BeanStub9", "_warnOnce6", "_ComboChartModel", "chartDataModel", "seriesChartTypes", "seriesChartTypesExist", "seriesChartType", "primaryOnly", "getSeriesChartType", "providedSeriesChartType", "updatedSeriesChartTypes", "valueColState", "primaryChartType", "secondaryChartType", "selectedCols", "cs", "lineIndex", "ComboChartModel", "_ChartDataModel", "pivotChart", "switchCategorySeries", "aggFunc", "cellRange", "suppressChartRanges", "unlinkChart", "seriesGroupType", "updatedColState", "resetOrder", "maintainColState", "setColsFromRange", "allColsFromRanges", "chartData", "usingTreeData", "groupedCols", "isGroupActive", "colIds", "groupDimensionSelected", "type", "columns", "rangeService", "valueCellRange", "dimensionCellRange", "endRowPosition", "allCols", "isInitialising", "supportsMultipleDimensions", "hasSelectedDimension", "order", "aggFuncDimension", "isAutoGroupCol", "selected", "defaultCategory", "valueColumnsFromReferenceRange", "c", "updatedCol", "idsMatch", "dimensionColState", "matchedDimensionColState", "matchedValueColState", "selectedColumnState", "allColumns", "orderedColIds", "ascColStateOrder", "a", "colsInRange", "selectedDimensionColStates", "isDefaultCategory", "selectedColumns", "selectedValueCols", "maxSelection", "numSelected", "colState", "dimension", "colIdSet", "foundColStates", "selectedColumnIds", "selectedColumnId", "selectedDimensions", "_warnOnce7", "_ModuleSupport", "validateIfDefined", "validationFn", "isString", "isBoolean", "isValidSeriesChartType", "createWarnMessage", "expectedType", "createEnterpriseMessage", "feature", "_ChartParamsValidator", "validateProperties", "validations", "renamedChartType", "themeOverrides", "ChartParamsValidator", "validPropertyNames", "paramsType", "validatedProperties", "validation", "warnMessage", "warnIfFixed", "validationResult", "DEFAULT_THEMES", "ChartController", "model", "listener", "validParams", "chartId", "chartModelParams", "fields", "selectedDimension", "category", "categories", "categoryKey", "categoryValue", "seriesLabel", "field", "seriesLabelValue", "modelType", "inverted", "previousChartType", "updateForMax", "maxNum", "maxNumDimensions", "maxNumSeries", "updateDimensionColState", "updateValueColState", "chartProxy", "savedCustomSeriesChartTypes", "secondaryAxis", "updateChartType", "prevSeriesChartType", "selectedColIds", "targetChartType", "ct", "chartTypeMap", "currentChartType", "valid", "cellRanges", "firstCellRange", "categoryAxisType", "AgCharts", "_ModuleSupport3", "_Theme3", "deproxy", "chartOrProxy", "ChartProxy", "chart", "rawChart", "imageFileName", "height", "paired", "d", "datum", "existingOptions", "formattingPanelOverrides", "newOptions", "seriesOverrides", "seriesChartOptions", "crosshair", "common", "keepChartInstance", "CartesianChartProxy", "commonChartOptions", "axes", "supportsCrossFiltering", "xAxisType", "isInstance", "testDatum", "point", "series", "getYKey", "yKey", "multiSelection", "p", "lastSelectedChartId", "pointSelected", "theme2", "direction", "AreaChartProxy", "numberAxis", "f", "_includes5", "_Util4", "hexToRGBA", "hex", "alpha", "g", "changeOpacity", "fills", "fill", "HORIZONTAL_CHART_TYPES", "BarChartProxy", "palette", "updatePrimarySeries", "seriesOptions", "updateFilteredOutSeries", "allSeries", "primarySeries", "normalisedCharts", "HistogramChartProxy", "firstField", "_params", "LineChartProxy", "ScatterChartProxy", "seriesDefinitions", "labelFieldDefinition", "seriesDefinition", "filteredOutKey", "calcMarkerDomain", "data2", "sizeKey", "markerDomain", "series2", "idx", "stroke", "xKey", "alteredSizeKey", "filterableEvent", "updatedSeries", "isBubbleChart", "currentXField", "xField", "yField", "WaterfallChartProxy", "ComboChartProxy", "fieldsMap", "primaryYKeys", "secondaryYKeys", "secondaryYKey", "secondaryAxisOptions", "groupedOpts", "GROUP_AUTO_COLUMN_ID", "CATEGORY_LABEL_KEY", "createCategoryHierarchy", "categoryKeys", "hierarchy", "buildNestedHierarchy", "getItemDepth", "getItemCategoryLabel", "formatCategoryHierarchy", "item", "categoryIndex", "getCategoryLabel", "createAutoGroupHierarchy", "getItemLabels", "getItemGroupLabel", "groupIndex", "labelIndex", "isChild", "depth", "rootValues", "inputChildren", "children", "childKey", "childHierarchy", "getItemGroupKey", "itemDepth", "createNestedItemHierarchy", "getItemGroupKey2", "currentDepth", "hierarchy2", "existingChildHierarchy", "HierarchicalChartProxy", "sizeField", "colorField", "groupData", "isGrouped", "processedData", "groupDatum", "newDatum", "calculateOffsets", "outerRadiusOffset", "innerRadiusOffset", "PieChartProxy", "numFields", "title", "total", "primaryOptions", "filteredOutOptions", "angleKey2", "primaryOpts", "angleKey", "PolarChartProxy", "_", "radialBar", "seriesGroupTypeOptions", "firstSeriesProperties", "getStackedValue", "axis", "flatMap", "items", "iteratee", "acc", "array", "HEATMAP_CATEGORY_KEY", "HEATMAP_SERIES_KEY", "HEATMAP_VALUE_KEY", "HeatmapChartProxy", "xSeriesKey", "xValueKey", "yValue", "displayName", "renderHeatmapTooltip", "colorKey", "yName", "label", "sanitizeHtml", "input", "ESCAPED_CHARS", "characterClass", "pattern", "char", "StatisticalChartProxy", "computeStatsFn", "groupedData", "categoryData", "categoryResult", "seriesIndex", "seriesValues", "statKey", "propertyKey", "getCategory", "existingCategoryData", "BoxPlotChartProxy", "sortedValues", "q", "position", "indexBelow", "aboveValue", "RangeChartProxy", "AgPromise2", "Component39", "_warnOnce12", "AgPanel", "Component8", "RefPlaceholder6", "_clearElement", "_createIconNoSpan2", "ChartToolbar", "buttons", "func", "menuEl", "buttonConfig", "buttonName", "buttonEl", "tooltipTitle", "wrapperEl", "AgPromise", "Component38", "TabbedLayout", "AgToggleButton3", "Component13", "_setDisplayed2", "_warnOnce9", "AgSelect3", "AgToggleButton", "AgGroupComponent", "AgSelect2", "Component10", "AgSelect", "Component9", "DragSourceType", "_escapeString", "_removeFromParent2", "PillDragComp", "PillDropZonePanel", "AgPillSelect", "selectedValueList", "valueFormatter", "valueList", "ariaLabel", "onValuesChange", "dragSourceId", "PillSelectDropZonePanel", "values", "selectedValues", "added", "removed", "updated", "refreshSelect", "placeholder", "forceRefreshSelect", "previousSelectedValues", "changes", "activeElement", "selectHasFocus", "dropZoneHasFocus", "emptyRefreshedSelect", "newSelectedValues", "PillSelectDragComp", "dragSourceDropTarget", "ghost", "draggable", "sourceId", "draggingEvent", "dropTarget", "dragItem", "DragDataPanel", "allowMultipleSelection", "template", "eItem", "selectLabelKey", "skipAnimation", "text", "updateOrder", "DEFAULT_AGG_FUNC", "CategoriesDataPanel", "isOpen", "aggFunc2", "supportsAggregation", "AgSelect4", "ChartMappings2", "Component11", "RefPlaceholder7", "AgGroupComponentSelector5", "BeanStub12", "ChartMenuParamsFactory", "chartOptionsProxy", "labelKey", "numberValue", "defaultMaxValue", "isArray", "value2", "dropdownOptions", "keyMapper", "optionsValue", "optionsValue2", "ChartSpecificDataPanel", "chartSpecificGroupParams", "chartOptionsService", "chartOptionsSeriesProxy", "chartSeriesMenuParamsFactory", "isDisplayed", "select", "AgCheckbox", "AgSelect5", "Component12", "_areEqual", "_clearElement2", "AgGroupComponent2", "SeriesChartTypePanel", "seriesItemGroup", "isSecondaryAxisDisabled", "secondaryAxisComp", "enabled", "chartTypeComp", "AgToggleButton2", "AgGroupComponent3", "SeriesDataPanel", "allowMultipleSelect", "pairedModeToggle", "newValue", "isBubble", "isInPairedMode", "indexToAxisLabel", "escapedLabel", "axisLabel", "DefaultDataPanelDef", "ChartDataPanel", "isSwitchCategorySeriesToggledCurrent", "hasChangedSwitchCategorySeries", "isSwitchCategorySeriesDisplayed", "oldChartType", "newChartType", "isCombo", "isCategorySeriesSwitched", "fragment", "Component34", "_warnOnce10", "AgCheckbox2", "AgSelectSelector2", "Component17", "RefPlaceholder10", "_removeFromParent4", "_setDisplayed3", "AgGroupComponentSelector9", "AgAbstractLabel2", "AgInputNumberFieldSelector3", "RefPlaceholder8", "_exists2", "_setFixedWidth", "AgAngleSelect", "floatValue", "normalizedValue", "radians", "eChildCircle", "centerX", "centerY", "radius", "dx", "dy", "degrees", "radiansValue", "disabled", "AgSelectSelector", "Component14", "RefPlaceholder9", "_capitalise", "_includes6", "_removeFromParent3", "AgGroupComponentSelector6", "FontPanel", "cssIdentifier", "onEnableChange", "suppressEnabledCheckbox", "fontGroupParams", "enabled2", "prepend", "families", "family", "initialValue", "valueIndex", "capitalisedFontValue", "sizes", "size", "weight", "style", "weightStyles", "selectedOption", "ws", "selectedWeightStyle", "font", "fontKey", "Component15", "AgGroupComponentSelector7", "AxisTicksPanel", "chartMenuUtils", "axisTicksGroupParams", "axisTicksColorPickerParams", "axisTicksWidthSliderParams", "axisTicksSizeSliderParams", "Component16", "AgGroupComponentSelector8", "GridLinePanel", "gridLineGroupParams", "gridLineColorPickerParams", "gridLineWidthSliderParams", "gridLineLineDashSliderParams", "styles", "DEFAULT_TIME_AXIS_FORMAT", "CartesianAxisPanel", "axisType", "expanded", "registerGroupComponent", "axisGroupParams", "chartAxisOptionsProxy", "chartAxisOptions", "chartAxisThemeOverrides", "axisTypeSelectParams", "axisPositionSelectParams", "axisTimeFormatSelectParams", "axisColorInputParams", "axisLineWidthSliderParams", "updateTimeFormatVisibility", "isTimeAxis", "updateAxisLabelRotations", "chartAxisAppliedThemeOverrides", "chartOptions", "axisTypeSelectOptions", "previousAxisType", "previousAxisThemeOverrides", "previousAxisIsTimeAxis", "updatedAxisIsTimeAxis", "updatedLabelFormat", "existingLabel", "hasOptions", "supportsNumericalAxis", "axisPositionSelectOptions", "axisTimeFormatSelectOptions", "getAxisLineWidth", "setAxisLineWidth", "gridLineComp", "axisTicksComp", "labelPanelComp", "rotationComp", "autoRotateCb", "getLabelRotationValue", "getLabelAutoRotateValue", "updateAutoRotate", "autoRotate2", "autoRotate", "autoRotateCheckbox", "setLabelRotationValue", "angleSelect", "labelPaddingSlider", "AgSelect6", "Component18", "RefPlaceholder11", "AgGroupComponent4", "AgGroupComponentSelector10", "PolarAxisPanel", "labelOrientationComp", "chartSeriesType", "paddingPanelComp", "Component21", "RefPlaceholder13", "AgGroupComponentSelector13", "Component19", "AgGroupComponentSelector11", "BackgroundPanel", "chartBackgroundGroupParams", "colorPickerParams", "Component20", "RefPlaceholder12", "AgGroupComponentSelector12", "PaddingPanel", "chartPaddingGroupParams", "getSliderParams", "topPadding", "ChartPanel", "chartGroupParams", "BeanStub13", "GroupExpansionFeature", "groupContainer", "groupComponent", "previouslyExpandedGroupComponent", "groupComponentGui", "groupPositionInViewport", "newScrollTop", "AgCheckbox3", "AgSelect7", "Component22", "RefPlaceholder14", "AgGroupComponent5", "AgGroupComponentSelector14", "LegendPanel", "positionSelect", "enabledGroup", "legendGroupParams", "createSlider", "rootKey", "AgSelect8", "AgToggleButton4", "Component31", "RefPlaceholder16", "_errorOnce", "_removeFromParent6", "AgGroupComponentSelector23", "Component23", "AgGroupComponentSelector15", "CalloutPanel", "calloutGroupParams", "Component24", "AgGroupComponentSelector16", "CapsPanel", "capsGroupParams", "capLengthRatioSliderParams", "Component25", "AgGroupComponentSelector17", "ConnectorLinePanel", "lineGroupParams", "seriesOptionKey", "AgSelectSelector3", "Component26", "AgGroupComponentSelector18", "getShapeSelectOptions", "chartTranslationService", "MarkersPanel", "seriesMarkersGroupParams", "AgSelectSelector4", "Component27", "RefPlaceholder15", "_removeFromParent5", "AgGroupComponentSelector19", "SeriesItemsPanel", "seriesItemsGroupParams", "seriesItemChangedCallback", "itemType", "itemSlider", "sectorParams", "Component28", "AgGroupComponentSelector20", "ShadowPanel", "propertyNamespace", "shadowGroupParams", "shadowColorPickerParams", "Component29", "AgGroupComponentSelector21", "TileSpacingPanel", "groupParams", "Component30", "AgGroupComponentSelector22", "WhiskersPanel", "whiskersGroupParams", "tooltips", "strokeWidth", "lineDash", "lineOpacity", "fillOpacity", "labels", "shadow", "SeriesPanel", "seriesGroupParams", "w", "widgetFuncResult", "widget", "seriesSelect", "isPieChart", "seriesOptionLabelProperty", "labelParams", "calloutPanelComp", "placementSelect", "paddingSlider", "sectorPanelComp", "positionRatioParams", "positionRatioComp", "activeSeriesTypes", "Component33", "RefPlaceholder17", "AgGroupComponentSelector24", "AgInputTextField2", "Component32", "TitlePanel", "hasTitle", "fontPanelParams", "ChartTitlePanel", "currentTitleText", "TitlesPanel", "axisTitlePanels", "createAxisParamsFactory", "titleGroupParams", "DefaultFormatPanelDef", "FormatPanel", "_chartType", "panelExpandedOnInit", "isExpandedOnInit", "opts", "userProvidedFormatPanelDef", "Component37", "RefPlaceholder18", "_clearElement3", "_createIconNoSpan3", "_getAbsoluteWidth", "_radioCssClass", "_setDisplayed4", "_shallowCompare", "Component36", "KeyCode2", "_setAriaLabel", "_warnOnce11", "AgGroupComponent6", "_Scene", "createColumnRects", "stacked", "padding", "xScalePadding", "xScaleDomain", "yScaleDomain", "xScale", "yScale", "createBars", "xScale2", "yScale2", "top", "createLinePaths", "root", "lines", "line", "linesGroup", "createPolarPaths", "innerRadius", "markerSize", "angleScale", "angle", "radiusScale", "markers", "paths", "path", "marker", "center", "accumulateData", "curr", "currIndex", "previous", "current", "datumIndex", "_Scene3", "Component35", "_errorOnce2", "_Scene2", "CANVAS_CLASS", "ERROR_MESSAGE", "MiniChart", "container", "tooltipName", "scene", "newEl", "MiniChartWithAxes", "leftAxis", "bottomAxis", "MiniColumn", "strokes", "columnData", "_MiniStackedColumn", "_themeTemplateParameters", "_isCustomTheme", "MiniStackedColumn", "_MiniNormalizedColumn", "themeTemplateParameters", "isCustomTheme", "MiniNormalizedColumn", "_Scene4", "MiniBar", "bottom", "bar", "_Scene5", "_MiniStackedBar", "MiniStackedBar", "_MiniNormalizedBar", "MiniNormalizedBar", "_Scene6", "toRadians", "MiniDonut", "centerRadiusScaler", "angles", "startAngle", "endAngle", "sector", "MiniPie", "MiniLine", "_Scene7", "MiniScatter", "points", "arc", "pointsGroup", "_Scene8", "MiniBubble", "_Scene9", "_MiniArea", "last", "pathData", "bottomY", "yDatum", "j", "area", "MiniArea", "_Scene10", "_MiniStackedArea", "MiniStackedArea", "_MiniNormalizedArea", "stack", "sum", "MiniNormalizedArea", "_Scene11", "MiniHistogram", "left", "right", "_Scene13", "_Scene12", "MiniChartWithPolarAxes", "combinedPadding", "axisLineRadius", "gridRadii", "radiusAxisLine", "gridLine", "MiniRadialColumn", "axisInnerRadius", "bandwidth", "previousSeries", "seriesGroup", "seriesColumns", "previousDatum", "outerRadius", "columnWidth", "_Scene14", "MiniRadialBar", "totalRadius", "start", "end", "seriesSectors", "innerRadius2", "MiniRadarLine", "startIdx", "endIdx", "MiniRadarArea", "_Scene15", "MiniNightingale", "_Scene16", "MiniRangeBar", "barAlongX", "scalePadding", "lowRatio", "highRatio", "bars", "low", "high", "_Scene17", "MiniRangeArea", "period", "dataSeriesMidpoints", "zigzag", "dataSeriesWidth", "areas", "swapArrayItems", "highLine", "lowLine", "xMin", "acc2", "xMax", "yMin", "yMax", "scaledX", "yLow", "yHigh", "command", "seriesLowPoints", "length", "getZigzagInflectionPoints", "getZigzagPoint", "offset2", "length2", "pattern2", "scaledOffset", "inflectionPoints", "getRemainderAbs", "getZigzagValue", "remainder", "leftIndex", "rightIndex", "results", "temp", "_Scene18", "_Theme4", "_Util5", "MiniBoxPlot", "maxRatio", "q3Ratio", "q1Ratio", "minRatio", "halfBandWidth", "q1Value", "q3Value", "mid", "whiskerX", "boxPlotGroup", "box", "median", "topWhisker", "bottomWhisker", "topCap", "bottomCap", "themeBackgroundColor", "backgroundFill", "node", "x1", "x2", "y1", "y2", "_Scene19", "_Theme5", "MiniTreemap", "themeTemplate", "treePadding", "range", "columnParts", "columnPadding", "availableRange", "availableWidth", "previousX", "rects", "columnIndex", "widthRatio", "rows", "rowParts", "parts", "ratio", "rowPadding", "availableHeight", "previousY", "xRects", "rectGroup", "defaultBackgroundColor", "_Scene20", "MiniSunburst", "angleOffset", "innerRadiusRatio", "angleRange", "angleExtent", "radiusRange", "radiusExtent", "maxDepth", "findMaxDepth", "parentDepth", "radiusRatio", "createSectors", "startAngle2", "availableAngle", "childDepth", "previousAngle", "childIndex", "childGroup", "angleRatio", "_Scene21", "_Theme6", "_Util6", "MiniHeatmap", "heatmapSize", "__", "_2", "yIndex", "domain", "defaultColorRange", "colorRange", "fillFn", "_Scene22", "_Theme7", "MiniWaterfall", "positive", "negative", "isPositive", "flatData", "flat", "connectorLine", "pixelAlignmentOffset", "connectorPath", "currY", "trailY", "moveTo", "lineTo", "lineToX", "lineToY", "moveToX", "moveToY", "MiniColumnLineCombo", "lineData", "_Scene23", "MiniAreaColumnCombo", "areaData", "yZero", "firstX", "xDatum", "lastX", "_Scene24", "MiniCustomCombo", "axisStroke", "axisOvershoot", "penIcon", "miniChartMapping", "DEFAULT_CHART_GROUPS", "MiniChartsContainer", "chartGroups", "isPivotChart", "isRangeChart", "displayedMenuGroups", "menuGroup", "menuItem", "MiniClass", "miniWrapper", "miniClassChartType", "selectedChartType", "miniChart", "miniChartType", "chartName", "ChartSettingsPanel", "isMiniChartsContainerVisible", "miniChartsContainers", "currentChart", "parent", "forceReset", "palettes", "themes", "isActivePalette", "miniChartsContainer", "link", "prev", "next", "animationDirection", "currentPalette", "currentGui", "futurePalette", "nextGui", "final", "animatingClass", "_TabbedChartMenu", "panelType", "panelComp", "tabItem", "eWrapperDiv", "titleEl", "translatedTitle", "tab", "suppressFocus", "TabbedChartMenu", "ChartMenu", "eChartContainer", "eMenuPanelContainer", "defaultTab", "menuPanel", "res", "BeanStub14", "_errorOnce3", "CARTESIAN_AXIS_TYPES", "POLAR_AXIS_TYPES", "VALID_AXIS_TYPES", "ChartOptionsService", "properties", "getSelectedSeries", "calculated", "existingChartOptions", "existingAxes", "existingChartType", "retainedThemeOverrideKeys", "retainedChartAxisThemeOverrideKeys", "targetChartOptions", "targetAxisTypes", "existingAxisType", "targetAxisType", "UNIVERSAL_PERSISTED_THEME_OVERRIDES", "PERSISTED_CARTESIAN_CHART_THEME_OVERRIDES", "chartSpecificThemeOverrideKeys", "updatedChartType", "expressions", "axisPositionSuffixes", "PERSISTED_CARTESIAN_AXIS_THEME_OVERRIDES", "axisPositionSuffix", "relevantAxes", "part", "chartAxis", "axisIndex", "updateFunc", "axisOptions", "_axes", "isMatchingSeries", "axisPositions", "axisPosition", "chartRef", "chartSeriesTypes", "chartModel", "GridChartComp", "_GridChartComp", "modelParams", "isRtl", "chartInstance", "crossFilterCallback", "ctx", "afterGuiAttached", "lastFocusedCell", "popupParent", "maxWidth", "maxHeight", "persistedThemeOverrides", "updatedChartType2", "existingChartInstance", "updatedThemeOverrides", "chartEmpty", "chartUpdateParams", "updateParams", "currentType", "pivotModeDisabled", "minFieldsRequired", "isEmptyChart", "isEmpty", "focusEvent", "availableChartThemes", "objects", "allValues", "suppliedThemes", "customThemeName", "chartThemeOverrides", "DEBUG", "upgradeChartModel", "originalVersion", "heuristicVersionDetection", "migrateIfBefore", "migrateV23", "migrateV24", "migrateV25_1", "migrateV26", "migrateV26_1", "migrateV26_2", "migrateV28", "migrateV28_2", "migrateV29", "migrateV29_1", "migrateV29_2", "migrateV30", "migrateV31", "migrateV32", "cleanup", "m", "jsonRename", "jsonDelete", "chartPalette", "xAxis", "yAxis", "jsonMutate", "dimOpacity", "jsonDeleteDefault", "highlightOptUpdate", "jsonMove", "providedChartType", "seriesDefaults", "otherChartOptions", "otherModelProps", "seriesTypes", "chartTypeMixin", "minimalAxis", "updatedAxes", "axisProps", "merge", "updatedChartOptions", "t", "jsonBackfill", "jsonMoveIfMissing", "tracking", "output", "jsonAdd", "V30_LEGACY_PALETTES", "updatedModel", "jsonMutateProperty", "targetProp", "modelAny", "hasKey", "k", "hints", "defaultVersion", "matchingHints", "match", "heuristicVersion", "maxVersion", "migration", "versionNumber", "versionParts", "version", "split", "major", "minor", "patch", "json", "nextPath", "from", "to", "valueToMove", "valueFound", "renameTo", "skipMissing", "mutator", "pathElements", "parentPathElements", "targetName", "hasProperty", "pathOptions", "pathOption", "arrayName", "jsonProp", "ChartService", "chartComp", "chartComp2", "models", "versionedModel", "cr", "url", "fromApi", "chartContainer", "createChartContainerFunc", "gridChartParams", "themeEl", "ranges", "cellRangeParams", "allRange", "rangeParams", "getChartModels", "getChartRef", "getChartImageDataURL", "downloadChart", "openChartToolPanel", "closeChartToolPanel", "createRangeChart", "createPivotChart", "createCrossFilterChart", "updateChart", "restoreChart", "VERSION_CHECKING_FIRST_GRID_MAJOR_VERSION", "VERSION_CHECKING_FIRST_CHARTS_MAJOR_VERSION", "isValidVersion", "isValidMajorVersion", "gridMajorVersion", "chartsMajorVersion", "gridMajor", "chartsMajor", "gridMajorDifference", "chartsMajorDifference", "isFirstOrAfterVersion", "gridChartVersion", "gridVersion", "gridMinor", "gridMajorMinor", "chartsMajorMinor", "validGridChartsVersionErrorMessage", "chartsVersion", "invalidMessage", "validGridChartsVersion", "chartsMinor", "chartsPatch", "isValidMajor", "GridChartsCoreModule", "GridChartsApiModule", "GridChartsModule", "agCharts"]
}
