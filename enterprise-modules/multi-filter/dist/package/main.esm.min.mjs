import{ModuleNames as v,_ColumnFilterModule as G,_ReadOnlyFloatingFilterModule as E}from"@ag-grid-community/core";import{AgMenuItemRenderer as L,EnterpriseCoreModule as x}from"@ag-grid-enterprise/core";import{AgPromise as h,KeyCode as f,ProvidedFilter as I,TabGuardComp as w,_forEachReverse as y,_loadTemplate as R,_removeFromArray as T}from"@ag-grid-community/core";import{AgGroupComponent as O,AgMenuItemComponent as b,AgMenuItemRenderer as S}from"@ag-grid-enterprise/core";var d=class P extends w{constructor(){super('<div class="ag-multi-filter ag-menu-list-compact"></div>'),this.filterDefs=[],this.filters=[],this.guiDestroyFuncs=[],this.filterGuis=[],this.activeFilterIndices=[],this.lastActivatedMenuItem=null,this.afterFiltersReadyFuncs=[]}wireBeans(t){this.filterManager=t.filterManager,this.userComponentFactory=t.userComponentFactory,this.focusService=t.focusService}postConstruct(){this.initialiseTabGuard({onFocusIn:t=>this.onFocusIn(t)})}static getFilterDefs(t){const{filters:i}=t;return i&&i.length>0?i:[{filter:"agTextColumnFilter"},{filter:"agSetColumnFilter"}]}init(t){this.params=t,this.filterDefs=P.getFilterDefs(t);const{column:i,filterChangedCallback:e}=t;this.column=i,this.filterChangedCallback=e;const s=[];return this.filterDefs.forEach((r,l)=>{const n=this.createFilter(r,l);n!=null&&s.push(n)}),new h(r=>{h.all(s).then(l=>{this.filters=l,this.refreshGui("columnMenu").then(()=>{r()})})}).then(()=>{this.afterFiltersReadyFuncs.forEach(r=>r()),this.afterFiltersReadyFuncs.length=0})}refreshGui(t){return t===this.lastOpenedInContainer?h.resolve():(this.tabGuardFeature.removeAllChildrenExceptTabGuards(),this.destroyChildren(),h.all(this.filters.map((i,e)=>{const s=this.filterDefs[e],r=this.getFilterTitle(i,s);let l;if(s.display==="subMenu"&&t!=="toolPanel")l=this.insertFilterMenu(i,r).then(n=>n.getGui());else if(s.display==="subMenu"||s.display==="accordion"){const n=this.insertFilterGroup(i,r);l=h.resolve(n.getGui())}else l=h.resolve(i.getGui());return l})).then(i=>{i.forEach((e,s)=>{s>0&&this.appendChild(R('<div class="ag-filter-separator"></div>')),this.appendChild(e)}),this.filterGuis=i,this.lastOpenedInContainer=t}))}getFilterTitle(t,i){return i.title!=null?i.title:t instanceof I?t.getFilterTitle():"Filter"}destroyChildren(){this.guiDestroyFuncs.forEach(t=>t()),this.guiDestroyFuncs.length=0,this.filterGuis.length=0}insertFilterMenu(t,i){const e=this.createBean(new b);return e.init({menuItemDef:{name:i,subMenu:[],cssClasses:["ag-multi-filter-menu-item"],menuItem:S,menuItemParams:{cssClassPrefix:"ag-compact-menu-option",isCompact:!0}},level:0,isAnotherSubMenuOpen:()=>!1,childComponent:t,contextParams:{column:null,node:null,value:null}}).then(()=>{e.setParentComponent(this),this.guiDestroyFuncs.push(()=>this.destroyBean(e)),this.addManagedListeners(e,{menuItemActivated:r=>{this.lastActivatedMenuItem&&this.lastActivatedMenuItem!==r.menuItem&&this.lastActivatedMenuItem.deactivate(),this.lastActivatedMenuItem=r.menuItem}});const s=e.getGui();return e.addManagedElementListeners(s,{keydown:r=>{const{key:l}=r;switch(l){case f.UP:case f.RIGHT:case f.DOWN:case f.LEFT:r.preventDefault(),l===f.RIGHT&&e.openSubMenu(!0);break}},focusin:()=>e.activate(),focusout:()=>{!e.isSubMenuOpen()&&!e.isSubMenuOpening()&&e.deactivate()}}),e})}insertFilterGroup(t,i){const e=this.createBean(new O({title:i,cssIdentifier:"multi-filter"}));return this.guiDestroyFuncs.push(()=>this.destroyBean(e)),e.addItem(t.getGui()),e.toggleGroupExpand(!1),t.afterGuiAttached&&e.addManagedListeners(e,{expanded:()=>t.afterGuiAttached({container:this.lastOpenedInContainer,suppressFocus:!0,hidePopup:this.hidePopup})}),e}isFilterActive(){return this.filters.some(t=>t.isFilterActive())}getLastActiveFilterIndex(){return this.activeFilterIndices.length>0?this.activeFilterIndices[this.activeFilterIndices.length-1]:null}doesFilterPass(t,i){let e=!0;return this.filters.forEach(s=>{!e||s===i||!s.isFilterActive()||(e=s.doesFilterPass(t))}),e}getFilterType(){return"multi"}getModelFromUi(){return{filterType:this.getFilterType(),filterModels:this.filters.map(i=>{const e=i;return typeof e.getModelFromUi=="function"?e.getModelFromUi():null})}}getModel(){return this.isFilterActive()?{filterType:this.getFilterType(),filterModels:this.filters.map(i=>i.isFilterActive()?i.getModel():null)}:null}setModel(t){const i=(s,r)=>new h(l=>{const n=s.setModel(r);n?n.then(()=>l()):l()});let e=[];return t==null?e=this.filters.map((s,r)=>i(s,null).then(()=>{this.updateActiveList(r)})):this.filters.forEach((s,r)=>{const l=t.filterModels.length>r?t.filterModels[r]:null,n=i(s,l).then(()=>{this.updateActiveList(r)});e.push(n)}),h.all(e).then(()=>{})}applyModel(t="api"){let i=!1;return this.filters.forEach(e=>{e instanceof I&&(i=e.applyModel(t)||i)}),i}getChildFilterInstance(t){return this.filters[t]}afterGuiAttached(t){let i;t?(this.hidePopup=t.hidePopup,i=this.refreshGui(t.container)):(this.hidePopup=void 0,i=h.resolve());const e=t?.suppressFocus;i.then(()=>{const{filterDefs:s}=this;let r=!!e;s&&y(s,(u,o)=>{const c=o===0,g=u.display&&u.display!=="inline",M=e||!c||g,D={...t??{},suppressFocus:M},C=this.filters?.[o];if(C&&(this.executeFunctionIfExistsOnFilter(C,"afterGuiAttached",D),c&&!M&&(r=!0)),!e&&c&&g){const m=this.filterGuis[o];m&&(this.focusService.focusInto(m)||m.focus(),r=!0)}});const l=this.gos.getDocument(),n=this.gos.getActiveDomElement();!r&&(!n||n===l.body||this.getGui().contains(n))&&this.forceFocusOutOfContainer(!0)})}afterGuiDetached(){this.executeFunctionIfExists("afterGuiDetached")}onAnyFilterChanged(){this.executeFunctionIfExists("onAnyFilterChanged")}onNewRowsLoaded(){this.executeFunctionIfExists("onNewRowsLoaded")}destroy(){this.filters.forEach(t=>this.destroyBean(t)),this.filters.length=0,this.destroyChildren(),this.hidePopup=void 0,super.destroy()}executeFunctionIfExists(t,...i){y(this.filters,e=>{this.executeFunctionIfExistsOnFilter(e,t,i)})}executeFunctionIfExistsOnFilter(t,i,...e){const s=t[i];typeof s=="function"&&s.apply(t,e)}createFilter(t,i){const{filterModifiedCallback:e,doesRowPassOtherFilter:s}=this.params;let r;const l={...this.filterManager.createFilterParams(this.column,this.column.getColDef()),filterModifiedCallback:e,filterChangedCallback:o=>{this.executeWhenAllFiltersReady(()=>this.filterChanged(i,o))},doesRowPassOtherFilter:o=>s(o)&&this.doesFilterPass({node:o,data:o.data},r)},n=this.userComponentFactory.getFilterDetails(t,l,"agTextColumnFilter");if(!n)return null;const u=n.newAgStackInstance();return u&&u.then(o=>r=o),u}executeWhenAllFiltersReady(t){this.filters&&this.filters.length>0?t():this.afterFiltersReadyFuncs.push(t)}updateActiveList(t){const i=this.filters[t];T(this.activeFilterIndices,t),i.isFilterActive()&&this.activeFilterIndices.push(t)}filterChanged(t,i){this.updateActiveList(t),this.filterChangedCallback(i);const e=this.filters[t];this.filters.forEach(s=>{s!==e&&typeof s.onAnyFilterChanged=="function"&&s.onAnyFilterChanged()})}onFocusIn(t){this.lastActivatedMenuItem!=null&&!this.lastActivatedMenuItem.getGui().contains(t.target)&&(this.lastActivatedMenuItem.deactivate(),this.lastActivatedMenuItem=null)}getModelAsString(t){if(!this.filters||!t?.filterModels?.length)return"";const i=this.getLastActiveFilterIndex()??0;return this.filters[i].getModelAsString?.(t.filterModels[i])??""}};import{AgPromise as k,Component as B,_clearElement as N,_mergeDeep as U,_setDisplayed as p,getDefaultFloatingFilterType as _}from"@ag-grid-community/core";var W=class extends B{constructor(){super('<div class="ag-multi-floating-filter ag-floating-filter-input"></div>'),this.floatingFilters=[],this.compDetailsList=[]}wireBeans(a){this.userComponentFactory=a.userComponentFactory,this.filterManager=a.filterManager}init(a){this.params=a;const{compDetailsList:t}=this.getCompDetailsList(a);return this.setParams(t)}setParams(a){const t=[];return a.forEach(i=>{const e=i?.newAgStackInstance();e!=null&&(this.compDetailsList.push(i),t.push(e))}),k.all(t).then(i=>{i.forEach((e,s)=>{this.floatingFilters.push(e);const r=e.getGui();this.appendChild(r),s>0&&p(r,!1)})})}onParamsUpdated(a){this.refresh(a)}refresh(a){this.params=a;const{compDetailsList:t,floatingFilterParamsList:i}=this.getCompDetailsList(a);t.length===this.compDetailsList.length&&t.every((s,r)=>!this.filterManager?.areFilterCompsDifferent(this.compDetailsList[r],s))?i.forEach((s,r)=>{const l=this.floatingFilters[r];let n=!1;l.refresh&&l.refresh(s)!==null&&(n=!0),n||l.onParamsUpdated?.(s)}):(N(this.getGui()),this.destroyBeans(this.floatingFilters),this.floatingFilters=[],this.compDetailsList=[],this.setParams(t))}getCompDetailsList(a){const t=[],i=[],e=a.filterParams;return d.getFilterDefs(e).forEach((s,r)=>{const l={...a,parentFilterInstance:u=>{this.parentMultiFilterInstance(o=>{const c=o.getChildFilterInstance(r);c!=null&&u(c)})}};U(l.filterParams,s.filterParams);const n=this.getCompDetails(s,l);n&&(t.push(n),i.push(l))}),{compDetailsList:t,floatingFilterParamsList:i}}onParentModelChanged(a,t){t&&t.afterFloatingFilter||this.parentMultiFilterInstance(i=>{if(a==null)this.floatingFilters.forEach((e,s)=>{e.onParentModelChanged(null,t),p(e.getGui(),s===0)});else{const e=i.getLastActiveFilterIndex();this.floatingFilters.forEach((s,r)=>{const l=a.filterModels.length>r?a.filterModels[r]:null;s.onParentModelChanged(l,t);const n=e==null?r===0:r===e;p(s.getGui(),n)})}})}destroy(){this.destroyBeans(this.floatingFilters),this.floatingFilters.length=0,super.destroy()}getCompDetails(a,t){const i=_(this.frameworkOverrides,a,()=>this.filterManager.getDefaultFloatingFilter(this.params.column))??"agReadOnlyFloatingFilter";return this.userComponentFactory.getFloatingFilterCompDetails(a,t,i)}parentMultiFilterInstance(a){this.params.parentFilterInstance(t=>{if(!(t instanceof d))throw new Error("AG Grid - MultiFloatingFilterComp expects MultiFilter as its parent");a(t)})}},F="32.0.0",A={version:F,moduleName:`${v.MultiFilterModule}-core`,userComponents:[{name:"agMultiColumnFilter",classImp:d},{name:"agMenuItem",classImp:L}],dependantModules:[x,G]},H={version:F,moduleName:"@ag-grid-enterprise/multi-floating-filter",userComponents:[{name:"agMultiColumnFloatingFilter",classImp:W}],dependantModules:[A,E]},K={version:F,moduleName:v.MultiFilterModule,dependantModules:[A,H]};export{d as MultiFilter,K as MultiFilterModule};
