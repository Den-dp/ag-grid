{
  "version": 3,
  "sources": ["<stdin>"],
  "sourcesContent": ["// enterprise-modules/side-bar/src/sideBarModule.ts\nimport { ModuleNames as ModuleNames2 } from \"@ag-grid-community/core\";\nimport { EnterpriseCoreModule } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/side-bar/src/sideBar/common/toolPanelColDefService.ts\nimport {\n  AgProvidedColumnGroup,\n  BeanStub,\n  _includes,\n  _last,\n  _warnOnce,\n  isProvidedColumnGroup\n} from \"@ag-grid-community/core\";\nvar ToolPanelColDefService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"toolPanelColDefService\";\n    this.isColGroupDef = (colDef) => colDef && typeof colDef.children !== \"undefined\";\n    this.getId = (colDef) => {\n      return this.isColGroupDef(colDef) ? colDef.groupId : colDef.colId;\n    };\n  }\n  wireBeans(beans) {\n    this.columnModel = beans.columnModel;\n  }\n  createColumnTree(colDefs) {\n    const invalidColIds = [];\n    const createDummyColGroup = (abstractColDef, depth) => {\n      if (this.isColGroupDef(abstractColDef)) {\n        const groupDef = abstractColDef;\n        const groupId = typeof groupDef.groupId !== \"undefined\" ? groupDef.groupId : groupDef.headerName;\n        const group = new AgProvidedColumnGroup(groupDef, groupId, false, depth);\n        const children = [];\n        groupDef.children.forEach((def) => {\n          const child = createDummyColGroup(def, depth + 1);\n          if (child) {\n            children.push(child);\n          }\n        });\n        group.setChildren(children);\n        return group;\n      } else {\n        const colDef = abstractColDef;\n        const key = colDef.colId ? colDef.colId : colDef.field;\n        const column = this.columnModel.getColDefCol(key);\n        if (!column) {\n          invalidColIds.push(colDef);\n        }\n        return column;\n      }\n    };\n    const mappedResults = [];\n    colDefs.forEach((colDef) => {\n      const result = createDummyColGroup(colDef, 0);\n      if (result) {\n        mappedResults.push(result);\n      }\n    });\n    if (invalidColIds.length > 0) {\n      _warnOnce(\"unable to find grid columns for the supplied colDef(s):\", invalidColIds);\n    }\n    return mappedResults;\n  }\n  syncLayoutWithGrid(syncLayoutCallback) {\n    const leafPathTrees = this.getLeafPathTrees();\n    const mergedColumnTrees = this.mergeLeafPathTrees(leafPathTrees);\n    syncLayoutCallback(mergedColumnTrees);\n  }\n  getLeafPathTrees() {\n    const getLeafPathTree = (node, childDef) => {\n      let leafPathTree;\n      if (isProvidedColumnGroup(node)) {\n        if (node.isPadding()) {\n          leafPathTree = childDef;\n        } else {\n          const groupDef = Object.assign({}, node.getColGroupDef());\n          groupDef.groupId = node.getGroupId();\n          groupDef.children = [childDef];\n          leafPathTree = groupDef;\n        }\n      } else {\n        const colDef = Object.assign({}, node.getColDef());\n        colDef.colId = node.getColId();\n        leafPathTree = colDef;\n      }\n      const parent = node.getOriginalParent();\n      if (parent) {\n        return getLeafPathTree(parent, leafPathTree);\n      } else {\n        return leafPathTree;\n      }\n    };\n    const allGridColumns = this.columnModel.getCols();\n    const allPrimaryGridColumns = allGridColumns.filter((column) => {\n      const colDef = column.getColDef();\n      return column.isPrimary() && !colDef.showRowGroup;\n    });\n    return allPrimaryGridColumns.map((col) => getLeafPathTree(col, col.getColDef()));\n  }\n  mergeLeafPathTrees(leafPathTrees) {\n    const matchingRootGroupIds = (pathA, pathB) => {\n      const bothPathsAreGroups = this.isColGroupDef(pathA) && this.isColGroupDef(pathB);\n      return bothPathsAreGroups && this.getId(pathA) === this.getId(pathB);\n    };\n    const mergeTrees = (treeA, treeB) => {\n      if (!this.isColGroupDef(treeB)) {\n        return treeA;\n      }\n      const mergeResult = treeA;\n      const groupToMerge = treeB;\n      if (groupToMerge.children && groupToMerge.groupId) {\n        const added = this.addChildrenToGroup(mergeResult, groupToMerge.groupId, groupToMerge.children[0]);\n        if (added) {\n          return mergeResult;\n        }\n      }\n      groupToMerge.children.forEach((child) => mergeTrees(mergeResult, child));\n      return mergeResult;\n    };\n    const mergeColDefs = [];\n    for (let i = 1; i <= leafPathTrees.length; i++) {\n      const first = leafPathTrees[i - 1];\n      const second = leafPathTrees[i];\n      if (matchingRootGroupIds(first, second)) {\n        leafPathTrees[i] = mergeTrees(first, second);\n      } else {\n        mergeColDefs.push(first);\n      }\n    }\n    return mergeColDefs;\n  }\n  addChildrenToGroup(tree, groupId, colDef) {\n    const subGroupIsSplit = (currentSubGroup, currentSubGroupToAdd) => {\n      const existingChildIds = currentSubGroup.children.map(this.getId);\n      const childGroupAlreadyExists = _includes(existingChildIds, this.getId(currentSubGroupToAdd));\n      const lastChild = _last(currentSubGroup.children);\n      const lastChildIsDifferent = lastChild && this.getId(lastChild) !== this.getId(currentSubGroupToAdd);\n      return childGroupAlreadyExists && lastChildIsDifferent;\n    };\n    if (!this.isColGroupDef(tree)) {\n      return true;\n    }\n    const currentGroup = tree;\n    const groupToAdd = colDef;\n    if (subGroupIsSplit(currentGroup, groupToAdd)) {\n      currentGroup.children.push(groupToAdd);\n      return true;\n    }\n    if (currentGroup.groupId === groupId) {\n      const existingChildIds = currentGroup.children.map(this.getId);\n      const colDefAlreadyPresent = _includes(existingChildIds, this.getId(groupToAdd));\n      if (!colDefAlreadyPresent) {\n        currentGroup.children.push(groupToAdd);\n        return true;\n      }\n    }\n    currentGroup.children.forEach((subGroup) => this.addChildrenToGroup(subGroup, groupId, colDef));\n    return false;\n  }\n};\n\n// enterprise-modules/side-bar/src/sideBar/sideBarApi.ts\nimport { _unwrapUserComp } from \"@ag-grid-community/core\";\nfunction isSideBarVisible(beans) {\n  return beans.sideBarService?.getSideBarComp().isDisplayed() ?? false;\n}\nfunction setSideBarVisible(beans, show) {\n  beans.sideBarService?.getSideBarComp().setDisplayed(show);\n}\nfunction setSideBarPosition(beans, position) {\n  beans.sideBarService?.getSideBarComp().setSideBarPosition(position);\n}\nfunction openToolPanel(beans, key) {\n  beans.sideBarService?.getSideBarComp().openToolPanel(key, \"api\");\n}\nfunction closeToolPanel(beans) {\n  beans.sideBarService?.getSideBarComp().close(\"api\");\n}\nfunction getOpenedToolPanel(beans) {\n  return beans.sideBarService?.getSideBarComp().openedItem() ?? null;\n}\nfunction refreshToolPanel(beans) {\n  beans.sideBarService?.getSideBarComp().refresh();\n}\nfunction isToolPanelShowing(beans) {\n  return beans.sideBarService?.getSideBarComp().isToolPanelShowing() ?? false;\n}\nfunction getToolPanelInstance(beans, id) {\n  const comp = beans.sideBarService?.getSideBarComp().getToolPanelInstance(id);\n  return _unwrapUserComp(comp);\n}\nfunction getSideBar(beans) {\n  return beans.sideBarService?.getSideBarComp().getDef();\n}\n\n// enterprise-modules/side-bar/src/sideBar/sideBarService.ts\nimport { BeanStub as BeanStub2 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/side-bar/src/sideBar/agSideBar.ts\nimport {\n  Component as Component5,\n  KeyCode as KeyCode2,\n  ManagedFocusFeature,\n  ModuleNames,\n  ModuleRegistry,\n  RefPlaceholder as RefPlaceholder2,\n  _addFocusableContainerListener,\n  _removeFromParent,\n  _setAriaControls,\n  _warnOnce as _warnOnce4\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/side-bar/src/sideBar/agSideBarButtons.ts\nimport { Component as Component2, KeyCode, _clearElement, _last as _last2 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonComp.ts\nimport { Component, RefPlaceholder, _createIconNoSpan, _setAriaExpanded } from \"@ag-grid-community/core\";\nvar SideBarButtonComp = class extends Component {\n  constructor(toolPanelDef) {\n    super();\n    this.eToggleButton = RefPlaceholder;\n    this.eIconWrapper = RefPlaceholder;\n    this.eLabel = RefPlaceholder;\n    this.toolPanelDef = toolPanelDef;\n  }\n  getToolPanelId() {\n    return this.toolPanelDef.id;\n  }\n  postConstruct() {\n    const template = this.createTemplate();\n    this.setTemplate(template, []);\n    this.setLabel();\n    this.setIcon();\n    this.addManagedElementListeners(this.eToggleButton, { click: this.onButtonPressed.bind(this) });\n    this.eToggleButton.setAttribute(\"id\", `ag-${this.getCompId()}-button`);\n  }\n  createTemplate() {\n    const res = (\n      /* html */\n      `<div class=\"ag-side-button\" role=\"presentation\">\n                <button type=\"button\" data-ref=\"eToggleButton\" tabindex=\"-1\" role=\"tab\" aria-expanded=\"false\" class=\"ag-button ag-side-button-button\">\n                    <div data-ref=\"eIconWrapper\" class=\"ag-side-button-icon-wrapper\" aria-hidden=\"true\"></div>\n                    <span data-ref=\"eLabel\" class=\"ag-side-button-label\"></span>\n                </button>\n            </div>`\n    );\n    return res;\n  }\n  setLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const def = this.toolPanelDef;\n    const label = translate(def.labelKey, def.labelDefault);\n    this.eLabel.innerText = label;\n  }\n  setIcon() {\n    this.eIconWrapper.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(this.toolPanelDef.iconKey, this.gos));\n  }\n  onButtonPressed() {\n    this.dispatchLocalEvent({ type: \"toggleButtonClicked\" });\n  }\n  setSelected(selected) {\n    this.addOrRemoveCssClass(\"ag-selected\", selected);\n    _setAriaExpanded(this.eToggleButton, selected);\n  }\n  getButtonElement() {\n    return this.eToggleButton;\n  }\n};\n\n// enterprise-modules/side-bar/src/sideBar/agSideBarButtons.ts\nvar AgSideBarButtons = class extends Component2 {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-side-buttons\" role=\"tablist\"></div>`\n    );\n    this.buttonComps = [];\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.visibleColsService = beans.visibleColsService;\n  }\n  postConstruct() {\n    this.addManagedElementListeners(this.getFocusableElement(), { keydown: this.handleKeyDown.bind(this) });\n  }\n  handleKeyDown(e) {\n    if (e.key !== KeyCode.TAB || !e.shiftKey) {\n      return;\n    }\n    const lastColumn = _last2(this.visibleColsService.getAllCols());\n    if (this.focusService.focusGridView(lastColumn, true)) {\n      e.preventDefault();\n    }\n  }\n  setActiveButton(id) {\n    this.buttonComps.forEach((comp) => {\n      comp.setSelected(id === comp.getToolPanelId());\n    });\n  }\n  addButtonComp(def) {\n    const buttonComp = this.createBean(new SideBarButtonComp(def));\n    this.buttonComps.push(buttonComp);\n    this.appendChild(buttonComp);\n    buttonComp.addEventListener(\"toggleButtonClicked\", () => {\n      this.dispatchLocalEvent({\n        type: \"sideBarButtonClicked\",\n        toolPanelId: def.id\n      });\n    });\n    return buttonComp;\n  }\n  clearButtons() {\n    this.buttonComps = this.destroyBeans(this.buttonComps);\n    _clearElement(this.getGui());\n    super.destroy();\n  }\n  destroy() {\n    this.clearButtons();\n    super.destroy();\n  }\n};\nvar AgSideBarButtonsSelector = {\n  selector: \"AG-SIDE-BAR-BUTTONS\",\n  component: AgSideBarButtons\n};\n\n// enterprise-modules/side-bar/src/sideBar/sideBarDefParser.ts\nimport { _warnOnce as _warnOnce2 } from \"@ag-grid-community/core\";\nvar DEFAULT_COLUMN_COMP = {\n  id: \"columns\",\n  labelDefault: \"Columns\",\n  labelKey: \"columns\",\n  iconKey: \"columns\",\n  toolPanel: \"agColumnsToolPanel\"\n};\nvar DEFAULT_FILTER_COMP = {\n  id: \"filters\",\n  labelDefault: \"Filters\",\n  labelKey: \"filters\",\n  iconKey: \"filter\",\n  toolPanel: \"agFiltersToolPanel\"\n};\nvar DEFAULT_BY_KEY = {\n  columns: DEFAULT_COLUMN_COMP,\n  filters: DEFAULT_FILTER_COMP\n};\nfunction parseSideBarDef(toParse) {\n  if (!toParse) {\n    return void 0;\n  }\n  if (toParse === true) {\n    return {\n      toolPanels: [DEFAULT_COLUMN_COMP, DEFAULT_FILTER_COMP],\n      defaultToolPanel: \"columns\"\n    };\n  }\n  if (typeof toParse === \"string\") {\n    return parseSideBarDef([toParse]);\n  }\n  if (Array.isArray(toParse)) {\n    const comps = [];\n    toParse.forEach((key) => {\n      const lookupResult = DEFAULT_BY_KEY[key];\n      if (!lookupResult) {\n        logMissingKey(key);\n        return;\n      }\n      comps.push(lookupResult);\n    });\n    if (comps.length === 0) {\n      return void 0;\n    }\n    return {\n      toolPanels: comps,\n      defaultToolPanel: comps[0].id\n    };\n  }\n  const result = {\n    toolPanels: parseComponents(toParse.toolPanels),\n    defaultToolPanel: toParse.defaultToolPanel,\n    hiddenByDefault: toParse.hiddenByDefault,\n    position: toParse.position\n  };\n  return result;\n}\nfunction logMissingKey(key) {\n  _warnOnce2(\n    `the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(DEFAULT_BY_KEY).join(\",\")}`\n  );\n}\nfunction parseComponents(from) {\n  const result = [];\n  if (!from) {\n    return result;\n  }\n  from.forEach((it) => {\n    let toAdd = null;\n    if (typeof it === \"string\") {\n      const lookupResult = DEFAULT_BY_KEY[it];\n      if (!lookupResult) {\n        logMissingKey(it);\n        return;\n      }\n      toAdd = lookupResult;\n    } else {\n      toAdd = it;\n    }\n    result.push(toAdd);\n  });\n  return result;\n}\n\n// enterprise-modules/side-bar/src/sideBar/toolPanelWrapper.ts\nimport { Component as Component4, _warnOnce as _warnOnce3 } from \"@ag-grid-community/core\";\n\n// enterprise-modules/side-bar/src/sideBar/agHorizontalResize.ts\nimport { Component as Component3 } from \"@ag-grid-community/core\";\nvar AgHorizontalResize = class extends Component3 {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tool-panel-horizontal-resize\"></div>`\n    );\n    this.minWidth = 100;\n    this.maxWidth = null;\n  }\n  wireBeans(beans) {\n    this.horizontalResizeService = beans.horizontalResizeService;\n  }\n  setElementToResize(elementToResize) {\n    this.elementToResize = elementToResize;\n  }\n  postConstruct() {\n    const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.getGui(),\n      dragStartPixels: 1,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this),\n      onResizeEnd: this.onResizeEnd.bind(this)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    this.setInverted(this.gos.get(\"enableRtl\"));\n  }\n  dispatchResizeEvent(start, end, width) {\n    const event = {\n      type: \"toolPanelSizeChanged\",\n      width,\n      started: start,\n      ended: end\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  onResizeStart() {\n    this.startingWidth = this.elementToResize.offsetWidth;\n    this.dispatchResizeEvent(true, false, this.startingWidth);\n  }\n  onResizeEnd(delta) {\n    return this.onResizing(delta, true);\n  }\n  onResizing(delta, isEnd = false) {\n    const direction = this.inverted ? -1 : 1;\n    let newWidth = Math.max(this.minWidth, Math.floor(this.startingWidth - delta * direction));\n    if (this.maxWidth != null) {\n      newWidth = Math.min(this.maxWidth, newWidth);\n    }\n    this.elementToResize.style.width = `${newWidth}px`;\n    this.dispatchResizeEvent(false, isEnd, newWidth);\n  }\n  setInverted(inverted) {\n    this.inverted = inverted;\n  }\n  setMaxWidth(value) {\n    this.maxWidth = value;\n  }\n  setMinWidth(value) {\n    if (value != null) {\n      this.minWidth = value;\n    } else {\n      this.minWidth = 100;\n    }\n  }\n};\n\n// enterprise-modules/side-bar/src/sideBar/toolPanelWrapper.ts\nvar ToolPanelWrapper = class extends Component4 {\n  wireBeans(beans) {\n    this.userComponentFactory = beans.userComponentFactory;\n  }\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tool-panel-wrapper\" role=\"tabpanel\"/>`\n    );\n  }\n  postConstruct() {\n    const eGui = this.getGui();\n    const resizeBar = this.resizeBar = this.createManagedBean(new AgHorizontalResize());\n    eGui.setAttribute(\"id\", `ag-${this.getCompId()}`);\n    resizeBar.setElementToResize(eGui);\n    this.appendChild(resizeBar);\n  }\n  getToolPanelId() {\n    return this.toolPanelId;\n  }\n  setToolPanelDef(toolPanelDef, params) {\n    const { id, minWidth, maxWidth, width } = toolPanelDef;\n    this.toolPanelId = id;\n    this.width = width;\n    const compDetails = this.userComponentFactory.getToolPanelCompDetails(toolPanelDef, params);\n    const componentPromise = compDetails.newAgStackInstance();\n    this.params = compDetails.params;\n    if (componentPromise == null) {\n      _warnOnce3(`error processing tool panel component ${id}. You need to specify 'toolPanel'`);\n      return;\n    }\n    componentPromise.then(this.setToolPanelComponent.bind(this));\n    if (minWidth != null) {\n      this.resizeBar.setMinWidth(minWidth);\n    }\n    if (maxWidth != null) {\n      this.resizeBar.setMaxWidth(maxWidth);\n    }\n  }\n  setToolPanelComponent(compInstance) {\n    this.toolPanelCompInstance = compInstance;\n    this.appendChild(compInstance.getGui());\n    this.addDestroyFunc(() => {\n      this.destroyBean(compInstance);\n    });\n    if (this.width) {\n      this.getGui().style.width = `${this.width}px`;\n    }\n  }\n  getToolPanelInstance() {\n    return this.toolPanelCompInstance;\n  }\n  setResizerSizerSide(side) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const isLeft = side === \"left\";\n    const inverted = isRtl ? isLeft : !isLeft;\n    this.resizeBar.setInverted(inverted);\n  }\n  refresh() {\n    this.toolPanelCompInstance?.refresh(this.params);\n  }\n};\n\n// enterprise-modules/side-bar/src/sideBar/agSideBar.ts\nvar AgSideBar = class extends Component5 {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-side-bar ag-unselectable\">\n            <ag-side-bar-buttons data-ref=\"sideBarButtons\"></ag-side-bar-buttons>\n        </div>`,\n      [AgSideBarButtonsSelector]\n    );\n    this.sideBarButtons = RefPlaceholder2;\n    this.toolPanelWrappers = [];\n  }\n  wireBeans(beans) {\n    this.focusService = beans.focusService;\n    this.filterManager = beans.filterManager;\n    this.sideBarService = beans.sideBarService;\n  }\n  postConstruct() {\n    this.sideBarButtons.addEventListener(\"sideBarButtonClicked\", this.onToolPanelButtonClicked.bind(this));\n    const { sideBar: sideBarState } = this.gos.get(\"initialState\") ?? {};\n    this.setSideBarDef({\n      sideBarDef: parseSideBarDef(this.gos.get(\"sideBar\")),\n      sideBarState\n    });\n    this.addManagedPropertyListener(\"sideBar\", this.onSideBarUpdated.bind(this));\n    this.sideBarService.registerSideBarComp(this);\n    const eGui = this.getFocusableElement();\n    this.createManagedBean(\n      new ManagedFocusFeature(eGui, {\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this)\n      })\n    );\n    _addFocusableContainerListener(this, eGui, this.focusService);\n  }\n  onTabKeyDown(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const { focusService, sideBarButtons } = this;\n    const eGui = this.getGui();\n    const sideBarGui = sideBarButtons.getGui();\n    const activeElement = this.gos.getActiveDomElement();\n    const openPanel = eGui.querySelector(\".ag-tool-panel-wrapper:not(.ag-hidden)\");\n    const target = e.target;\n    if (!openPanel) {\n      return;\n    }\n    if (sideBarGui.contains(activeElement)) {\n      if (focusService.focusInto(openPanel, e.shiftKey)) {\n        e.preventDefault();\n      }\n      return;\n    }\n    if (!e.shiftKey) {\n      return;\n    }\n    let nextEl = null;\n    if (openPanel.contains(activeElement)) {\n      nextEl = this.focusService.findNextFocusableElement(openPanel, void 0, true);\n    } else if (focusService.isTargetUnderManagedComponent(openPanel, target) && e.shiftKey) {\n      nextEl = this.focusService.findFocusableElementBeforeTabGuard(openPanel, target);\n    }\n    if (!nextEl) {\n      nextEl = sideBarGui.querySelector(\".ag-selected button\");\n    }\n    if (nextEl && nextEl !== e.target) {\n      e.preventDefault();\n      nextEl.focus();\n    }\n  }\n  handleKeyDown(e) {\n    const currentButton = this.gos.getActiveDomElement();\n    if (!this.sideBarButtons.getGui().contains(currentButton)) {\n      return;\n    }\n    const sideBarGui = this.sideBarButtons.getGui();\n    const buttons = Array.prototype.slice.call(sideBarGui.querySelectorAll(\".ag-side-button\"));\n    const currentPos = buttons.findIndex((button) => button.contains(currentButton));\n    let nextPos = null;\n    switch (e.key) {\n      case KeyCode2.LEFT:\n      case KeyCode2.UP:\n        nextPos = Math.max(0, currentPos - 1);\n        break;\n      case KeyCode2.RIGHT:\n      case KeyCode2.DOWN:\n        nextPos = Math.min(currentPos + 1, buttons.length - 1);\n        break;\n    }\n    if (nextPos === null) {\n      return;\n    }\n    const innerButton = buttons[nextPos].querySelector(\"button\");\n    if (innerButton) {\n      innerButton.focus();\n      e.preventDefault();\n    }\n  }\n  onToolPanelButtonClicked(event) {\n    const id = event.toolPanelId;\n    const openedItem = this.openedItem();\n    if (openedItem === id) {\n      this.openToolPanel(void 0, \"sideBarButtonClicked\");\n    } else {\n      this.openToolPanel(id, \"sideBarButtonClicked\");\n    }\n  }\n  clearDownUi() {\n    this.sideBarButtons.clearButtons();\n    this.destroyToolPanelWrappers();\n  }\n  setSideBarDef({\n    sideBarDef,\n    sideBarState,\n    existingToolPanelWrappers\n  }) {\n    this.setDisplayed(false);\n    this.sideBar = sideBarDef;\n    if (!!this.sideBar && !!this.sideBar.toolPanels) {\n      const toolPanelDefs = this.sideBar.toolPanels;\n      this.createToolPanelsAndSideButtons(toolPanelDefs, sideBarState, existingToolPanelWrappers);\n      if (!this.toolPanelWrappers.length) {\n        return;\n      }\n      const shouldDisplaySideBar = sideBarState ? sideBarState.visible : !this.sideBar.hiddenByDefault;\n      this.setDisplayed(shouldDisplaySideBar);\n      this.setSideBarPosition(sideBarState ? sideBarState.position : this.sideBar.position);\n      if (shouldDisplaySideBar) {\n        if (sideBarState) {\n          const { openToolPanel: openToolPanel2 } = sideBarState;\n          if (openToolPanel2) {\n            this.openToolPanel(openToolPanel2, \"sideBarInitializing\");\n          }\n        } else {\n          this.openToolPanel(this.sideBar.defaultToolPanel, \"sideBarInitializing\");\n        }\n      }\n    }\n  }\n  getDef() {\n    return this.sideBar;\n  }\n  setSideBarPosition(position) {\n    if (!position) {\n      position = \"right\";\n    }\n    this.position = position;\n    const isLeft = position === \"left\";\n    const resizerSide = isLeft ? \"right\" : \"left\";\n    this.addOrRemoveCssClass(\"ag-side-bar-left\", isLeft);\n    this.addOrRemoveCssClass(\"ag-side-bar-right\", !isLeft);\n    this.toolPanelWrappers.forEach((wrapper) => {\n      wrapper.setResizerSizerSide(resizerSide);\n    });\n    this.eventService.dispatchEvent({ type: \"sideBarUpdated\" });\n    return this;\n  }\n  setDisplayed(displayed, options) {\n    super.setDisplayed(displayed, options);\n    this.eventService.dispatchEvent({ type: \"sideBarUpdated\" });\n  }\n  getState() {\n    const toolPanels = {};\n    this.toolPanelWrappers.forEach((wrapper) => {\n      toolPanels[wrapper.getToolPanelId()] = wrapper.getToolPanelInstance()?.getState?.();\n    });\n    return {\n      visible: this.isDisplayed(),\n      position: this.position,\n      openToolPanel: this.openedItem(),\n      toolPanels\n    };\n  }\n  createToolPanelsAndSideButtons(defs, sideBarState, existingToolPanelWrappers) {\n    for (const def of defs) {\n      this.createToolPanelAndSideButton(\n        def,\n        sideBarState?.toolPanels?.[def.id],\n        existingToolPanelWrappers?.[def.id]\n      );\n    }\n  }\n  validateDef(def) {\n    if (def.id == null) {\n      _warnOnce4(\n        `please review all your toolPanel components, it seems like at least one of them doesn't have an id`\n      );\n      return false;\n    }\n    if (def.toolPanel === \"agColumnsToolPanel\") {\n      const moduleMissing = !ModuleRegistry.__assertRegistered(\n        ModuleNames.ColumnsToolPanelModule,\n        \"Column Tool Panel\",\n        this.gridId\n      );\n      if (moduleMissing) {\n        return false;\n      }\n    }\n    if (def.toolPanel === \"agFiltersToolPanel\") {\n      const moduleMissing = !ModuleRegistry.__assertRegistered(\n        ModuleNames.FiltersToolPanelModule,\n        \"Filters Tool Panel\",\n        this.gridId\n      );\n      if (moduleMissing) {\n        return false;\n      }\n      if (this.filterManager?.isAdvancedFilterEnabled()) {\n        _warnOnce4(\n          \"Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled.\"\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n  createToolPanelAndSideButton(def, initialState, existingToolPanelWrapper) {\n    if (!this.validateDef(def)) {\n      return;\n    }\n    const button = this.sideBarButtons.addButtonComp(def);\n    let wrapper;\n    if (existingToolPanelWrapper) {\n      wrapper = existingToolPanelWrapper;\n    } else {\n      wrapper = this.createBean(new ToolPanelWrapper());\n      wrapper.setToolPanelDef(def, {\n        initialState,\n        onStateUpdated: () => this.eventService.dispatchEvent({ type: \"sideBarUpdated\" })\n      });\n    }\n    wrapper.setDisplayed(false);\n    const wrapperGui = wrapper.getGui();\n    this.appendChild(wrapperGui);\n    this.toolPanelWrappers.push(wrapper);\n    _setAriaControls(button.getButtonElement(), wrapperGui);\n  }\n  refresh() {\n    this.toolPanelWrappers.forEach((wrapper) => wrapper.refresh());\n  }\n  openToolPanel(key, source = \"api\") {\n    const currentlyOpenedKey = this.openedItem();\n    if (currentlyOpenedKey === key) {\n      return;\n    }\n    this.toolPanelWrappers.forEach((wrapper) => {\n      const show = key === wrapper.getToolPanelId();\n      wrapper.setDisplayed(show);\n    });\n    const newlyOpenedKey = this.openedItem();\n    const openToolPanelChanged = currentlyOpenedKey !== newlyOpenedKey;\n    if (openToolPanelChanged) {\n      this.sideBarButtons.setActiveButton(key);\n      this.raiseToolPanelVisibleEvent(key, currentlyOpenedKey ?? void 0, source);\n    }\n  }\n  getToolPanelInstance(key) {\n    const toolPanelWrapper = this.toolPanelWrappers.filter((toolPanel) => toolPanel.getToolPanelId() === key)[0];\n    if (!toolPanelWrapper) {\n      _warnOnce4(`unable to lookup Tool Panel as invalid key supplied: ${key}`);\n      return;\n    }\n    return toolPanelWrapper.getToolPanelInstance();\n  }\n  raiseToolPanelVisibleEvent(key, previousKey, source) {\n    const switchingToolPanel = !!key && !!previousKey;\n    if (previousKey) {\n      const event = {\n        type: \"toolPanelVisibleChanged\",\n        source,\n        key: previousKey,\n        visible: false,\n        switchingToolPanel\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    if (key) {\n      const event = {\n        type: \"toolPanelVisibleChanged\",\n        source,\n        key,\n        visible: true,\n        switchingToolPanel\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  close(source = \"api\") {\n    this.openToolPanel(void 0, source);\n  }\n  isToolPanelShowing() {\n    return !!this.openedItem();\n  }\n  openedItem() {\n    let activeToolPanel = null;\n    this.toolPanelWrappers.forEach((wrapper) => {\n      if (wrapper.isDisplayed()) {\n        activeToolPanel = wrapper.getToolPanelId();\n      }\n    });\n    return activeToolPanel;\n  }\n  onSideBarUpdated() {\n    const sideBarDef = parseSideBarDef(this.gos.get(\"sideBar\"));\n    const existingToolPanelWrappers = {};\n    if (sideBarDef && this.sideBar) {\n      sideBarDef.toolPanels?.forEach((toolPanelDef) => {\n        const { id } = toolPanelDef;\n        if (!id) {\n          return;\n        }\n        const existingToolPanelDef = this.sideBar.toolPanels?.find(\n          (toolPanelDefToCheck) => toolPanelDefToCheck.id === id\n        );\n        if (!existingToolPanelDef || toolPanelDef.toolPanel !== existingToolPanelDef.toolPanel) {\n          return;\n        }\n        const toolPanelWrapper = this.toolPanelWrappers.find((toolPanel) => toolPanel.getToolPanelId() === id);\n        if (!toolPanelWrapper) {\n          return;\n        }\n        const params = this.gos.addGridCommonParams({\n          ...toolPanelDef.toolPanelParams ?? {},\n          onStateUpdated: () => this.eventService.dispatchEvent({ type: \"sideBarUpdated\" })\n        });\n        const hasRefreshed = toolPanelWrapper.getToolPanelInstance()?.refresh(params);\n        if (hasRefreshed !== true) {\n          return;\n        }\n        this.toolPanelWrappers = this.toolPanelWrappers.filter((toolPanel) => toolPanel !== toolPanelWrapper);\n        _removeFromParent(toolPanelWrapper.getGui());\n        existingToolPanelWrappers[id] = toolPanelWrapper;\n      });\n    }\n    this.clearDownUi();\n    this.setSideBarDef({ sideBarDef, existingToolPanelWrappers });\n  }\n  destroyToolPanelWrappers() {\n    this.toolPanelWrappers.forEach((wrapper) => {\n      _removeFromParent(wrapper.getGui());\n      this.destroyBean(wrapper);\n    });\n    this.toolPanelWrappers.length = 0;\n  }\n  destroy() {\n    this.destroyToolPanelWrappers();\n    super.destroy();\n  }\n};\nvar AgSideBarSelector = {\n  selector: \"AG-SIDE-BAR\",\n  component: AgSideBar\n};\n\n// enterprise-modules/side-bar/src/sideBar/sideBarService.ts\nvar SideBarService = class extends BeanStub2 {\n  constructor() {\n    super(...arguments);\n    this.beanName = \"sideBarService\";\n  }\n  registerSideBarComp(sideBarComp) {\n    this.sideBarComp = sideBarComp;\n  }\n  getSideBarComp() {\n    return this.sideBarComp;\n  }\n  getSideBarSelector() {\n    return AgSideBarSelector;\n  }\n};\n\n// enterprise-modules/side-bar/src/version.ts\nvar VERSION = \"32.0.0\";\n\n// enterprise-modules/side-bar/src/sideBarModule.ts\nvar SideBarCoreModule = {\n  version: VERSION,\n  moduleName: `${ModuleNames2.SideBarModule}-core`,\n  beans: [ToolPanelColDefService, SideBarService],\n  dependantModules: [EnterpriseCoreModule]\n};\nvar SideBarApiModule = {\n  version: VERSION,\n  moduleName: `${ModuleNames2.SideBarModule}-api`,\n  apiFunctions: {\n    isSideBarVisible,\n    setSideBarVisible,\n    setSideBarPosition,\n    openToolPanel,\n    closeToolPanel,\n    getOpenedToolPanel,\n    refreshToolPanel,\n    isToolPanelShowing,\n    getToolPanelInstance,\n    getSideBar\n  },\n  dependantModules: [SideBarCoreModule]\n};\nvar SideBarModule = {\n  version: VERSION,\n  moduleName: ModuleNames2.SideBarModule,\n  dependantModules: [SideBarCoreModule, SideBarApiModule]\n};\nexport {\n  SideBarModule,\n  ToolPanelColDefService\n};\n"],
  "mappings": "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",
  "names": ["ModuleNames2", "EnterpriseCoreModule", "AgProvidedColumnGroup", "BeanStub", "_includes", "_last", "_warnOnce", "isProvidedColumnGroup", "ToolPanelColDefService", "colDef", "beans", "colDefs", "invalidColIds", "createDummyColGroup", "abstractColDef", "depth", "groupDef", "groupId", "group", "children", "def", "child", "key", "column", "mappedResults", "result", "syncLayoutCallback", "leafPathTrees", "mergedColumnTrees", "getLeafPathTree", "node", "childDef", "leafPathTree", "parent", "col", "matchingRootGroupIds", "pathA", "pathB", "mergeTrees", "treeA", "treeB", "mergeResult", "groupToMerge", "mergeColDefs", "i", "first", "second", "tree", "subGroupIsSplit", "currentSubGroup", "currentSubGroupToAdd", "existingChildIds", "childGroupAlreadyExists", "lastChild", "lastChildIsDifferent", "currentGroup", "groupToAdd", "subGroup", "_unwrapUserComp", "isSideBarVisible", "setSideBarVisible", "show", "setSideBarPosition", "position", "openToolPanel", "closeToolPanel", "getOpenedToolPanel", "refreshToolPanel", "isToolPanelShowing", "getToolPanelInstance", "id", "comp", "getSideBar", "BeanStub2", "Component5", "KeyCode2", "ManagedFocusFeature", "ModuleNames", "ModuleRegistry", "RefPlaceholder2", "_addFocusableContainerListener", "_removeFromParent", "_setAriaControls", "_warnOnce4", "Component2", "KeyCode", "_clearElement", "_last2", "Component", "RefPlaceholder", "_createIconNoSpan", "_setAriaExpanded", "SideBarButtonComp", "toolPanelDef", "template", "translate", "label", "selected", "AgSideBarButtons", "lastColumn", "buttonComp", "AgSideBarButtonsSelector", "_warnOnce2", "DEFAULT_COLUMN_COMP", "DEFAULT_FILTER_COMP", "DEFAULT_BY_KEY", "parseSideBarDef", "toParse", "comps", "lookupResult", "logMissingKey", "parseComponents", "from", "it", "toAdd", "Component4", "_warnOnce3", "Component3", "AgHorizontalResize", "elementToResize", "finishedWithResizeFunc", "start", "end", "width", "event", "delta", "isEnd", "direction", "newWidth", "inverted", "value", "ToolPanelWrapper", "eGui", "resizeBar", "params", "minWidth", "maxWidth", "compDetails", "componentPromise", "compInstance", "side", "isRtl", "isLeft", "AgSideBar", "sideBarState", "focusService", "sideBarButtons", "sideBarGui", "activeElement", "openPanel", "target", "nextEl", "currentButton", "buttons", "currentPos", "button", "nextPos", "innerButton", "sideBarDef", "existingToolPanelWrappers", "toolPanelDefs", "shouldDisplaySideBar", "openToolPanel2", "resizerSide", "wrapper", "displayed", "options", "toolPanels", "defs", "initialState", "existingToolPanelWrapper", "wrapperGui", "source", "currentlyOpenedKey", "newlyOpenedKey", "toolPanelWrapper", "toolPanel", "previousKey", "switchingToolPanel", "activeToolPanel", "existingToolPanelDef", "toolPanelDefToCheck", "AgSideBarSelector", "SideBarService", "sideBarComp", "VERSION", "SideBarCoreModule", "SideBarApiModule", "SideBarModule"]
}
