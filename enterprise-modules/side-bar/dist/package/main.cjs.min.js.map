{
  "version": 3,
  "sources": ["<stdin>"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// enterprise-modules/side-bar/src/main.ts\nvar main_exports = {};\n__export(main_exports, {\n  SideBarModule: () => SideBarModule,\n  ToolPanelColDefService: () => ToolPanelColDefService\n});\nmodule.exports = __toCommonJS(main_exports);\n\n// enterprise-modules/side-bar/src/sideBarModule.ts\nvar import_core8 = require(\"@ag-grid-community/core\");\nvar import_core9 = require(\"@ag-grid-enterprise/core\");\n\n// enterprise-modules/side-bar/src/sideBar/horizontalResizeComp.ts\nvar import_core = require(\"@ag-grid-community/core\");\nvar HorizontalResizeComp = class extends import_core.Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tool-panel-horizontal-resize\"></div>`\n    );\n    this.minWidth = 100;\n    this.maxWidth = null;\n  }\n  setElementToResize(elementToResize) {\n    this.elementToResize = elementToResize;\n  }\n  postConstruct() {\n    const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.getGui(),\n      dragStartPixels: 1,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this),\n      onResizeEnd: this.onResizeEnd.bind(this)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    this.setInverted(this.gos.get(\"enableRtl\"));\n  }\n  dispatchResizeEvent(start, end, width) {\n    const event = {\n      type: import_core.Events.EVENT_TOOL_PANEL_SIZE_CHANGED,\n      width,\n      started: start,\n      ended: end\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  onResizeStart() {\n    this.startingWidth = this.elementToResize.offsetWidth;\n    this.dispatchResizeEvent(true, false, this.startingWidth);\n  }\n  onResizeEnd(delta) {\n    return this.onResizing(delta, true);\n  }\n  onResizing(delta, isEnd = false) {\n    const direction = this.inverted ? -1 : 1;\n    let newWidth = Math.max(this.minWidth, Math.floor(this.startingWidth - delta * direction));\n    if (this.maxWidth != null) {\n      newWidth = Math.min(this.maxWidth, newWidth);\n    }\n    this.elementToResize.style.width = `${newWidth}px`;\n    this.dispatchResizeEvent(false, isEnd, newWidth);\n  }\n  setInverted(inverted) {\n    this.inverted = inverted;\n  }\n  setMaxWidth(value) {\n    this.maxWidth = value;\n  }\n  setMinWidth(value) {\n    if (value != null) {\n      this.minWidth = value;\n    } else {\n      this.minWidth = 100;\n    }\n  }\n};\n__decorateClass([\n  (0, import_core.Autowired)(\"horizontalResizeService\")\n], HorizontalResizeComp.prototype, \"horizontalResizeService\", 2);\n__decorateClass([\n  import_core.PostConstruct\n], HorizontalResizeComp.prototype, \"postConstruct\", 1);\n\n// enterprise-modules/side-bar/src/sideBar/sideBarComp.ts\nvar import_core5 = require(\"@ag-grid-community/core\");\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonsComp.ts\nvar import_core3 = require(\"@ag-grid-community/core\");\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonComp.ts\nvar import_core2 = require(\"@ag-grid-community/core\");\nvar _SideBarButtonComp = class _SideBarButtonComp extends import_core2.Component {\n  constructor(toolPanelDef) {\n    super();\n    this.toolPanelDef = toolPanelDef;\n  }\n  getToolPanelId() {\n    return this.toolPanelDef.id;\n  }\n  postConstruct() {\n    const template = this.createTemplate();\n    this.setTemplate(template);\n    this.setLabel();\n    this.setIcon();\n    this.addManagedListener(this.eToggleButton, \"click\", this.onButtonPressed.bind(this));\n    this.eToggleButton.setAttribute(\"id\", `ag-${this.getCompId()}-button`);\n  }\n  createTemplate() {\n    const res = (\n      /* html */\n      `<div class=\"ag-side-button\" role=\"presentation\">\n                <button type=\"button\" ref=\"eToggleButton\" tabindex=\"-1\" role=\"tab\" aria-expanded=\"false\" class=\"ag-button ag-side-button-button\">\n                    <div ref=\"eIconWrapper\" class=\"ag-side-button-icon-wrapper\" aria-hidden=\"true\"></div>\n                    <span ref =\"eLabel\" class=\"ag-side-button-label\"></span>\n                </button>\n            </div>`\n    );\n    return res;\n  }\n  setLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const def = this.toolPanelDef;\n    const label = translate(def.labelKey, def.labelDefault);\n    this.eLabel.innerText = label;\n  }\n  setIcon() {\n    this.eIconWrapper.insertAdjacentElement(\"afterbegin\", import_core2._.createIconNoSpan(this.toolPanelDef.iconKey, this.gos));\n  }\n  onButtonPressed() {\n    this.dispatchEvent({ type: _SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED });\n  }\n  setSelected(selected) {\n    this.addOrRemoveCssClass(\"ag-selected\", selected);\n    import_core2._.setAriaExpanded(this.eToggleButton, selected);\n  }\n  getButtonElement() {\n    return this.eToggleButton;\n  }\n};\n_SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED = \"toggleButtonClicked\";\n__decorateClass([\n  (0, import_core2.RefSelector)(\"eToggleButton\")\n], _SideBarButtonComp.prototype, \"eToggleButton\", 2);\n__decorateClass([\n  (0, import_core2.RefSelector)(\"eIconWrapper\")\n], _SideBarButtonComp.prototype, \"eIconWrapper\", 2);\n__decorateClass([\n  (0, import_core2.RefSelector)(\"eLabel\")\n], _SideBarButtonComp.prototype, \"eLabel\", 2);\n__decorateClass([\n  import_core2.PostConstruct\n], _SideBarButtonComp.prototype, \"postConstruct\", 1);\nvar SideBarButtonComp = _SideBarButtonComp;\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonsComp.ts\nvar _SideBarButtonsComp = class _SideBarButtonsComp extends import_core3.Component {\n  constructor() {\n    super(_SideBarButtonsComp.TEMPLATE);\n    this.buttonComps = [];\n  }\n  postConstruct() {\n    this.addManagedListener(this.getFocusableElement(), \"keydown\", this.handleKeyDown.bind(this));\n  }\n  handleKeyDown(e) {\n    if (e.key !== import_core3.KeyCode.TAB || !e.shiftKey) {\n      return;\n    }\n    const lastColumn = import_core3._.last(this.columnModel.getAllDisplayedColumns());\n    if (this.focusService.focusGridView(lastColumn, true)) {\n      e.preventDefault();\n    }\n  }\n  setActiveButton(id) {\n    this.buttonComps.forEach((comp) => {\n      comp.setSelected(id === comp.getToolPanelId());\n    });\n  }\n  addButtonComp(def) {\n    const buttonComp = this.createBean(new SideBarButtonComp(def));\n    this.buttonComps.push(buttonComp);\n    this.appendChild(buttonComp);\n    buttonComp.addEventListener(SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED, () => {\n      this.dispatchEvent({\n        type: _SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED,\n        toolPanelId: def.id\n      });\n    });\n    return buttonComp;\n  }\n  clearButtons() {\n    this.buttonComps = this.destroyBeans(this.buttonComps);\n    import_core3._.clearElement(this.getGui());\n  }\n};\n_SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED = \"sideBarButtonClicked\";\n_SideBarButtonsComp.TEMPLATE = /* html */\n`<div class=\"ag-side-buttons\" role=\"tablist\"></div>`;\n__decorateClass([\n  (0, import_core3.Autowired)(\"focusService\")\n], _SideBarButtonsComp.prototype, \"focusService\", 2);\n__decorateClass([\n  (0, import_core3.Autowired)(\"columnModel\")\n], _SideBarButtonsComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  import_core3.PostConstruct\n], _SideBarButtonsComp.prototype, \"postConstruct\", 1);\n__decorateClass([\n  import_core3.PreDestroy\n], _SideBarButtonsComp.prototype, \"clearButtons\", 1);\nvar SideBarButtonsComp = _SideBarButtonsComp;\n\n// enterprise-modules/side-bar/src/sideBar/sideBarDefParser.ts\nvar _SideBarDefParser = class _SideBarDefParser {\n  static parse(toParse) {\n    if (!toParse) {\n      return void 0;\n    }\n    if (toParse === true) {\n      return {\n        toolPanels: [\n          _SideBarDefParser.DEFAULT_COLUMN_COMP,\n          _SideBarDefParser.DEFAULT_FILTER_COMP\n        ],\n        defaultToolPanel: \"columns\"\n      };\n    }\n    if (typeof toParse === \"string\") {\n      return _SideBarDefParser.parse([toParse]);\n    }\n    if (Array.isArray(toParse)) {\n      const comps = [];\n      toParse.forEach((key) => {\n        const lookupResult = _SideBarDefParser.DEFAULT_BY_KEY[key];\n        if (!lookupResult) {\n          console.warn(`AG Grid: the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(_SideBarDefParser.DEFAULT_BY_KEY).join(\",\")}`);\n          return;\n        }\n        comps.push(lookupResult);\n      });\n      if (comps.length === 0) {\n        return void 0;\n      }\n      return {\n        toolPanels: comps,\n        defaultToolPanel: comps[0].id\n      };\n    }\n    const result = {\n      toolPanels: _SideBarDefParser.parseComponents(toParse.toolPanels),\n      defaultToolPanel: toParse.defaultToolPanel,\n      hiddenByDefault: toParse.hiddenByDefault,\n      position: toParse.position\n    };\n    return result;\n  }\n  static parseComponents(from) {\n    const result = [];\n    if (!from) {\n      return result;\n    }\n    from.forEach((it) => {\n      let toAdd = null;\n      if (typeof it === \"string\") {\n        const lookupResult = _SideBarDefParser.DEFAULT_BY_KEY[it];\n        if (!lookupResult) {\n          console.warn(`AG Grid: the key ${it} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(_SideBarDefParser.DEFAULT_BY_KEY).join(\",\")}`);\n          return;\n        }\n        toAdd = lookupResult;\n      } else {\n        toAdd = it;\n      }\n      result.push(toAdd);\n    });\n    return result;\n  }\n};\n_SideBarDefParser.DEFAULT_COLUMN_COMP = {\n  id: \"columns\",\n  labelDefault: \"Columns\",\n  labelKey: \"columns\",\n  iconKey: \"columns\",\n  toolPanel: \"agColumnsToolPanel\"\n};\n_SideBarDefParser.DEFAULT_FILTER_COMP = {\n  id: \"filters\",\n  labelDefault: \"Filters\",\n  labelKey: \"filters\",\n  iconKey: \"filter\",\n  toolPanel: \"agFiltersToolPanel\"\n};\n_SideBarDefParser.DEFAULT_BY_KEY = {\n  columns: _SideBarDefParser.DEFAULT_COLUMN_COMP,\n  filters: _SideBarDefParser.DEFAULT_FILTER_COMP\n};\nvar SideBarDefParser = _SideBarDefParser;\n\n// enterprise-modules/side-bar/src/sideBar/toolPanelWrapper.ts\nvar import_core4 = require(\"@ag-grid-community/core\");\nvar _ToolPanelWrapper = class _ToolPanelWrapper extends import_core4.Component {\n  constructor() {\n    super(_ToolPanelWrapper.TEMPLATE);\n  }\n  setupResize() {\n    const eGui = this.getGui();\n    const resizeBar = this.resizeBar = this.createManagedBean(new HorizontalResizeComp());\n    eGui.setAttribute(\"id\", `ag-${this.getCompId()}`);\n    resizeBar.setElementToResize(eGui);\n    this.appendChild(resizeBar);\n  }\n  getToolPanelId() {\n    return this.toolPanelId;\n  }\n  setToolPanelDef(toolPanelDef, params) {\n    const { id, minWidth, maxWidth, width } = toolPanelDef;\n    this.toolPanelId = id;\n    this.width = width;\n    const compDetails = this.userComponentFactory.getToolPanelCompDetails(toolPanelDef, params);\n    const componentPromise = compDetails.newAgStackInstance();\n    this.params = compDetails.params;\n    if (componentPromise == null) {\n      console.warn(`AG Grid: error processing tool panel component ${id}. You need to specify 'toolPanel'`);\n      return;\n    }\n    componentPromise.then(this.setToolPanelComponent.bind(this));\n    if (minWidth != null) {\n      this.resizeBar.setMinWidth(minWidth);\n    }\n    if (maxWidth != null) {\n      this.resizeBar.setMaxWidth(maxWidth);\n    }\n  }\n  setToolPanelComponent(compInstance) {\n    this.toolPanelCompInstance = compInstance;\n    this.appendChild(compInstance.getGui());\n    this.addDestroyFunc(() => {\n      this.destroyBean(compInstance);\n    });\n    if (this.width) {\n      this.getGui().style.width = `${this.width}px`;\n    }\n  }\n  getToolPanelInstance() {\n    return this.toolPanelCompInstance;\n  }\n  setResizerSizerSide(side) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const isLeft = side === \"left\";\n    const inverted = isRtl ? isLeft : !isLeft;\n    this.resizeBar.setInverted(inverted);\n  }\n  refresh() {\n    this.toolPanelCompInstance.refresh(this.params);\n  }\n};\n_ToolPanelWrapper.TEMPLATE = /* html */\n`<div class=\"ag-tool-panel-wrapper\" role=\"tabpanel\"/>`;\n__decorateClass([\n  (0, import_core4.Autowired)(\"userComponentFactory\")\n], _ToolPanelWrapper.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  import_core4.PostConstruct\n], _ToolPanelWrapper.prototype, \"setupResize\", 1);\nvar ToolPanelWrapper = _ToolPanelWrapper;\n\n// enterprise-modules/side-bar/src/sideBar/sideBarComp.ts\nvar _SideBarComp = class _SideBarComp extends import_core5.Component {\n  constructor() {\n    super(_SideBarComp.TEMPLATE);\n    this.toolPanelWrappers = [];\n  }\n  postConstruct() {\n    var _a;\n    this.sideBarButtonsComp.addEventListener(SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED, this.onToolPanelButtonClicked.bind(this));\n    const { sideBar: sideBarState } = (_a = this.gos.get(\"initialState\")) != null ? _a : {};\n    this.setSideBarDef({\n      sideBarDef: SideBarDefParser.parse(this.gos.get(\"sideBar\")),\n      sideBarState\n    });\n    this.addManagedPropertyListener(\"sideBar\", this.onSideBarUpdated.bind(this));\n    this.sideBarService.registerSideBarComp(this);\n    this.createManagedBean(new import_core5.ManagedFocusFeature(\n      this.getFocusableElement(),\n      {\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this)\n      }\n    ));\n  }\n  onTabKeyDown(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const { focusService, sideBarButtonsComp } = this;\n    const eGui = this.getGui();\n    const sideBarGui = sideBarButtonsComp.getGui();\n    const activeElement = this.gos.getActiveDomElement();\n    const openPanel = eGui.querySelector(\".ag-tool-panel-wrapper:not(.ag-hidden)\");\n    const target = e.target;\n    if (!openPanel) {\n      return;\n    }\n    if (sideBarGui.contains(activeElement)) {\n      if (focusService.focusInto(openPanel, e.shiftKey)) {\n        e.preventDefault();\n      }\n      return;\n    }\n    if (!e.shiftKey) {\n      return;\n    }\n    let nextEl = null;\n    if (openPanel.contains(activeElement)) {\n      nextEl = this.focusService.findNextFocusableElement(openPanel, void 0, true);\n    } else if (focusService.isTargetUnderManagedComponent(openPanel, target) && e.shiftKey) {\n      nextEl = this.focusService.findFocusableElementBeforeTabGuard(openPanel, target);\n    }\n    if (!nextEl) {\n      nextEl = sideBarGui.querySelector(\".ag-selected button\");\n    }\n    if (nextEl && nextEl !== e.target) {\n      e.preventDefault();\n      nextEl.focus();\n    }\n  }\n  handleKeyDown(e) {\n    const currentButton = this.gos.getActiveDomElement();\n    if (!this.sideBarButtonsComp.getGui().contains(currentButton)) {\n      return;\n    }\n    const sideBarGui = this.sideBarButtonsComp.getGui();\n    const buttons = Array.prototype.slice.call(sideBarGui.querySelectorAll(\".ag-side-button\"));\n    const currentPos = buttons.findIndex((button) => button.contains(currentButton));\n    let nextPos = null;\n    switch (e.key) {\n      case import_core5.KeyCode.LEFT:\n      case import_core5.KeyCode.UP:\n        nextPos = Math.max(0, currentPos - 1);\n        break;\n      case import_core5.KeyCode.RIGHT:\n      case import_core5.KeyCode.DOWN:\n        nextPos = Math.min(currentPos + 1, buttons.length - 1);\n        break;\n    }\n    if (nextPos === null) {\n      return;\n    }\n    const innerButton = buttons[nextPos].querySelector(\"button\");\n    if (innerButton) {\n      innerButton.focus();\n      e.preventDefault();\n    }\n  }\n  onToolPanelButtonClicked(event) {\n    const id = event.toolPanelId;\n    const openedItem = this.openedItem();\n    if (openedItem === id) {\n      this.openToolPanel(void 0, \"sideBarButtonClicked\");\n    } else {\n      this.openToolPanel(id, \"sideBarButtonClicked\");\n    }\n  }\n  clearDownUi() {\n    this.sideBarButtonsComp.clearButtons();\n    this.destroyToolPanelWrappers();\n  }\n  setSideBarDef({\n    sideBarDef,\n    sideBarState,\n    existingToolPanelWrappers\n  }) {\n    this.setDisplayed(false);\n    this.sideBar = sideBarDef;\n    if (!!this.sideBar && !!this.sideBar.toolPanels) {\n      const toolPanelDefs = this.sideBar.toolPanels;\n      this.createToolPanelsAndSideButtons(toolPanelDefs, sideBarState, existingToolPanelWrappers);\n      if (!this.toolPanelWrappers.length) {\n        return;\n      }\n      const shouldDisplaySideBar = sideBarState ? sideBarState.visible : !this.sideBar.hiddenByDefault;\n      this.setDisplayed(shouldDisplaySideBar);\n      this.setSideBarPosition(sideBarState ? sideBarState.position : this.sideBar.position);\n      if (shouldDisplaySideBar) {\n        if (sideBarState) {\n          const { openToolPanel } = sideBarState;\n          if (openToolPanel) {\n            this.openToolPanel(openToolPanel, \"sideBarInitializing\");\n          }\n        } else {\n          this.openToolPanel(this.sideBar.defaultToolPanel, \"sideBarInitializing\");\n        }\n      }\n    }\n  }\n  getDef() {\n    return this.sideBar;\n  }\n  setSideBarPosition(position) {\n    if (!position) {\n      position = \"right\";\n    }\n    this.position = position;\n    const isLeft = position === \"left\";\n    const resizerSide = isLeft ? \"right\" : \"left\";\n    this.addOrRemoveCssClass(\"ag-side-bar-left\", isLeft);\n    this.addOrRemoveCssClass(\"ag-side-bar-right\", !isLeft);\n    this.toolPanelWrappers.forEach((wrapper) => {\n      wrapper.setResizerSizerSide(resizerSide);\n    });\n    this.eventService.dispatchEvent({ type: import_core5.Events.EVENT_SIDE_BAR_UPDATED });\n    return this;\n  }\n  setDisplayed(displayed, options) {\n    super.setDisplayed(displayed, options);\n    this.eventService.dispatchEvent({ type: import_core5.Events.EVENT_SIDE_BAR_UPDATED });\n  }\n  getState() {\n    const toolPanels = {};\n    this.toolPanelWrappers.forEach((wrapper) => {\n      var _a, _b;\n      toolPanels[wrapper.getToolPanelId()] = (_b = (_a = wrapper.getToolPanelInstance()) == null ? void 0 : _a.getState) == null ? void 0 : _b.call(_a);\n    });\n    return {\n      visible: this.isDisplayed(),\n      position: this.position,\n      openToolPanel: this.openedItem(),\n      toolPanels\n    };\n  }\n  createToolPanelsAndSideButtons(defs, sideBarState, existingToolPanelWrappers) {\n    var _a;\n    for (const def of defs) {\n      this.createToolPanelAndSideButton(def, (_a = sideBarState == null ? void 0 : sideBarState.toolPanels) == null ? void 0 : _a[def.id], existingToolPanelWrappers == null ? void 0 : existingToolPanelWrappers[def.id]);\n    }\n  }\n  validateDef(def) {\n    if (def.id == null) {\n      console.warn(`AG Grid: please review all your toolPanel components, it seems like at least one of them doesn't have an id`);\n      return false;\n    }\n    if (def.toolPanel === \"agColumnsToolPanel\") {\n      const moduleMissing = !import_core5.ModuleRegistry.__assertRegistered(import_core5.ModuleNames.ColumnsToolPanelModule, \"Column Tool Panel\", this.context.getGridId());\n      if (moduleMissing) {\n        return false;\n      }\n    }\n    if (def.toolPanel === \"agFiltersToolPanel\") {\n      const moduleMissing = !import_core5.ModuleRegistry.__assertRegistered(import_core5.ModuleNames.FiltersToolPanelModule, \"Filters Tool Panel\", this.context.getGridId());\n      if (moduleMissing) {\n        return false;\n      }\n      if (this.filterManager.isAdvancedFilterEnabled()) {\n        import_core5._.warnOnce(\"Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled.\");\n        return false;\n      }\n    }\n    return true;\n  }\n  createToolPanelAndSideButton(def, initialState, existingToolPanelWrapper) {\n    if (!this.validateDef(def)) {\n      return;\n    }\n    const button = this.sideBarButtonsComp.addButtonComp(def);\n    let wrapper;\n    if (existingToolPanelWrapper) {\n      wrapper = existingToolPanelWrapper;\n    } else {\n      wrapper = this.getContext().createBean(new ToolPanelWrapper());\n      wrapper.setToolPanelDef(def, {\n        initialState,\n        onStateUpdated: () => this.eventService.dispatchEvent({ type: import_core5.Events.EVENT_SIDE_BAR_UPDATED })\n      });\n    }\n    wrapper.setDisplayed(false);\n    const wrapperGui = wrapper.getGui();\n    this.appendChild(wrapperGui);\n    this.toolPanelWrappers.push(wrapper);\n    import_core5._.setAriaControls(button.getButtonElement(), wrapperGui);\n  }\n  refresh() {\n    this.toolPanelWrappers.forEach((wrapper) => wrapper.refresh());\n  }\n  openToolPanel(key, source = \"api\") {\n    const currentlyOpenedKey = this.openedItem();\n    if (currentlyOpenedKey === key) {\n      return;\n    }\n    this.toolPanelWrappers.forEach((wrapper) => {\n      const show = key === wrapper.getToolPanelId();\n      wrapper.setDisplayed(show);\n    });\n    const newlyOpenedKey = this.openedItem();\n    const openToolPanelChanged = currentlyOpenedKey !== newlyOpenedKey;\n    if (openToolPanelChanged) {\n      this.sideBarButtonsComp.setActiveButton(key);\n      this.raiseToolPanelVisibleEvent(key, currentlyOpenedKey != null ? currentlyOpenedKey : void 0, source);\n    }\n  }\n  getToolPanelInstance(key) {\n    const toolPanelWrapper = this.toolPanelWrappers.filter((toolPanel) => toolPanel.getToolPanelId() === key)[0];\n    if (!toolPanelWrapper) {\n      console.warn(`AG Grid: unable to lookup Tool Panel as invalid key supplied: ${key}`);\n      return;\n    }\n    return toolPanelWrapper.getToolPanelInstance();\n  }\n  raiseToolPanelVisibleEvent(key, previousKey, source) {\n    const switchingToolPanel = !!key && !!previousKey;\n    if (previousKey) {\n      const event = {\n        type: import_core5.Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED,\n        source,\n        key: previousKey,\n        visible: false,\n        switchingToolPanel\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    if (key) {\n      const event = {\n        type: import_core5.Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED,\n        source,\n        key,\n        visible: true,\n        switchingToolPanel\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  close(source = \"api\") {\n    this.openToolPanel(void 0, source);\n  }\n  isToolPanelShowing() {\n    return !!this.openedItem();\n  }\n  openedItem() {\n    let activeToolPanel = null;\n    this.toolPanelWrappers.forEach((wrapper) => {\n      if (wrapper.isDisplayed()) {\n        activeToolPanel = wrapper.getToolPanelId();\n      }\n    });\n    return activeToolPanel;\n  }\n  onSideBarUpdated() {\n    var _a;\n    const sideBarDef = SideBarDefParser.parse(this.gos.get(\"sideBar\"));\n    let existingToolPanelWrappers = {};\n    if (sideBarDef && this.sideBar) {\n      (_a = sideBarDef.toolPanels) == null ? void 0 : _a.forEach((toolPanelDef) => {\n        var _a2, _b;\n        const { id } = toolPanelDef;\n        if (!id) {\n          return;\n        }\n        const existingToolPanelDef = (_a2 = this.sideBar.toolPanels) == null ? void 0 : _a2.find(\n          (toolPanelDefToCheck) => toolPanelDefToCheck.id === id\n        );\n        if (!existingToolPanelDef || toolPanelDef.toolPanel !== existingToolPanelDef.toolPanel) {\n          return;\n        }\n        const toolPanelWrapper = this.toolPanelWrappers.find((toolPanel) => toolPanel.getToolPanelId() === id);\n        if (!toolPanelWrapper) {\n          return;\n        }\n        const params = this.gos.addGridCommonParams(__spreadProps(__spreadValues({}, (_b = toolPanelDef.toolPanelParams) != null ? _b : {}), {\n          onStateUpdated: () => this.eventService.dispatchEvent({ type: import_core5.Events.EVENT_SIDE_BAR_UPDATED })\n        }));\n        const hasRefreshed = toolPanelWrapper.getToolPanelInstance().refresh(params);\n        if (hasRefreshed !== true) {\n          return;\n        }\n        this.toolPanelWrappers = this.toolPanelWrappers.filter((toolPanel) => toolPanel !== toolPanelWrapper);\n        import_core5._.removeFromParent(toolPanelWrapper.getGui());\n        existingToolPanelWrappers[id] = toolPanelWrapper;\n      });\n    }\n    this.clearDownUi();\n    this.setSideBarDef({ sideBarDef, existingToolPanelWrappers });\n  }\n  destroyToolPanelWrappers() {\n    this.toolPanelWrappers.forEach((wrapper) => {\n      import_core5._.removeFromParent(wrapper.getGui());\n      this.destroyBean(wrapper);\n    });\n    this.toolPanelWrappers.length = 0;\n  }\n  destroy() {\n    this.destroyToolPanelWrappers();\n    super.destroy();\n  }\n};\n_SideBarComp.TEMPLATE = /* html */\n`<div class=\"ag-side-bar ag-unselectable\">\n            <ag-side-bar-buttons ref=\"sideBarButtons\"></ag-side-bar-buttons>\n        </div>`;\n__decorateClass([\n  (0, import_core5.Autowired)(\"focusService\")\n], _SideBarComp.prototype, \"focusService\", 2);\n__decorateClass([\n  (0, import_core5.Autowired)(\"filterManager\")\n], _SideBarComp.prototype, \"filterManager\", 2);\n__decorateClass([\n  (0, import_core5.Autowired)(\"sideBarService\")\n], _SideBarComp.prototype, \"sideBarService\", 2);\n__decorateClass([\n  (0, import_core5.RefSelector)(\"sideBarButtons\")\n], _SideBarComp.prototype, \"sideBarButtonsComp\", 2);\n__decorateClass([\n  import_core5.PostConstruct\n], _SideBarComp.prototype, \"postConstruct\", 1);\nvar SideBarComp = _SideBarComp;\n\n// enterprise-modules/side-bar/src/sideBar/common/toolPanelColDefService.ts\nvar import_core6 = require(\"@ag-grid-community/core\");\nvar ToolPanelColDefService = class extends import_core6.BeanStub {\n  constructor() {\n    super(...arguments);\n    this.isColGroupDef = (colDef) => colDef && typeof colDef.children !== \"undefined\";\n    this.getId = (colDef) => {\n      return this.isColGroupDef(colDef) ? colDef.groupId : colDef.colId;\n    };\n  }\n  createColumnTree(colDefs) {\n    const invalidColIds = [];\n    const createDummyColGroup = (abstractColDef, depth) => {\n      if (this.isColGroupDef(abstractColDef)) {\n        const groupDef = abstractColDef;\n        const groupId = typeof groupDef.groupId !== \"undefined\" ? groupDef.groupId : groupDef.headerName;\n        const group = new import_core6.ProvidedColumnGroup(groupDef, groupId, false, depth);\n        const children = [];\n        groupDef.children.forEach((def) => {\n          const child = createDummyColGroup(def, depth + 1);\n          if (child) {\n            children.push(child);\n          }\n        });\n        group.setChildren(children);\n        return group;\n      } else {\n        const colDef = abstractColDef;\n        const key = colDef.colId ? colDef.colId : colDef.field;\n        const column = this.columnModel.getPrimaryColumn(key);\n        if (!column) {\n          invalidColIds.push(colDef);\n        }\n        return column;\n      }\n    };\n    const mappedResults = [];\n    colDefs.forEach((colDef) => {\n      const result = createDummyColGroup(colDef, 0);\n      if (result) {\n        mappedResults.push(result);\n      }\n    });\n    if (invalidColIds.length > 0) {\n      console.warn(\"AG Grid: unable to find grid columns for the supplied colDef(s):\", invalidColIds);\n    }\n    return mappedResults;\n  }\n  syncLayoutWithGrid(syncLayoutCallback) {\n    const leafPathTrees = this.getLeafPathTrees();\n    const mergedColumnTrees = this.mergeLeafPathTrees(leafPathTrees);\n    syncLayoutCallback(mergedColumnTrees);\n  }\n  getLeafPathTrees() {\n    const getLeafPathTree = (node, childDef) => {\n      let leafPathTree;\n      if (node instanceof import_core6.ProvidedColumnGroup) {\n        if (node.isPadding()) {\n          leafPathTree = childDef;\n        } else {\n          const groupDef = Object.assign({}, node.getColGroupDef());\n          groupDef.groupId = node.getGroupId();\n          groupDef.children = [childDef];\n          leafPathTree = groupDef;\n        }\n      } else {\n        const colDef = Object.assign({}, node.getColDef());\n        colDef.colId = node.getColId();\n        leafPathTree = colDef;\n      }\n      const parent = node.getOriginalParent();\n      if (parent) {\n        return getLeafPathTree(parent, leafPathTree);\n      } else {\n        return leafPathTree;\n      }\n    };\n    const allGridColumns = this.columnModel.getAllGridColumns();\n    const allPrimaryGridColumns = allGridColumns.filter((column) => {\n      const colDef = column.getColDef();\n      return column.isPrimary() && !colDef.showRowGroup;\n    });\n    return allPrimaryGridColumns.map((col) => getLeafPathTree(col, col.getColDef()));\n  }\n  mergeLeafPathTrees(leafPathTrees) {\n    const matchingRootGroupIds = (pathA, pathB) => {\n      const bothPathsAreGroups = this.isColGroupDef(pathA) && this.isColGroupDef(pathB);\n      return bothPathsAreGroups && this.getId(pathA) === this.getId(pathB);\n    };\n    const mergeTrees = (treeA, treeB) => {\n      if (!this.isColGroupDef(treeB)) {\n        return treeA;\n      }\n      const mergeResult = treeA;\n      const groupToMerge = treeB;\n      if (groupToMerge.children && groupToMerge.groupId) {\n        const added = this.addChildrenToGroup(mergeResult, groupToMerge.groupId, groupToMerge.children[0]);\n        if (added) {\n          return mergeResult;\n        }\n      }\n      groupToMerge.children.forEach((child) => mergeTrees(mergeResult, child));\n      return mergeResult;\n    };\n    const mergeColDefs = [];\n    for (let i = 1; i <= leafPathTrees.length; i++) {\n      const first = leafPathTrees[i - 1];\n      const second = leafPathTrees[i];\n      if (matchingRootGroupIds(first, second)) {\n        leafPathTrees[i] = mergeTrees(first, second);\n      } else {\n        mergeColDefs.push(first);\n      }\n    }\n    return mergeColDefs;\n  }\n  addChildrenToGroup(tree, groupId, colDef) {\n    const subGroupIsSplit = (currentSubGroup, currentSubGroupToAdd) => {\n      const existingChildIds = currentSubGroup.children.map(this.getId);\n      const childGroupAlreadyExists = import_core6._.includes(existingChildIds, this.getId(currentSubGroupToAdd));\n      const lastChild = import_core6._.last(currentSubGroup.children);\n      const lastChildIsDifferent = lastChild && this.getId(lastChild) !== this.getId(currentSubGroupToAdd);\n      return childGroupAlreadyExists && lastChildIsDifferent;\n    };\n    if (!this.isColGroupDef(tree)) {\n      return true;\n    }\n    const currentGroup = tree;\n    const groupToAdd = colDef;\n    if (subGroupIsSplit(currentGroup, groupToAdd)) {\n      currentGroup.children.push(groupToAdd);\n      return true;\n    }\n    if (currentGroup.groupId === groupId) {\n      const existingChildIds = currentGroup.children.map(this.getId);\n      const colDefAlreadyPresent = import_core6._.includes(existingChildIds, this.getId(groupToAdd));\n      if (!colDefAlreadyPresent) {\n        currentGroup.children.push(groupToAdd);\n        return true;\n      }\n    }\n    currentGroup.children.forEach((subGroup) => this.addChildrenToGroup(subGroup, groupId, colDef));\n    return false;\n  }\n};\n__decorateClass([\n  (0, import_core6.Autowired)(\"columnModel\")\n], ToolPanelColDefService.prototype, \"columnModel\", 2);\nToolPanelColDefService = __decorateClass([\n  (0, import_core6.Bean)(\"toolPanelColDefService\")\n], ToolPanelColDefService);\n\n// enterprise-modules/side-bar/src/version.ts\nvar VERSION = \"31.3.2\";\n\n// enterprise-modules/side-bar/src/sideBar/sideBarService.ts\nvar import_core7 = require(\"@ag-grid-community/core\");\nvar SideBarService = class extends import_core7.BeanStub {\n  registerSideBarComp(sideBarComp) {\n    this.sideBarComp = sideBarComp;\n  }\n  getSideBarComp() {\n    return this.sideBarComp;\n  }\n};\nSideBarService = __decorateClass([\n  (0, import_core7.Bean)(\"sideBarService\")\n], SideBarService);\n\n// enterprise-modules/side-bar/src/sideBarModule.ts\nvar SideBarModule = {\n  version: VERSION,\n  moduleName: import_core8.ModuleNames.SideBarModule,\n  beans: [ToolPanelColDefService, SideBarService],\n  agStackComponents: [\n    { componentName: \"AgHorizontalResize\", componentClass: HorizontalResizeComp },\n    { componentName: \"AgSideBar\", componentClass: SideBarComp },\n    { componentName: \"AgSideBarButtons\", componentClass: SideBarButtonsComp }\n  ],\n  dependantModules: [\n    import_core9.EnterpriseCoreModule\n  ]\n};\n"],
  "mappings": "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",
  "names": ["obj", "key", "value", "a", "b", "prop", "target", "all", "name", "to", "from", "except", "desc", "mod", "decorators", "kind", "result", "i", "decorator", "elementToResize", "finishedWithResizeFunc", "start", "end", "width", "event", "delta", "isEnd", "direction", "newWidth", "inverted", "_SideBarButtonComp", "toolPanelDef", "template", "translate", "def", "label", "selected", "_SideBarButtonsComp", "lastColumn", "id", "comp", "buttonComp", "_SideBarDefParser", "toParse", "comps", "lookupResult", "it", "toAdd", "_ToolPanelWrapper", "eGui", "resizeBar", "params", "minWidth", "maxWidth", "compDetails", "componentPromise", "compInstance", "side", "isRtl", "isLeft", "_SideBarComp", "_a", "sideBarState", "focusService", "sideBarButtonsComp", "sideBarGui", "activeElement", "openPanel", "nextEl", "currentButton", "buttons", "currentPos", "button", "nextPos", "innerButton", "sideBarDef", "existingToolPanelWrappers", "toolPanelDefs", "shouldDisplaySideBar", "openToolPanel", "position", "resizerSide", "wrapper", "displayed", "options", "toolPanels", "_b", "defs", "initialState", "existingToolPanelWrapper", "wrapperGui", "source", "currentlyOpenedKey", "show", "newlyOpenedKey", "toolPanelWrapper", "toolPanel", "previousKey", "switchingToolPanel", "activeToolPanel", "_a2", "existingToolPanelDef", "toolPanelDefToCheck", "colDef", "colDefs", "invalidColIds", "createDummyColGroup", "abstractColDef", "depth", "groupDef", "groupId", "group", "children", "child", "column", "mappedResults", "syncLayoutCallback", "leafPathTrees", "mergedColumnTrees", "getLeafPathTree", "node", "childDef", "leafPathTree", "parent", "col", "matchingRootGroupIds", "pathA", "pathB", "mergeTrees", "treeA", "treeB", "mergeResult", "groupToMerge", "mergeColDefs", "first", "second", "tree", "subGroupIsSplit", "currentSubGroup", "currentSubGroupToAdd", "existingChildIds", "childGroupAlreadyExists", "lastChild", "lastChildIsDifferent", "currentGroup", "groupToAdd", "subGroup", "sideBarComp"]
}
