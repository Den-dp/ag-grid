import{ModuleNames as k,_EditCoreModule as R}from"@ag-grid-community/core";import{EnterpriseCoreModule as E}from"@ag-grid-enterprise/core";import{PopupComponent as A,_missing as M,_warnOnce as p}from"@ag-grid-community/core";import{AgRichSelect as w}from"@ag-grid-enterprise/core";var m=class extends A{constructor(){super('<div class="ag-cell-edit-wrapper"></div>')}init(e){this.params=e;const{cellStartedEdit:a,values:i}=e;M(i)&&p("agRichSelectCellEditor requires cellEditorParams.values to be set");const{params:t,valuesPromise:l}=this.buildRichSelectParams();this.richSelect=this.createManagedBean(new w(t)),this.richSelect.addCssClass("ag-cell-editor"),this.appendChild(this.richSelect),l&&l.then(r=>{this.richSelect.setValueList({valueList:r,refresh:!0});const c=this.getSearchStringCallback(r);c&&this.richSelect.setSearchStringCreator(c)}),this.addManagedListeners(this.richSelect,{fieldPickerValueSelected:this.onEditorPickerValueSelected.bind(this)}),this.focusAfterAttached=a}onEditorPickerValueSelected(e){setTimeout(()=>this.params.stopEditing(!e.fromEnterKey))}buildRichSelectParams(){const{cellRenderer:e,cellHeight:a,value:i,values:t,formatValue:l,searchDebounceDelay:r,valueListGap:c,valueListMaxHeight:S,valueListMaxWidth:g,allowTyping:h,filterList:f,searchType:v,highlightMatch:y,valuePlaceholder:C,eventKey:n,multiSelect:u,suppressDeselectAll:b,suppressMultiSelectPillRenderer:P}=this.params,o={value:i,cellRenderer:e,cellRowHeight:a,searchDebounceDelay:r,valueFormatter:l,pickerAriaLabelKey:"ariaLabelRichSelectField",pickerAriaLabelValue:"Rich Select Field",pickerType:"virtual-list",pickerGap:c,allowTyping:h,filterList:f,searchType:v,highlightMatch:y,maxPickerHeight:S,maxPickerWidth:g,placeholder:C,initialInputValue:n?.length===1?n:void 0,multiSelect:u,suppressDeselectAll:b,suppressMultiSelectPillRenderer:P};let s,d;return typeof t=="function"?s=t(this.params):s=t??[],Array.isArray(s)?(o.valueList=s,o.searchStringCreator=this.getSearchStringCallback(s)):d=s,u&&h&&(this.params.allowTyping=o.allowTyping=!1,p("agRichSelectCellEditor cannot have `multiSelect` and `allowTyping` set to `true`. AllowTyping has been turned off.")),{params:o,valuesPromise:d}}getSearchStringCallback(e){const{colDef:a}=this.params;if(!(typeof e[0]!="object"||!a.keyCreator))return i=>i.map(t=>{const l=this.gos.addGridCommonParams({value:t,colDef:this.params.colDef,column:this.params.column,node:this.params.node,data:this.params.data});return a.keyCreator(l)})}afterGuiAttached(){const{focusAfterAttached:e,params:a}=this;setTimeout(()=>{if(!this.isAlive())return;if(e){const t=this.richSelect.getFocusableElement();t.focus();const{allowTyping:l,eventKey:r}=this.params;l&&(!r||r.length!==1)&&t.select()}this.richSelect.showPicker();const{eventKey:i}=a;i&&i?.length===1&&this.richSelect.searchTextFromString(i)})}focusIn(){this.richSelect.getFocusableElement().focus()}getValue(){return this.richSelect.getValue()}isPopup(){return!1}},L="32.0.0",T={version:L,moduleName:k.RichSelectModule,beans:[],userComponents:[{name:"agRichSelect",classImp:m},{name:"agRichSelectCellEditor",classImp:m}],dependantModules:[E,R]};export{T as RichSelectModule};
