var ge=Object.defineProperty,Ie=Object.defineProperties,xe=Object.getOwnPropertyDescriptor,Ae=Object.getOwnPropertyDescriptors,q=Object.getOwnPropertySymbols,fe=Object.prototype.hasOwnProperty,pe=Object.prototype.propertyIsEnumerable,Se=(e,t,o)=>t in e?ge(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,se=(e,t)=>{for(var o in t||(t={}))fe.call(t,o)&&Se(e,o,t[o]);if(q)for(var o of q(t))pe.call(t,o)&&Se(e,o,t[o]);return e},be=(e,t)=>Ie(e,Ae(t)),we=(e,t)=>{var o={};for(var s in e)fe.call(e,s)&&t.indexOf(s)<0&&(o[s]=e[s]);if(e!=null&&q)for(var s of q(e))t.indexOf(s)<0&&pe.call(e,s)&&(o[s]=e[s]);return o},a=(e,t,o,s)=>{for(var r=s>1?void 0:s?xe(t,o):t,i=e.length-1,n;i>=0;i--)(n=e[i])&&(r=(s?n(t,o,r):n(r))||r);return s&&r&&ge(t,o,r),r};import{ModuleNames as Me}from"@ag-grid-community/core";import{EnterpriseCoreModule as De}from"@ag-grid-enterprise/core";import{_,Autowired as M,Bean as Te,BeanStub as Be,Events as D,NumberSequence as ve,PostConstruct as Le,PreDestroy as Re,RowNode as Pe,Optional as ke,ModuleRegistry as Ge,ModuleNames as Fe}from"@ag-grid-community/core";import{_ as O,Autowired as N,Events as $,NumberSequence as J,PostConstruct as _e,PreDestroy as Oe,RowNodeBlock as k,ServerSideTransactionResultStatus as U}from"@ag-grid-community/core";var S=class extends k{constructor(e,t,o){super(0),this.nodeIdSequence=new J,this.info={},this.ssrmParams=e,this.parentRowNode=o,this.level=o.level+1,this.groupLevel=e.rowGroupCols?this.level<e.rowGroupCols.length:void 0,this.leafGroup=e.rowGroupCols?this.level===e.rowGroupCols.length-1:!1}postConstruct(){if(this.usingTreeData=this.gos.get("treeData"),this.nodeIdPrefix=this.blockUtils.createNodeIdPrefix(this.parentRowNode),!this.usingTreeData&&this.groupLevel){const s=this.ssrmParams.rowGroupCols[this.level];this.groupField=s.field,this.rowGroupColumn=this.columnModel.getRowGroupColumns()[this.level]}let e=1;const t=this.parentRowNode.level===-1,o=this.storeUtils.getServerSideInitialRowCount();t&&o!=null&&(e=o),this.initialiseRowNodes(e),this.rowNodeBlockLoader.addBlock(this),this.addDestroyFunc(()=>this.rowNodeBlockLoader.removeBlock(this)),this.postSortFunc=this.gos.getCallback("postSortRows"),o!=null&&this.eventService.dispatchEventOnce({type:$.EVENT_ROW_COUNT_READY})}destroyRowNodes(){this.blockUtils.destroyRowNodes(this.allRowNodes),this.allRowNodes=[],this.nodesAfterSort=[],this.nodesAfterFilter=[],this.allNodesMap={}}initialiseRowNodes(e,t=!1){this.destroyRowNodes();for(let o=0;o<e;o++){const s=this.blockUtils.createRowNode({field:this.groupField,group:this.groupLevel,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn});t&&(s.failedLoad=!0),this.allRowNodes.push(s),this.nodesAfterFilter.push(s),this.nodesAfterSort.push(s)}}getBlockStateJson(){return{id:this.nodeIdPrefix?this.nodeIdPrefix:"",state:this.getState()}}loadFromDatasource(){this.storeUtils.loadFromDatasource({startRow:void 0,endRow:void 0,parentBlock:this,parentNode:this.parentRowNode,storeParams:this.ssrmParams,success:this.success.bind(this,this.getVersion()),fail:this.pageLoadFailed.bind(this,this.getVersion())})}getStartRow(){return 0}getEndRow(){return this.nodesAfterSort.length}createDataNode(e,t){const o=this.blockUtils.createRowNode({field:this.groupField,group:this.groupLevel,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn});t!=null?O.insertIntoArray(this.allRowNodes,o,t):this.allRowNodes.push(o);const s=this.prefixId(this.nodeIdSequence.next());return this.blockUtils.setDataIntoRowNode(o,e,s,void 0),this.nodeManager.addRowNode(o),this.blockUtils.checkOpenByDefault(o),this.allNodesMap[o.id]=o,o}prefixId(e){return this.nodeIdPrefix?this.nodeIdPrefix+"-"+e:e.toString()}processServerFail(){this.initialiseRowNodes(1,!0),this.fireStoreUpdatedEvent(),this.flushAsyncTransactions()}processServerResult(e){if(!this.isAlive())return;const t=e.groupLevelInfo;t&&Object.assign(this.info,t),e.pivotResultFields&&this.serverSideRowModel.generateSecondaryColumns(e.pivotResultFields);const o=this.allRowNodes.length>0?this.allNodesMap:void 0;this.allRowNodes=[],this.nodesAfterSort=[],this.nodesAfterFilter=[],this.allNodesMap={},e.rowData||O.warnOnce('"params.data" is missing from Server-Side Row Model success() callback. Please use the "data" attribute. If no data is returned, set an empty list.'),this.createOrRecycleNodes(o,e.rowData),o&&this.blockUtils.destroyRowNodes(O.getAllValuesInObject(o)),this.level===0&&this.eventService.dispatchEventOnce({type:$.EVENT_ROW_COUNT_READY}),this.filterAndSortNodes(),this.fireStoreUpdatedEvent(),this.flushAsyncTransactions()}createOrRecycleNodes(e,t){if(!t)return;const o=r=>{if(!e)return;const i=this.gos.getCallback("getRowId");if(!i)return;const n=this.parentRowNode.getGroupKeys(),d=this.level,l=i({data:r,parentKeys:n.length>0?n:void 0,level:d}),c=e[l];if(c)return delete e[l],c},s=(r,i)=>{this.allNodesMap[r.id]=r,this.blockUtils.updateDataIntoRowNode(r,i),this.allRowNodes.push(r)};t.forEach(r=>{const i=o(r);i?s(i,r):this.createDataNode(r)})}flushAsyncTransactions(){window.setTimeout(()=>this.transactionManager.flushAsyncTransactions(),0)}filterAndSortNodes(){this.filterRowNodes(),this.sortRowNodes()}sortRowNodes(){const e=this.storeUtils.isServerSideSortAllLevels()||this.storeUtils.isServerSideSortOnServer(),t=this.sortController.getSortOptions(),o=!t||t.length==0;if(e||o){this.nodesAfterSort=this.nodesAfterFilter;return}if(this.nodesAfterSort=this.rowNodeSorter.doFullSort(this.nodesAfterFilter,t),this.postSortFunc){const s={nodes:this.nodesAfterSort};this.postSortFunc(s)}}filterRowNodes(){const e=!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||this.storeUtils.isServerSideFilterOnServer(),t=this.groupLevel;if(e||t){this.nodesAfterFilter=this.allRowNodes;return}this.nodesAfterFilter=this.allRowNodes.filter(o=>this.filterManager.doesRowPassFilter({rowNode:o}))}clearDisplayIndexes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.allRowNodes.forEach(e=>this.blockUtils.clearDisplayIndex(e))}getDisplayIndexEnd(){return this.displayIndexEnd}isDisplayIndexInStore(e){return this.getRowCount()===0?!1:e>=this.displayIndexStart&&e<this.displayIndexEnd}setDisplayIndexes(e,t){this.displayIndexStart=e.peek(),this.topPx=t.value;const o={};this.nodesAfterSort.forEach(s=>{this.blockUtils.setDisplayIndex(s,e,t),o[s.id]=!0}),this.allRowNodes.forEach(s=>{o[s.id]||this.blockUtils.clearDisplayIndex(s)}),this.displayIndexEnd=e.peek(),this.heightPx=t.value-this.topPx}forEachStoreDeep(e,t=new J){e(this,t.next()),this.allRowNodes.forEach(o=>{const s=o.childStore;s&&s.forEachStoreDeep(e,t)})}forEachNodeDeep(e,t=new J){this.allRowNodes.forEach(o=>{e(o,t.next());const s=o.childStore;s&&s.forEachNodeDeep(e,t)})}forEachNodeDeepAfterFilterAndSort(e,t=new J,o=!1){this.nodesAfterSort.forEach(s=>{e(s,t.next());const r=s.childStore;r&&r.forEachNodeDeepAfterFilterAndSort(e,t,o)}),o&&this.parentRowNode.sibling&&e(this.parentRowNode.sibling,t.next())}getRowUsingDisplayIndex(e){return this.isDisplayIndexInStore(e)?this.blockUtils.binarySearchForDisplayIndex(e,this.nodesAfterSort):void 0}getRowBounds(e){for(let t=0;t<this.nodesAfterSort.length;t++){const o=this.nodesAfterSort[t],s=this.blockUtils.extractRowBounds(o,e);if(s)return s}return null}isPixelInRange(e){return e>=this.topPx&&e<this.topPx+this.heightPx}getRowIndexAtPixel(e){if(e<=this.topPx)return this.nodesAfterSort[0].rowIndex;if(e>=this.topPx+this.heightPx){const i=this.nodesAfterSort[this.nodesAfterSort.length-1],n=i.rowTop+i.rowHeight;if(e>=n&&i.expanded){if(i.childStore&&i.childStore.getRowCount()>0)return i.childStore.getRowIndexAtPixel(e);if(i.detailNode)return i.detailNode.rowIndex}return i.rowIndex}let s=null;return this.nodesAfterSort.forEach(i=>{const n=this.blockUtils.getIndexAtPixel(i,e);n!=null&&(s=n)}),s??this.displayIndexEnd-1}getChildStore(e){return this.storeUtils.getChildStore(e,this,t=>this.allRowNodes.find(s=>s.key==t))}forEachChildStoreShallow(e){this.allRowNodes.forEach(t=>{const o=t.childStore;o&&e(o)})}refreshAfterFilter(e){const t=this.storeUtils.isServerSideFilterOnServer(),o=this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e);if(!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||t&&o){this.refreshStore(!0),this.sortRowNodes();return}this.filterRowNodes(),this.sortRowNodes(),this.forEachChildStoreShallow(r=>r.refreshAfterFilter(e))}refreshAfterSort(e){const t=this.storeUtils.isServerSideSortOnServer(),o=this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e);if(this.storeUtils.isServerSideSortAllLevels()||t&&o){this.refreshStore(!0),this.filterRowNodes();return}this.filterRowNodes(),this.sortRowNodes(),this.forEachChildStoreShallow(r=>r.refreshAfterSort(e))}applyTransaction(e){switch(this.getState()){case k.STATE_FAILED:return{status:U.StoreLoadingFailed};case k.STATE_LOADING:return{status:U.StoreLoading};case k.STATE_WAITING_TO_LOAD:return{status:U.StoreWaitingToLoad}}const t=this.gos.getCallback("isApplyServerSideTransaction");if(t){const r={transaction:e,parentNode:this.parentRowNode,groupLevelInfo:this.info};if(!t(r))return{status:U.Cancelled}}const o={status:U.Applied,remove:[],update:[],add:[]},s=[];return this.executeAdd(e,o),this.executeRemove(e,o,s),this.executeUpdate(e,o,s),this.filterAndSortNodes(),this.updateSelection(s),o}updateSelection(e){if(e.length>0){this.selectionService.setNodesSelected({newValue:!1,nodes:e,suppressFinishActions:!0,clearSelection:!1,source:"rowDataChanged"});const o={type:$.EVENT_SELECTION_CHANGED,source:"rowDataChanged"};this.eventService.dispatchEvent(o)}}executeAdd(e,t){const{add:o,addIndex:s}=e;if(O.missingOrEmpty(o))return;typeof s=="number"&&s>=0?o.reverse().forEach(i=>{const n=this.createDataNode(i,s);t.add.push(n)}):o.forEach(i=>{const n=this.createDataNode(i);t.add.push(n)})}executeRemove(e,t,o){const{remove:s}=e;if(s==null)return;const r={};s.forEach(i=>{const n=this.lookupRowNode(i);n&&(n.isSelected()&&o.push(n),n.clearRowTopAndRowIndex(),r[n.id]=!0,delete this.allNodesMap[n.id],t.remove.push(n),this.nodeManager.removeNode(n))}),this.allRowNodes=this.allRowNodes.filter(i=>!r[i.id])}executeUpdate(e,t,o){const{update:s}=e;s?.forEach(r=>{const i=this.lookupRowNode(r);i&&(this.blockUtils.updateDataIntoRowNode(i,r),!i.selectable&&i.isSelected()&&o.push(i),t.update.push(i))})}lookupRowNode(e){const t=this.gos.getCallback("getRowId");let o;if(t!=null){const s=this.level,r=this.parentRowNode.getGroupKeys(),i=t({data:e,parentKeys:r.length>0?r:void 0,level:s});if(o=this.allNodesMap[i],!o)return console.error(`AG Grid: could not find row id=${i}, data item was not found for this id`),null}else if(o=this.allRowNodes.find(s=>s.data===e),!o)return console.error("AG Grid: could not find data item as object was not found",e),null;return o}addStoreStates(e){e.push({suppressInfiniteScroll:!0,route:this.parentRowNode.getGroupKeys(),rowCount:this.allRowNodes.length,info:this.info}),this.forEachChildStoreShallow(t=>t.addStoreStates(e))}refreshStore(e){if(e){const t=this.nodesAfterSort?this.nodesAfterSort.length:1;this.initialiseRowNodes(t)}this.scheduleLoad(),this.fireStoreUpdatedEvent()}retryLoads(){this.getState()===k.STATE_FAILED&&(this.initialiseRowNodes(1),this.scheduleLoad()),this.forEachChildStoreShallow(e=>e.retryLoads())}scheduleLoad(){this.setStateWaitingToLoad(),this.rowNodeBlockLoader.checkBlockToLoad()}fireStoreUpdatedEvent(){const e={type:$.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(e)}getRowCount(){return this.nodesAfterSort.length}getTopLevelRowDisplayedIndex(e){return this.nodesAfterSort[e].rowIndex}isLastRowIndexKnown(){return this.getState()==k.STATE_LOADED}getRowNodesInRange(e,t){const o=[];let s=!1;return O.missing(e)&&(s=!0),this.nodesAfterSort.forEach(i=>{const n=i===e||i===t;(s||n)&&o.push(i),n&&(s=!s)}),s?[]:o}getStoreBounds(){return{topPx:this.topPx,heightPx:this.heightPx}}};a([N("ssrmStoreUtils")],S.prototype,"storeUtils",2),a([N("ssrmBlockUtils")],S.prototype,"blockUtils",2),a([N("columnModel")],S.prototype,"columnModel",2),a([N("rowNodeBlockLoader")],S.prototype,"rowNodeBlockLoader",2),a([N("rowNodeSorter")],S.prototype,"rowNodeSorter",2),a([N("sortController")],S.prototype,"sortController",2),a([N("selectionService")],S.prototype,"selectionService",2),a([N("ssrmNodeManager")],S.prototype,"nodeManager",2),a([N("filterManager")],S.prototype,"filterManager",2),a([N("ssrmTransactionManager")],S.prototype,"transactionManager",2),a([N("rowModel")],S.prototype,"serverSideRowModel",2),a([_e],S.prototype,"postConstruct",1),a([Oe],S.prototype,"destroyRowNodes",1);import{_ as Ue,Autowired as Y,BeanStub as Ve,Events as re,NumberSequence as Q,PostConstruct as He,PreDestroy as ze,ServerSideTransactionResultStatus as ie}from"@ag-grid-community/core";import{Autowired as x,BeanStub as je,PostConstruct as Ke,PreDestroy as We}from"@ag-grid-community/core";var qe=class{constructor(...e){if(e.length<1)throw new Error("AG Grid: At least one index must be provided.");this.indexes=e,this.maps=new Map(this.indexes.map(t=>[t,new Map]))}getSize(){return this.maps.get(this.indexes[0]).size}getBy(e,t){const o=this.maps.get(e);if(!o)throw new Error(`AG Grid: ${String(e)} not found`);return o.get(t)}set(e){this.indexes.forEach(t=>{const o=this.maps.get(t);if(!o)throw new Error(`AG Grid: ${String(t)} not found`);o.set(e[t],e)})}delete(e){this.indexes.forEach(t=>{const o=this.maps.get(t);if(!o)throw new Error(`AG Grid: ${String(t)} not found`);o.delete(e[t])})}clear(){this.maps.forEach(e=>e.clear())}getIterator(e){const t=this.maps.get(e);if(!t)throw new Error(`AG Grid: ${String(e)} not found`);return t.values()}forEach(e){const t=this.getIterator(this.indexes[0]);let o;for(;(o=t.next())&&!o.done;)e(o.value)}find(e){const t=this.getIterator(this.indexes[0]);let o;for(;(o=t.next())&&!o.done;)if(e(o.value))return o.value}filter(e){const t=this.getIterator(this.indexes[0]);let o;const s=[];for(;(o=t.next())&&!o.done;)e(o.value)&&s.push(o.value);return s}};import{Autowired as ne,Bean as $e,BeanStub as Je,PostConstruct as Ye,RowNodeBlockLoader as Qe}from"@ag-grid-community/core";var E=class extends Je{constructor(){super(...arguments),this.cacheLoadingNodesMap=new Map,this.isCheckQueued=!1,this.nextBlockToLoad=void 0}init(){this.addManagedListener(this.rowNodeBlockLoader,Qe.BLOCK_LOADED_EVENT,()=>this.queueLoadCheck())}subscribe(e){this.cacheLoadingNodesMap.set(e,new Set)}unsubscribe(e){this.cacheLoadingNodesMap.delete(e)}queueLoadCheck(){this.isCheckQueued||(this.isCheckQueued=!0,window.queueMicrotask(()=>{this.queueLoadAction(),this.isCheckQueued=!1}))}queueLoadAction(){const e=this.getBlockToLoad();if(!e)return;const t=this.nextBlockToLoad&&this.nextBlockToLoad.cache===e.cache&&this.nextBlockToLoad.index===e.index;if(!t&&(!this.nextBlockToLoad||!t)){this.nextBlockToLoad=e,window.clearTimeout(this.loaderTimeout);const o=Number(this.nextBlockToLoad.index),s=this.nextBlockToLoad.cache,r=e.index+e.cache.getBlockSize();this.loaderTimeout=window.setTimeout(()=>{s.isAlive()&&(this.loaderTimeout=void 0,this.attemptLoad(s,o,r),this.nextBlockToLoad=void 0)},this.gos.get("blockLoadDebounceMillis"))}}attemptLoad(e,t,o){const s=this.rowNodeBlockLoader.getAvailableLoadingCount();s!=null&&s===0||(this.rowNodeBlockLoader.registerLoads(1),this.executeLoad(e,t,o),this.queueLoadCheck())}executeLoad(e,t,o){var s;const r=e.getSsrmParams(),i={startRow:t,endRow:o,rowGroupCols:r.rowGroupCols,valueCols:r.valueCols,pivotCols:r.pivotCols,pivotMode:r.pivotMode,groupKeys:e.store.getParentNode().getGroupKeys(),filterModel:r.filterModel,sortModel:r.sortModel},n=this.cacheLoadingNodesMap.get(e),d=()=>{for(let g=0;g<o-t;g++)n.delete(t+g)},l=()=>{for(let g=0;g<o-t;g++)n.add(t+g)},c=g=>{this.rowNodeBlockLoader.loadComplete(),e.onLoadSuccess(t,o-t,g),d()},h=()=>{this.rowNodeBlockLoader.loadComplete(),e.onLoadFailed(t,o-t),d()},u=this.gos.addGridCommonParams({request:i,success:c,fail:h,parentNode:e.store.getParentNode()});l(),(s=e.getSsrmParams().datasource)==null||s.getRows(u)}getBlockToLoad(){var e;const t=this.rowRenderer.getFirstVirtualRenderedRow(),o=this.rowRenderer.getLastVirtualRenderedRow();for(let l=t;l<=o;l++){const c=this.rowModel.getRow(l);if(!c)continue;const h=c.parent&&c.parent.childStore;if(!h||!(h instanceof C))continue;const u=h.getCache(),g=u.getNodes().getBy("node",c);if(!g)continue;const p=this.cacheLoadingNodesMap.get(u);if(!p?.has(g.index)&&(c.__needsRefreshWhenVisible||c.stub&&!c.failedLoad))return{cache:u,index:u.getBlockStartIndex(g.index)}}let s=null,r=null,i=Number.MAX_SAFE_INTEGER;for(const l of this.cacheLoadingNodesMap.keys())l.getNodesToRefresh().forEach(h=>{if(h.rowIndex==null){r=h,s=l;return}const u=l.getNodes().getBy("node",h);if(!u)return;const g=this.cacheLoadingNodesMap.get(l);if(g?.has(u.index))return;const p=Math.abs(t-h.rowIndex),f=Math.abs(h.rowIndex-o);p<i&&(r=h,i=p,s=l),f<i&&(r=h,i=f,s=l)});if(!s)return;const n=s,d=(e=n.getNodes().getBy("node",r))==null?void 0:e.index;return d==null?void 0:{cache:n,index:n.getBlockStartIndex(d)}}isRowLoading(e,t){var o,s;return(s=(o=this.cacheLoadingNodesMap.get(e))==null?void 0:o.has(t))!=null?s:!1}};E.DEFAULT_BLOCK_SIZE=100,a([ne("rowNodeBlockLoader")],E.prototype,"rowNodeBlockLoader",2),a([ne("rowRenderer")],E.prototype,"rowRenderer",2),a([ne("rowModel")],E.prototype,"rowModel",2),a([Ye],E.prototype,"init",1),E=a([$e("lazyBlockLoadingService")],E);var R=class extends je{constructor(e,t,o){super(),this.live=!0,this.removedNodeCache=new Map,this.store=e,this.numberOfRows=t,this.isLastRowKnown=!1,this.storeParams=o}init(){this.lazyBlockLoadingService.subscribe(this),this.nodeMap=new qe("index","id","node"),this.nodeDisplayIndexMap=new Map,this.nodesToRefresh=new Set,this.defaultNodeIdPrefix=this.blockUtils.createNodeIdPrefix(this.store.getParentNode()),this.getRowIdFunc=this.gos.getCallback("getRowId"),this.isMasterDetail=this.gos.get("masterDetail")}destroyRowNodes(){this.lazyBlockLoadingService.unsubscribe(this),this.numberOfRows=0,this.nodeMap.forEach(e=>this.blockUtils.destroyRowNode(e.node)),this.nodeMap.clear(),this.nodeDisplayIndexMap.clear(),this.nodesToRefresh.clear(),this.live=!1}getRowByDisplayIndex(e){var t,o,s,r;if(!this.store.isDisplayIndexInStore(e))return;const i=this.nodeDisplayIndexMap.get(e);if(i)return(i.stub||i.__needsRefreshWhenVisible)&&this.lazyBlockLoadingService.queueLoadCheck(),i;if(e===this.store.getDisplayIndexStart())return this.createStubNode(0,e);const n=this.nodeDisplayIndexMap.get(e-1);if(n){if(this.isMasterDetail&&n.master&&n.expanded)return n.detailNode;if(n.expanded&&((t=n.childStore)!=null&&t.isDisplayIndexInStore(e)))return(o=n.childStore)==null?void 0:o.getRowUsingDisplayIndex(e);const u=this.nodeMap.getBy("node",n);return this.createStubNode(u.index+1,e)}const d=this.getSurroundingNodesByDisplayIndex(e);if(d==null){const u=this.store.getRowCount()-(this.store.getDisplayIndexEnd()-e);return this.createStubNode(u,e)}const{previousNode:l,nextNode:c}=d;if(l&&l.node.expanded&&((s=l.node.childStore)!=null&&s.isDisplayIndexInStore(e)))return(r=l.node.childStore)==null?void 0:r.getRowUsingDisplayIndex(e);if(c){const u=c.node.rowIndex-e,g=c.index-u;return this.createStubNode(g,e)}const h=this.store.getRowCount()-(this.store.getDisplayIndexEnd()-e);return this.createStubNode(h,e)}createStubNode(e,t){const o=this.store.getRowBounds(t),s=this.createRowAtIndex(e,null,r=>{r.setRowIndex(t),r.setRowTop(o.rowTop),this.nodeDisplayIndexMap.set(t,r)});return this.lazyBlockLoadingService.queueLoadCheck(),s}getRowByStoreIndex(e){var t;return(t=this.nodeMap.getBy("index",e))==null?void 0:t.node}skipDisplayIndexes(e,t,o){if(e===0)return;const s=this.gos.getRowHeightAsNumber();t.skip(e),o.value+=e*s}setDisplayIndexes(e,t){this.nodeDisplayIndexMap.clear();const o={};this.nodeMap.forEach(i=>{o[i.index]=i.node});let s=-1;for(const i in o){const n=o[i],d=Number(i),l=d-1-s;this.skipDisplayIndexes(l,e,t),this.blockUtils.setDisplayIndex(n,e,t),this.nodeDisplayIndexMap.set(n.rowIndex,n),s=d}const r=this.numberOfRows-1-s;this.skipDisplayIndexes(r,e,t),this.purgeExcessRows()}getRowCount(){return this.numberOfRows}setRowCount(e,t){if(e<0)throw new Error("AG Grid: setRowCount can only accept a positive row count.");this.numberOfRows=e,t!=null&&(this.isLastRowKnown=t,t===!1&&(this.numberOfRows+=1)),this.fireStoreUpdatedEvent()}getNodes(){return this.nodeMap}getNodeCachedByDisplayIndex(e){var t;return(t=this.nodeDisplayIndexMap.get(e))!=null?t:null}getNodesToRefresh(){return this.nodesToRefresh}getSurroundingNodesByDisplayIndex(e){let t,o;return this.nodeMap.forEach(s=>{if(e>s.node.rowIndex){(o==null||o.node.rowIndex<s.node.rowIndex)&&(o=s);return}if(t==null||t.node.rowIndex>s.node.rowIndex){t=s;return}}),!o&&!t?null:{previousNode:o,nextNode:t}}getDisplayIndexFromStoreIndex(e){var t,o;const s=this.nodeMap.getBy("index",e);if(s)return s.node.rowIndex;let r,i;if(this.nodeMap.forEach(l=>{if(e>l.index){(i==null||i.index<l.index)&&(i=l);return}if(r==null||r.index>l.index){r=l;return}}),!r)return this.store.getDisplayIndexEnd()-(this.numberOfRows-e);if(!i)return this.store.getDisplayIndexStart()+e;const n=e-i.index;return((o=(t=i.node.childStore)==null?void 0:t.getDisplayIndexEnd())!=null?o:i.node.rowIndex)+n}createRowAtIndex(e,t,o){var s,r;const i=this.nodeMap.getBy("index",e);if(i){const{node:d}=i;if(d.__needsRefreshWhenVisible=!1,this.doesNodeMatch(t,d))return this.blockUtils.updateDataIntoRowNode(d,t),this.nodesToRefresh.delete(d),d;if(this.getRowIdFunc==null&&d.hasChildren()&&d.expanded)return this.nodesToRefresh.delete(d),d;this.destroyRowAtIndex(e)}if(t&&this.getRowIdFunc!=null){const d=this.getRowId(t),l=d&&((s=this.removedNodeCache)==null?void 0:s.get(d));if(l)return(r=this.removedNodeCache)==null||r.delete(d),this.blockUtils.updateDataIntoRowNode(l,t),this.nodeMap.set({id:l.id,node:l,index:e}),l;const c=this.nodeMap.getBy("id",d);if(c){this.nodeMap.delete(c);const{node:h,index:u}=c;return this.blockUtils.updateDataIntoRowNode(h,t),this.nodeMap.set({id:h.id,node:h,index:e}),this.nodesToRefresh.delete(h),this.getBlockStartIndex(u)===this.getBlockStartIndex(e)||this.markBlockForVerify(u),h}}const n=this.blockUtils.createRowNode(this.store.getRowDetails());if(t!=null){const d=this.getPrefixedId(this.store.getIdSequence().next());this.blockUtils.setDataIntoRowNode(n,t,d,void 0),this.serverSideRowModel.setPaused(!0),this.blockUtils.checkOpenByDefault(n),this.serverSideRowModel.setPaused(!1),this.nodeManager.addRowNode(n)}return this.nodeMap.set({id:n.id,node:n,index:e}),o&&o(n),n}getBlockStates(){const e={},t={};this.nodeMap.forEach(({node:i,index:n})=>{var d;const l=this.getBlockStartIndex(n);!i.stub&&!i.failedLoad&&(e[l]=((d=e[l])!=null?d:0)+1);let c="loaded";i.failedLoad?c="failed":this.lazyBlockLoadingService.isRowLoading(this,l)?c="loading":(this.nodesToRefresh.has(i)||i.stub)&&(c="needsLoading"),t[l]||(t[l]=new Set),t[l].add(c)});const o={loading:4,failed:3,needsLoading:2,loaded:1},s=this.blockUtils.createNodeIdPrefix(this.store.getParentNode()),r={};return Object.entries(t).forEach(([i,n])=>{var d;const c=[...n].sort((g,p)=>{var f,w;return((f=o[g])!=null?f:0)-((w=o[p])!=null?w:0)})[0],h=Number(i)/this.getBlockSize(),u=s?`${s}-${h}`:String(h);r[u]={blockNumber:h,startRow:Number(i),endRow:Number(i)+this.getBlockSize(),pageStatus:c,loadedRowCount:(d=e[i])!=null?d:0}}),r}destroyRowAtIndex(e){const t=this.nodeMap.getBy("index",e);t&&(this.nodeMap.delete(t),this.nodeDisplayIndexMap.delete(t.node.rowIndex),this.nodesToRefresh.size>0?this.removedNodeCache.set(t.node.id,t.node):this.blockUtils.destroyRowNode(t.node),this.nodesToRefresh.delete(t.node))}getSsrmParams(){return this.store.getSsrmParams()}getPrefixedId(e){return this.defaultNodeIdPrefix?this.defaultNodeIdPrefix+"-"+e:e.toString()}markBlockForVerify(e){const[t,o]=this.getBlockBounds(e);this.nodeMap.filter(r=>r.index>=t&&r.index<o).forEach(({node:r})=>{r.__needsRefreshWhenVisible=!0})}doesNodeMatch(e,t){if(t.stub)return!1;if(this.getRowIdFunc!=null){const o=this.getRowId(e);return t.id===o}return t.data===e}purgeStubsOutsideOfViewport(){const e=this.api.getFirstDisplayedRowIndex(),t=this.api.getLastDisplayedRowIndex(),o=this.getBlockStartIndex(e),[s,r]=this.getBlockBounds(t);this.nodeMap.forEach(i=>{this.lazyBlockLoadingService.isRowLoading(this,i.index)||i.node.failedLoad||i.node.stub&&(i.index<o||i.index>r)&&this.destroyRowAtIndex(i.index)})}getBlocksDistanceFromRow(e,t){const o={};return e.forEach(({node:s,index:r})=>{const[i,n]=this.getBlockBounds(r);if(i in o)return;const d=Math.abs(s.rowIndex-t);let l;const c=this.nodeMap.getBy("index",[n-1]);c&&(l=Math.abs(c.node.rowIndex-t));const h=l==null||d<l?d:l;o[i]=h}),Object.entries(o)}purgeExcessRows(){var e;if(this.purgeStubsOutsideOfViewport(),this.store.getDisplayIndexEnd()==null||this.storeParams.maxBlocksInCache==null)return;const t=this.api.getFirstDisplayedRowIndex(),o=this.api.getLastDisplayedRowIndex(),s=new Set,r=new Set;this.nodeMap.forEach(({index:f,node:w})=>{const y=this.getBlockStartIndex(f);s.add(y),w.rowIndex>=t&&w.rowIndex<=o&&r.add(y)});const i=Math.max(r.size,(e=this.storeParams.maxBlocksInCache)!=null?e:0),d=s.size-i;if(d<=0)return;let l=Number.MAX_SAFE_INTEGER,c=Number.MIN_SAFE_INTEGER;r.forEach(f=>{l>f&&(l=f),c<f&&(c=f)});const h=this.nodeMap.filter(({node:f,index:w})=>{const y=this.getBlockStartIndex(w);return!(y>=l&&y<=c)&&!this.isNodeCached(f)});if(h.length===0)return;const u=t+(o-t)/2,g=this.getBlocksDistanceFromRow(h,u),p=this.getBlockSize();g.sort((f,w)=>Math.sign(w[1]-f[1]));for(let f=0;f<Math.min(d,g.length);f++){const w=Number(g[f][0]);for(let y=w;y<w+p;y++){const W=this.nodeMap.getBy("index",y);!W||this.isNodeCached(W.node)||this.destroyRowAtIndex(y)}}}isNodeFocused(e){const t=this.focusService.getFocusCellToUseAfterRefresh();return!t||t.rowPinned!=null?!1:t.rowIndex===e.rowIndex}isNodeCached(e){return e.isExpandable()&&e.expanded||this.isNodeFocused(e)}extractDuplicateIds(e){if(this.getRowIdFunc==null)return[];const t=new Set,o=new Set;return e.forEach(s=>{const r=this.getRowId(s);if(t.has(r)){o.add(r);return}t.add(r)}),[...o]}onLoadSuccess(e,t,o){if(!this.live)return;const s=o.groupLevelInfo;if(this.store.setStoreInfo(s),this.getRowIdFunc!=null){const n=this.extractDuplicateIds(o.rowData);if(n.length>0){const d=n.join(", ");console.warn(`AG Grid: Unable to display rows as duplicate row ids (${d}) were returned by the getRowId callback. Please modify the getRowId callback to provide unique ids.`),this.onLoadFailed(e,t);return}}o.pivotResultFields&&this.serverSideRowModel.generateSecondaryColumns(o.pivotResultFields);const r=this.nodesToRefresh.size>0;if(o.rowData.forEach((n,d)=>{var l;const c=e+d,h=this.nodeMap.getBy("index",c);if((l=h?.node)!=null&&l.stub){this.createRowAtIndex(c,n);return}if(h&&this.doesNodeMatch(n,h.node)){this.blockUtils.updateDataIntoRowNode(h.node,n),this.nodesToRefresh.delete(h.node),h.node.__needsRefreshWhenVisible=!1;return}this.createRowAtIndex(c,n)}),o.rowCount!=null&&o.rowCount!==-1)this.numberOfRows=o.rowCount,this.isLastRowKnown=!0;else if(t>o.rowData.length)this.numberOfRows=e+o.rowData.length,this.isLastRowKnown=!0;else if(!this.isLastRowKnown){const n=e+o.rowData.length+1;n>this.numberOfRows&&(this.numberOfRows=n)}this.isLastRowKnown&&this.nodeMap.filter(d=>d.index>=this.numberOfRows).forEach(d=>this.destroyRowAtIndex(d.index)),this.fireStoreUpdatedEvent();const i=this.nodesToRefresh.size===0;r&&i&&this.fireRefreshFinishedEvent()}fireRefreshFinishedEvent(){this.nodesToRefresh.size===0&&(this.removedNodeCache.forEach(t=>{this.blockUtils.destroyRowNode(t)}),this.removedNodeCache=new Map,this.store.fireRefreshFinishedEvent())}isStoreFullyLoaded(){const e=this.isLastRowKnown,t=this.nodeMap.getSize()===this.numberOfRows;if(!e||!t||this.nodesToRefresh.size>0)return;let o=-1;return this.nodeMap.find(r=>(o+=1,!!(r.index!==o||r.node.__needsRefreshWhenVisible||r.node.stub)))==null}isLastRowIndexKnown(){return this.isLastRowKnown}onLoadFailed(e,t){var o;if(!this.live)return;const s=this.nodesToRefresh.size>0;for(let i=e;i<e+t&&i<this.getRowCount();i++){let{node:n}=(o=this.nodeMap.getBy("index",i))!=null?o:{};n&&this.nodesToRefresh.delete(n),(!n||!n.stub)&&(n&&!n.stub&&this.destroyRowAtIndex(i),n=this.createRowAtIndex(i)),n.__needsRefreshWhenVisible=!1,n.failedLoad=!0}const r=this.nodesToRefresh.size===0;s&&r&&this.fireRefreshFinishedEvent(),this.fireStoreUpdatedEvent()}markNodesForRefresh(){this.nodeMap.forEach(e=>{e.node.stub&&!e.node.failedLoad||this.nodesToRefresh.add(e.node)}),this.lazyBlockLoadingService.queueLoadCheck(),this.isLastRowKnown&&this.numberOfRows===0&&(this.numberOfRows=1,this.isLastRowKnown=!1,this.fireStoreUpdatedEvent())}isNodeInCache(e){return!!this.nodeMap.getBy("id",e)}fireStoreUpdatedEvent(){this.live&&this.store.fireStoreUpdatedEvent()}getRowId(e){if(this.getRowIdFunc==null)return null;const{level:t}=this.store.getRowDetails(),o=this.store.getParentNode().getGroupKeys(),s=this.getRowIdFunc({data:e,parentKeys:o.length>0?o:void 0,level:t});return String(s)}getOrderedNodeMap(){const e={};return this.nodeMap.forEach(t=>e[t.index]=t),e}clearDisplayIndexes(){this.nodeDisplayIndexMap.clear()}clientSideSortRows(){const e=this.sortController.getSortOptions();if(!e.some(r=>r.sort!=null))return;const o=new Array(this.nodeMap.getSize());this.nodeMap.forEach(r=>o[r.index]=r.node),this.nodeMap.clear(),this.rowNodeSorter.doFullSort(o,e).forEach((r,i)=>{this.nodeMap.set({id:r.id,node:r,index:i})})}updateRowNodes(e){if(this.getRowIdFunc==null)throw new Error("AG Grid: Transactions can only be applied when row ids are supplied.");const t=[];return e.forEach(o=>{const s=this.getRowId(o),r=this.nodeMap.getBy("id",s);r&&(this.blockUtils.updateDataIntoRowNode(r.node,o),t.push(r.node))}),t}insertRowNodes(e,t){const o=this.store.getRowCount()-(this.store.getParentNode().sibling?1:0),s=t==null&&this.isLastRowKnown?o:t;if(s==null||o<s)return[];if(this.getRowIdFunc==null)throw new Error("AG Grid: Transactions can only be applied when row ids are supplied.");const r={};e.forEach(l=>{const c=this.getRowId(l);c&&this.isNodeInCache(c)||(r[c]=l)});const i=Object.values(r);let n=i.length;if(n===0)return[];const d=this.nodeMap.filter(l=>l.index>=s);return d.forEach(l=>this.nodeMap.delete(l)),d.forEach(l=>{this.nodeMap.set({node:l.node,index:l.index+n,id:l.id})}),this.numberOfRows+=n,i.map((l,c)=>this.createRowAtIndex(s+c,l))}removeRowNodes(e){if(this.getRowIdFunc==null)throw new Error("AG Grid: Transactions can only be applied when row ids are supplied.");const t=[],o=[];let s=0;const r=[...e],i=this.getOrderedNodeMap();let n=-1;for(let d in i){n+=1;const l=i[d],c=r.findIndex(u=>u===l.id);if(c!==-1){r.splice(c,1),this.destroyRowAtIndex(Number(d)),t.push(l.node),s+=1;continue}if(s===0)continue;const h=Number(d);n!==h&&o.push(l.node),this.nodeMap.delete(i[d]),this.nodeMap.set({id:l.id,node:l.node,index:h-s})}return this.numberOfRows-=this.isLastRowIndexKnown()?e.length:s,r.length>0&&o.length>0&&(o.forEach(d=>d.__needsRefreshWhenVisible=!0),this.lazyBlockLoadingService.queueLoadCheck()),t}getBlockSize(){return this.storeParams.cacheBlockSize||E.DEFAULT_BLOCK_SIZE}getBlockStartIndex(e){const t=this.getBlockSize();return e-e%t}getBlockBounds(e){const t=this.getBlockStartIndex(e),o=this.getBlockSize();return[t,t+o]}};a([x("gridApi")],R.prototype,"api",2),a([x("ssrmBlockUtils")],R.prototype,"blockUtils",2),a([x("focusService")],R.prototype,"focusService",2),a([x("ssrmNodeManager")],R.prototype,"nodeManager",2),a([x("rowModel")],R.prototype,"serverSideRowModel",2),a([x("rowNodeSorter")],R.prototype,"rowNodeSorter",2),a([x("sortController")],R.prototype,"sortController",2),a([x("lazyBlockLoadingService")],R.prototype,"lazyBlockLoadingService",2),a([Ke],R.prototype,"init",1),a([We],R.prototype,"destroyRowNodes",1);var C=class extends Ve{constructor(e,t,o){super(),this.idSequence=new Q,this.ssrmParams=e,this.parentRowNode=o,this.storeParams=t,this.level=o.level+1,this.group=e.rowGroupCols?this.level<e.rowGroupCols.length:!1,this.leafGroup=e.rowGroupCols?this.level===e.rowGroupCols.length-1:!1,this.info={}}init(){var e;let t=1;if(this.level===0&&(t=(e=this.storeUtils.getServerSideInitialRowCount())!=null?e:1,this.eventService.dispatchEventOnce({type:re.EVENT_ROW_COUNT_READY})),this.cache=this.createManagedBean(new R(this,t,this.storeParams)),!this.gos.get("treeData")&&this.group){const s=this.ssrmParams.rowGroupCols[this.level];this.groupField=s.field,this.rowGroupColumn=this.columnModel.getRowGroupColumns()[this.level]}}destroyRowNodes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.destroyBean(this.cache)}applyRowData(e,t,o){this.cache.onLoadSuccess(t,o,e)}applyTransaction(e){var t,o,s;const r=this.gos.getCallback("getRowId");if(!r)return console.warn("AG Grid: getRowId callback must be implemented for transactions to work. Transaction was ignored."),{status:ie.Cancelled};const i=this.gos.getCallback("isApplyServerSideTransaction");if(i){const p={transaction:e,parentNode:this.parentRowNode,groupLevelInfo:this.info};if(!i(p))return{status:ie.Cancelled}}const n=this.cache.isStoreFullyLoaded();let d;(t=e.update)!=null&&t.length&&(d=this.cache.updateRowNodes(e.update));let l;if((o=e.add)!=null&&o.length){let p=e.addIndex;p!=null&&p<0&&(p=void 0),l=this.cache.insertRowNodes(e.add,p)}let c;if((s=e.remove)!=null&&s.length){const p=e.remove.map(w=>r({level:this.level,parentKeys:this.parentRowNode.getGroupKeys(),data:w})),f=[...new Set(p)];c=this.cache.removeRowNodes(f)}const h=this.gos.get("serverSideEnableClientSideSort"),u=d?.length||l?.length;return n&&h&&u&&this.cache.clientSideSortRows(),this.updateSelectionAfterTransaction(d,c),{status:ie.Applied,update:d,add:l,remove:c}}updateSelectionAfterTransaction(e,t){const o=[];e?.forEach(s=>{s.isSelected()&&!s.selectable&&o.push(s)}),t?.forEach(s=>{s.isSelected()&&o.push(s)}),o.length&&this.selectionService.setNodesSelected({newValue:!1,clearSelection:!1,nodes:o,source:"rowDataChanged"})}clearDisplayIndexes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.cache.getNodes().forEach(e=>this.blockUtils.clearDisplayIndex(e.node)),this.parentRowNode.sibling&&this.blockUtils.clearDisplayIndex(this.parentRowNode.sibling),this.cache.clearDisplayIndexes()}getDisplayIndexStart(){return this.displayIndexStart}getDisplayIndexEnd(){return this.displayIndexEnd}getRowCount(){return this.parentRowNode.sibling?this.cache.getRowCount()+1:this.cache.getRowCount()}setRowCount(e,t){this.cache.setRowCount(e,t)}isDisplayIndexInStore(e){return this.cache.getRowCount()===0?!1:this.displayIndexStart<=e&&e<this.getDisplayIndexEnd()}setDisplayIndexes(e,t){this.displayIndexStart=e.peek(),this.topPx=t.value;const o=this.parentRowNode.level>-1&&this.gos.getGroupTotalRowCallback()({node:this.parentRowNode});o||this.parentRowNode.destroyFooter(),o==="top"&&(this.parentRowNode.createFooter(),this.blockUtils.setDisplayIndex(this.parentRowNode.sibling,e,t)),this.cache.setDisplayIndexes(e,t),o==="bottom"&&(this.parentRowNode.createFooter(),this.blockUtils.setDisplayIndex(this.parentRowNode.sibling,e,t)),this.displayIndexEnd=e.peek(),this.heightPx=t.value-this.topPx}forEachStoreDeep(e,t=new Q){e(this,t.next()),this.cache.getNodes().forEach(o=>{const s=o.node.childStore;s&&s.forEachStoreDeep(e,t)})}forEachNodeDeep(e,t=new Q){this.cache.getNodes().forEach(o=>{e(o.node,t.next());const s=o.node.childStore;s&&s.forEachNodeDeep(e,t)})}forEachNodeDeepAfterFilterAndSort(e,t=new Q,o=!1){const s=this.parentRowNode.level>-1&&this.gos.getGroupTotalRowCallback()({node:this.parentRowNode});s==="top"&&e(this.parentRowNode.sibling,t.next());const r=this.cache.getOrderedNodeMap();for(let i in r){const n=r[i];e(n.node,t.next());const d=n.node.childStore;d&&d.forEachNodeDeepAfterFilterAndSort(e,t,o)}s==="bottom"&&e(this.parentRowNode.sibling,t.next())}retryLoads(){this.cache.getNodes().forEach(({node:e})=>{e.failedLoad&&(e.failedLoad=!1,e.__needsRefreshWhenVisible=!0,e.stub=!0)}),this.forEachChildStoreShallow(e=>e.retryLoads()),this.fireStoreUpdatedEvent()}getRowUsingDisplayIndex(e){return this.parentRowNode.sibling&&e===this.parentRowNode.sibling.rowIndex?this.parentRowNode.sibling:this.cache.getRowByDisplayIndex(e)}getRowBounds(e){var t;if(!this.isDisplayIndexInStore(e))return null;const o=this.cache.getNodeCachedByDisplayIndex(e);if(o){const l=this.blockUtils.extractRowBounds(o,e);if(l)return l}const{previousNode:s,nextNode:r}=(t=this.cache.getSurroundingNodesByDisplayIndex(e))!=null?t:{};if(s){const l=this.blockUtils.extractRowBounds(s.node,e);if(l!=null)return l}const i=this.gos.getRowHeightAsNumber();if(r){const l=(r.node.rowIndex-e)*i;return{rowTop:r.node.rowTop-l,rowHeight:i}}const n=this.topPx+this.heightPx,d=(this.getDisplayIndexEnd()-e)*i;return{rowTop:n-d,rowHeight:i}}isPixelInRange(e){return e>=this.topPx&&e<this.topPx+this.heightPx}getRowIndexAtPixel(e){if(e<this.topPx)return this.getDisplayIndexStart();if(e>=this.topPx+this.heightPx)return this.getDisplayIndexEnd()-1;if(this.parentRowNode.sibling&&e>this.parentRowNode.sibling.rowTop&&e<this.parentRowNode.sibling.rowTop+this.parentRowNode.sibling.rowHeight)return this.parentRowNode.sibling.rowIndex;let t=Number.MAX_SAFE_INTEGER,o=null,s=Number.MAX_SAFE_INTEGER,r=null;if(this.cache.getNodes().forEach(({node:l})=>{const c=Math.abs(e-l.rowTop);if(l.rowTop<e){c<t&&(t=c,o=l);return}c<s&&(s=c,r=l)}),o=o,r=r,o){const l=this.blockUtils.getIndexAtPixel(o,e);if(l!=null)return l}const i=this.gos.getRowHeightAsNumber();if(r){const l=r.rowTop,c=Math.ceil((l-e)/i);return r.rowIndex-c}const n=this.topPx+this.heightPx,d=Math.floor((n-e)/i);return this.getDisplayIndexEnd()-d}getChildStore(e){return this.storeUtils.getChildStore(e,this,t=>{const o=this.cache.getNodes().find(s=>s.node.key==t);return o?o.node:null})}forEachChildStoreShallow(e){this.cache.getNodes().forEach(({node:t})=>{t.childStore&&e(t.childStore)})}refreshAfterSort(e){if(this.storeUtils.isServerSideSortAllLevels()||this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e)){const o=this.cache.isStoreFullyLoaded(),s=this.gos.get("serverSideEnableClientSideSort");if(!(o&&s)){const i=this.cache.getRowCount();this.destroyBean(this.cache),this.cache=this.createManagedBean(new R(this,i,this.storeParams));return}this.cache.clientSideSortRows()}this.forEachChildStoreShallow(o=>o.refreshAfterSort(e))}refreshAfterFilter(e){if(!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e)){this.refreshStore(!0);return}this.forEachChildStoreShallow(o=>o.refreshAfterFilter(e))}refreshStore(e){if(e){this.destroyBean(this.cache),this.cache=this.createManagedBean(new R(this,1,this.storeParams)),this.fireStoreUpdatedEvent();return}this.cache.markNodesForRefresh()}getTopLevelRowDisplayedIndex(e){const t=this.cache.getDisplayIndexFromStoreIndex(e);return t??e}isLastRowIndexKnown(){return this.cache.isLastRowIndexKnown()}getRowNodesInRange(e,t){const o=[];let s=!1;return Ue.missing(e)&&(s=!0),this.cache.getNodes().filter(({node:r})=>r.rowIndex>=e.rowIndex&&r.rowIndex<=t.rowIndex).map(({node:r})=>r)}addStoreStates(e){e.push({suppressInfiniteScroll:!1,route:this.parentRowNode.getGroupKeys(),rowCount:this.getRowCount(),lastRowIndexKnown:this.isLastRowIndexKnown(),info:this.info,maxBlocksInCache:this.storeParams.maxBlocksInCache,cacheBlockSize:this.storeParams.cacheBlockSize}),this.forEachChildStoreShallow(t=>t.addStoreStates(e))}getIdSequence(){return this.idSequence}getParentNode(){return this.parentRowNode}getRowDetails(){return{field:this.groupField,group:this.group,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn}}getSsrmParams(){return this.ssrmParams}setStoreInfo(e){e&&Object.assign(this.info,e)}fireStoreUpdatedEvent(){const e={type:re.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(e)}fireRefreshFinishedEvent(){const e={type:re.EVENT_STORE_REFRESHED,route:this.parentRowNode.getRoute()};this.eventService.dispatchEvent(e)}getBlockStates(){return this.cache.getBlockStates()}getStoreBounds(){return{topPx:this.topPx,heightPx:this.heightPx}}getCache(){return this.cache}};a([Y("ssrmBlockUtils")],C.prototype,"blockUtils",2),a([Y("ssrmStoreUtils")],C.prototype,"storeUtils",2),a([Y("columnModel")],C.prototype,"columnModel",2),a([Y("selectionService")],C.prototype,"selectionService",2),a([He],C.prototype,"init",1),a([ze],C.prototype,"destroyRowNodes",1);var v=class extends Be{constructor(){super(...arguments),this.onRowHeightChanged_debounced=_.debounce(this.onRowHeightChanged.bind(this),100),this.pauseStoreUpdateListening=!1,this.started=!1,this.managingPivotResultColumns=!1}ensureRowHeightsValid(){return!1}start(){this.started=!0,this.updateDatasource()}destroyDatasource(){this.datasource&&(this.datasource.destroy&&this.datasource.destroy(),this.rowRenderer.datasourceChanged(),this.datasource=void 0)}addEventListeners(){this.addManagedListener(this.eventService,D.EVENT_NEW_COLUMNS_LOADED,this.onColumnEverything.bind(this)),this.addManagedListener(this.eventService,D.EVENT_STORE_UPDATED,this.onStoreUpdated.bind(this));const e=this.resetRootStore.bind(this);this.addManagedListener(this.eventService,D.EVENT_COLUMN_VALUE_CHANGED,e),this.addManagedListener(this.eventService,D.EVENT_COLUMN_PIVOT_CHANGED,e),this.addManagedListener(this.eventService,D.EVENT_COLUMN_ROW_GROUP_CHANGED,e),this.addManagedListener(this.eventService,D.EVENT_COLUMN_PIVOT_MODE_CHANGED,e),this.addManagedPropertyListeners(["masterDetail","treeData","removePivotHeaderRowWhenSingleValueColumn","suppressServerSideInfiniteScroll","cacheBlockSize"],e),this.addManagedPropertyListener("rowHeight",()=>this.resetRowHeights()),this.verifyProps(),this.addManagedPropertyListener("serverSideDatasource",()=>this.updateDatasource())}updateDatasource(){const e=this.gos.get("serverSideDatasource");e&&this.setDatasource(e)}verifyProps(){this.gos.exists("initialGroupOrderComparator")&&_.warnOnce("initialGroupOrderComparator cannot be used with Server Side Row Model."),this.gos.isRowSelection()&&!this.gos.exists("getRowId")&&_.warnOnce("getRowId callback must be provided for Server Side Row Model selection to work correctly.")}setDatasource(e){this.started&&(this.destroyDatasource(),this.datasource=e,this.resetRootStore())}applyRowData(e,t,o){const s=this.getRootStore();if(!s)return;const r=s.getChildStore(o);r&&(r instanceof C?r.applyRowData(e,t,e.rowData.length):r instanceof S&&r.processServerResult(e))}isLastRowIndexKnown(){const e=this.getRootStore();return e?e.isLastRowIndexKnown():!1}onColumnEverything(){if(!this.storeParams){this.resetRootStore();return}const e=this.columnsToValueObjects(this.columnModel.getRowGroupColumns()),t=this.columnsToValueObjects(this.columnModel.getValueColumns()),o=this.columnsToValueObjects(this.columnModel.getPivotColumns()),s=c=>{const h={};c.oldCols.forEach(p=>h[p.id]=p);const u=c.newCols.every(p=>{const f=h[p.id];return f&&delete h[p.id],f&&f.field===p.field&&f.aggFunc===p.aggFunc}),g=!c.allowRemovedColumns&&!!Object.values(h).length;return u&&!g},r=!_.jsonEquals(this.storeParams.sortModel,this.sortController.getSortModel()),i=!s({oldCols:this.storeParams.rowGroupCols,newCols:e}),n=!s({oldCols:this.storeParams.pivotCols,newCols:o}),d=!!e?.length&&!s({oldCols:this.storeParams.valueCols,newCols:t,allowRemovedColumns:!0});if(r||i||n||d)this.resetRootStore();else{const c=this.createStoreParams();this.storeParams.rowGroupCols=c.rowGroupCols,this.storeParams.pivotCols=c.pivotCols,this.storeParams.valueCols=c.valueCols}}destroyRootStore(){!this.rootNode||!this.rootNode.childStore||(this.rootNode.childStore=this.destroyBean(this.rootNode.childStore),this.nodeManager.clear())}refreshAfterSort(e,t){this.storeParams&&(this.storeParams.sortModel=e);const o=this.getRootStore();o&&(o.refreshAfterSort(t),this.onStoreUpdated())}generateSecondaryColumns(e){if(!this.pivotColDefService){Ge.__assertRegistered(Fe.RowGroupingModule,"pivotResultFields",this.context.getGridId());return}const t=this.pivotColDefService.createColDefsFromFields(e);this.managingPivotResultColumns=!0,this.columnModel.setSecondaryColumns(t,"rowModelUpdated")}resetRowHeights(){const e=this.resetRowHeightsForAllRowNodes(),t=this.gos.getRowHeightForNode(this.rootNode);if(this.rootNode.setRowHeight(t.height,t.estimated),this.rootNode.sibling){const o=this.gos.getRowHeightForNode(this.rootNode.sibling);this.rootNode.sibling.setRowHeight(o.height,o.estimated)}e&&this.onRowHeightChanged()}resetRowHeightsForAllRowNodes(){let e=!1;return this.forEachNode(t=>{const o=this.gos.getRowHeightForNode(t);t.setRowHeight(o.height,o.estimated);const s=t.detailNode;if(s){const r=this.gos.getRowHeightForNode(s);s.setRowHeight(r.height,r.estimated)}if(t.sibling){const r=this.gos.getRowHeightForNode(t.sibling);s.setRowHeight(r.height,r.estimated)}e=!0}),e}resetRootStore(){this.destroyRootStore(),this.rootNode=new Pe(this.beans),this.rootNode.group=!0,this.rootNode.level=-1,this.datasource&&(this.storeParams=this.createStoreParams(),this.rootNode.childStore=this.createBean(this.storeFactory.createStore(this.storeParams,this.rootNode)),this.updateRowIndexesAndBounds()),this.managingPivotResultColumns&&(this.columnModel.setSecondaryColumns(null,"api"),this.managingPivotResultColumns=!1),this.dispatchModelUpdated(!0)}columnsToValueObjects(e){return e.map(t=>({id:t.getId(),aggFunc:t.getAggFunc(),displayName:this.columnModel.getDisplayNameForColumn(t,"model"),field:t.getColDef().field}))}createStoreParams(){const e=this.columnsToValueObjects(this.columnModel.getRowGroupColumns()),t=this.columnsToValueObjects(this.columnModel.getValueColumns()),o=this.columnsToValueObjects(this.columnModel.getPivotColumns()),s=this.gos.isGetRowHeightFunction();return{valueCols:t,rowGroupCols:e,pivotCols:o,pivotMode:this.columnModel.isPivotMode(),filterModel:this.filterManager.isAdvancedFilterEnabled()?this.filterManager.getAdvancedFilterModel():this.filterManager.getFilterModel(),sortModel:this.sortController.getSortModel(),datasource:this.datasource,lastAccessedSequence:new ve,dynamicRowHeight:s}}getParams(){return this.storeParams}dispatchModelUpdated(e=!1){const t={type:D.EVENT_MODEL_UPDATED,animate:!e,keepRenderedRows:!e,newPage:!1,newData:!1};this.eventService.dispatchEvent(t)}onStoreUpdated(){this.pauseStoreUpdateListening||(this.updateRowIndexesAndBounds(),this.dispatchModelUpdated())}onRowHeightChangedDebounced(){this.onRowHeightChanged_debounced()}onRowHeightChanged(){this.updateRowIndexesAndBounds(),this.dispatchModelUpdated()}updateRowIndexesAndBounds(){const e=this.getRootStore();e&&e.setDisplayIndexes(new ve,{value:0})}retryLoads(){const e=this.getRootStore();e&&(e.retryLoads(),this.onStoreUpdated())}getRow(e){const t=this.getRootStore();if(t)return t.getRowUsingDisplayIndex(e)}setPaused(e){this.pauseStoreUpdateListening=e}expandAll(e){this.pauseStoreUpdateListening=!0,this.forEachNode(t=>{t.stub||t.hasChildren()&&t.setExpanded(e)}),this.pauseStoreUpdateListening=!1,this.onStoreUpdated()}refreshAfterFilter(e,t){this.storeParams&&(this.storeParams.filterModel=e);const o=this.getRootStore();o&&(o.refreshAfterFilter(t),this.onStoreUpdated())}getRootStore(){if(this.rootNode&&this.rootNode.childStore)return this.rootNode.childStore}getRowCount(){const e=this.getRootStore();return e?e.getDisplayIndexEnd():0}getTopLevelRowCount(){const e=this.getRootStore();return e?e.getRowCount():1}getTopLevelRowDisplayedIndex(e){const t=this.getRootStore();return t?t.getTopLevelRowDisplayedIndex(e):e}getRowBounds(e){const t=this.getRootStore();return t?t.getRowBounds(e):{rowTop:0,rowHeight:this.gos.getRowHeightAsNumber()}}getBlockStates(){const e=this.getRootStore();if(!e)return;const t={};return e.forEachStoreDeep(o=>{if(o instanceof S){const{id:s,state:r}=o.getBlockStateJson();t[s]=r}else if(o instanceof C)Object.entries(o.getBlockStates()).forEach(([s,r])=>{t[s]=r});else throw new Error("AG Grid: Unsupported store type")}),t}getRowIndexAtPixel(e){const t=this.getRootStore();return e<=0||!t?0:t.getRowIndexAtPixel(e)}isEmpty(){return!1}isRowsToRender(){return this.getRootStore()!=null&&this.getRowCount()>0}getType(){return"serverSide"}forEachNode(e){const t=this.getRootStore();t&&t.forEachNodeDeep(e)}forEachNodeAfterFilterAndSort(e,t=!1){const o=this.getRootStore();o&&o.forEachNodeDeepAfterFilterAndSort(e,void 0,t)}executeOnStore(e,t){if(!this.started)return!1;const o=this.getRootStore();if(!o)return!0;const s=o.getChildStore(e);return s&&t(s),!0}refreshStore(e={}){const t=e.route?e.route:[];this.executeOnStore(t,o=>o.refreshStore(e.purge==!0))}getStoreState(){const e=[],t=this.getRootStore();return t&&t.addStoreStates(e),e}getNodesInRangeForSelection(e,t){if(!_.exists(e))return[];if(!t)return[e];const o=e.rowIndex,s=t.rowIndex;if(o===null||s===null)return[e];const r=[],[i,n]=[o,s].sort((d,l)=>d-l);return this.forEachNode(d=>{const l=d.rowIndex;l==null||d.stub||l>=i&&l<=n&&r.push(d)}),r.length!==n-i+1?[e]:r}getRowNode(e){let t;return this.forEachNode(o=>{o.id===e&&(t=o),o.detailNode&&o.detailNode.id===e&&(t=o.detailNode)}),t}isRowPresent(e){return!!this.getRowNode(e.id)}setRowCount(e,t){const o=this.getRootStore();if(o){if(o instanceof C){o.setRowCount(e,t);return}console.error("AG Grid: Infinite scrolling must be enabled in order to set the row count.")}}};a([M("columnModel")],v.prototype,"columnModel",2),a([M("filterManager")],v.prototype,"filterManager",2),a([M("sortController")],v.prototype,"sortController",2),a([M("rowRenderer")],v.prototype,"rowRenderer",2),a([M("ssrmNodeManager")],v.prototype,"nodeManager",2),a([M("ssrmStoreFactory")],v.prototype,"storeFactory",2),a([M("beans")],v.prototype,"beans",2),a([ke("pivotColDefService")],v.prototype,"pivotColDefService",2),a([Re],v.prototype,"destroyDatasource",1),a([Le],v.prototype,"addEventListeners",1),a([Re],v.prototype,"destroyRootStore",1),v=a([Te("rowModel")],v);import{_ as le,Autowired as de,Bean as Xe,BeanStub as Ze}from"@ag-grid-community/core";var G=class extends Ze{loadFromDatasource(e){const{storeParams:t,parentBlock:o,parentNode:s}=e,r=s.getGroupKeys();if(!t.datasource)return;const i={startRow:e.startRow,endRow:e.endRow,rowGroupCols:t.rowGroupCols,valueCols:t.valueCols,pivotCols:t.pivotCols,pivotMode:t.pivotMode,groupKeys:r,filterModel:t.filterModel,sortModel:t.sortModel},n=this.gos.addGridCommonParams({success:e.success,fail:e.fail,request:i,parentNode:e.parentNode});window.setTimeout(()=>{if(!t.datasource||!o.isAlive()){e.fail();return}t.datasource.getRows(n)},0)}getChildStore(e,t,o){if(le.missingOrEmpty(e))return t;const s=e[0],r=o(s);if(r){if(e.length===1&&!r.childStore){const d=this.serverSideRowModel.getParams();r.childStore=this.createBean(this.storeFactory.createStore(d,r))}const i=e.slice(1,e.length),n=r.childStore;return n?n.getChildStore(i):null}return null}isServerRefreshNeeded(e,t,o){if(o.valueColChanged||o.secondaryColChanged)return!0;const s=e.level+1;if(!(s<t.length))return!0;const n=t[s].id;return o.changedColumns.indexOf(n)>-1?!0:this.columnModel.getAllGridColumns().filter(h=>h.getColDef().showRowGroup&&o.changedColumns.includes(h.getId())).map(h=>h.getColDef().showRowGroup).some(h=>h===!0||h===n)}getServerSideInitialRowCount(){return this.gos.get("serverSideInitialRowCount")}assertRowModelIsServerSide(e){return this.gos.isRowModelType("serverSide")?!0:(le.warnOnce(`The '${e}' property can only be used with the Server Side Row Model.`),!1)}assertNotTreeData(e){return this.gos.get("treeData")?(le.warnOnce(`The '${e}' property cannot be used while using tree data.`),!1):!0}isServerSideSortAllLevels(){return this.gos.get("serverSideSortAllLevels")&&this.assertRowModelIsServerSide("serverSideSortAllLevels")}isServerSideOnlyRefreshFilteredGroups(){return this.gos.get("serverSideOnlyRefreshFilteredGroups")&&this.assertRowModelIsServerSide("serverSideOnlyRefreshFilteredGroups")}isServerSideSortOnServer(){return this.gos.get("serverSideSortOnServer")&&this.assertRowModelIsServerSide("serverSideSortOnServer")&&this.assertNotTreeData("serverSideSortOnServer")}isServerSideFilterOnServer(){return this.gos.get("serverSideFilterOnServer")&&this.assertRowModelIsServerSide("serverSideFilterOnServer")&&this.assertNotTreeData("serverSideFilterOnServer")}};a([de("columnModel")],G.prototype,"columnModel",2),a([de("rowModel")],G.prototype,"serverSideRowModel",2),a([de("ssrmStoreFactory")],G.prototype,"storeFactory",2),G=a([Xe("ssrmStoreUtils")],G);import{_ as m,Autowired as V,Bean as et,BeanStub as tt,RowNode as ot}from"@ag-grid-community/core";var st="ag-Grid-MissingKey",A=class extends tt{createRowNode(e){const t=new ot(this.beans),o=e.rowHeight!=null?e.rowHeight:this.gos.getRowHeightAsNumber();return t.setRowHeight(o),t.group=e.group,t.leafGroup=e.leafGroup,t.level=e.level,t.uiLevel=e.level,t.parent=e.parent,t.stub=!0,t.__needsRefreshWhenVisible=!1,t.group&&(t.expanded=!1,t.field=e.field,t.rowGroupColumn=e.rowGroupColumn),t}destroyRowNodes(e){e&&e.forEach(t=>this.destroyRowNode(t))}destroyRowNode(e,t=!1){e.childStore&&!t&&(this.destroyBean(e.childStore),e.childStore=null),e.sibling&&!e.footer&&this.destroyRowNode(e.sibling,!1),e.clearRowTopAndRowIndex(),e.id!=null&&this.nodeManager.removeNode(e)}setTreeGroupInfo(e){e.updateHasChildren();const t=this.gos.get("getServerSideGroupKey");e.hasChildren()&&t!=null&&(e.key=t(e.data)),!e.hasChildren()&&e.childStore!=null&&(this.destroyBean(e.childStore),e.childStore=null,e.expanded=!1)}setRowGroupInfo(e){e.key=this.valueService.getValue(e.rowGroupColumn,e),(e.key===null||e.key===void 0)&&m.doOnce(()=>{console.warn("AG Grid: null and undefined values are not allowed for server side row model keys"),e.rowGroupColumn&&console.warn(`column = ${e.rowGroupColumn.getId()}`),console.warn("data is ",e.data)},"ServerSideBlock-CannotHaveNullOrUndefinedForKey"),this.beans.gos.getGroupTotalRowCallback()({node:e})&&(e.createFooter(),e.sibling&&(e.sibling.uiLevel=e.uiLevel+1))}setMasterDetailInfo(e){const t=this.gos.get("isRowMaster");t!=null?e.master=t(e.data):e.master=!0}updateDataIntoRowNode(e,t){e.updateData(t),this.gos.get("treeData")?(this.setTreeGroupInfo(e),this.setChildCountIntoRowNode(e)):e.group?(this.setChildCountIntoRowNode(e),e.footer||(this.beans.gos.getGroupTotalRowCallback()({node:e})?e.sibling?e.sibling.updateData(t):e.createFooter():e.sibling&&e.destroyFooter())):this.gos.get("masterDetail")}setDataIntoRowNode(e,t,o,s){var r;e.stub=!1;const i=this.gos.get("treeData");m.exists(t)?(e.setDataAndId(t,o),i?this.setTreeGroupInfo(e):e.group?this.setRowGroupInfo(e):this.gos.get("masterDetail")&&this.setMasterDetailInfo(e)):(e.setDataAndId(void 0,void 0),e.key=null),(i||e.group)&&(this.setGroupDataIntoRowNode(e),this.setChildCountIntoRowNode(e)),m.exists(t)&&(e.setRowHeight(this.gos.getRowHeightForNode(e,!1,s).height),(r=e.sibling)==null||r.setRowHeight(this.gos.getRowHeightForNode(e.sibling,!1,s).height))}setChildCountIntoRowNode(e){const t=this.gos.get("getChildCount");t&&e.setAllChildrenCount(t(e.data))}setGroupDataIntoRowNode(e){const t=this.columnModel.getGroupDisplayColumns(),o=this.gos.get("treeData");t.forEach(s=>{if(e.groupData==null&&(e.groupData={}),o)e.groupData[s.getColId()]=e.key;else if(s.isRowGroupDisplayed(e.rowGroupColumn.getId())){const r=this.valueService.getValue(e.rowGroupColumn,e);e.groupData[s.getColId()]=r}})}clearDisplayIndex(e){e.clearRowTopAndRowIndex(),e.hasChildren()&&m.exists(e.childStore)&&e.childStore.clearDisplayIndexes(),e.master&&e.detailNode&&e.detailNode.clearRowTopAndRowIndex()}setDisplayIndex(e,t,o){if(e.setRowIndex(t.next()),e.setRowTop(o.value),o.value+=e.rowHeight,e.footer)return;if(e.master&&(e.expanded&&e.detailNode?(e.detailNode.setRowIndex(t.next()),e.detailNode.setRowTop(o.value),o.value+=e.detailNode.rowHeight):e.detailNode&&e.detailNode.clearRowTopAndRowIndex()),e.hasChildren()&&m.exists(e.childStore)){const i=e.childStore;e.expanded?i.setDisplayIndexes(t,o):i.clearDisplayIndexes()}}binarySearchForDisplayIndex(e,t){let o=0,s=t.length-1;if(m.missing(s)||m.missing(o)){console.warn(`AG Grid: error: topPointer = ${s}, bottomPointer = ${o}`);return}for(;;){const r=Math.floor((o+s)/2),i=t[r];if(i.rowIndex===e)return i;const n=i.master&&i.expanded,d=i.detailNode;if(n&&d&&d.rowIndex===e)return i.detailNode;const l=i.childStore;if(i.expanded&&l&&l.isDisplayIndexInStore(e))return l.getRowUsingDisplayIndex(e);if(i.rowIndex<e)o=r+1;else if(i.rowIndex>e)s=r-1;else{console.warn(`AG Grid: error: unable to locate rowIndex = ${e} in cache`);return}}}extractRowBounds(e,t){const o=s=>({rowHeight:s.rowHeight,rowTop:s.rowTop});if(e.rowIndex===t)return o(e);if(e.hasChildren()&&e.expanded&&m.exists(e.childStore)){const s=e.childStore;if(s.isDisplayIndexInStore(t))return s.getRowBounds(t)}else if(e.master&&e.expanded&&m.exists(e.detailNode)&&e.detailNode.rowIndex===t)return o(e.detailNode)}getIndexAtPixel(e,t){if(e.isPixelInRange(t))return e.rowIndex;const o=e.master&&e.expanded,s=e.detailNode;if(o&&s&&s.isPixelInRange(t))return e.detailNode.rowIndex;if(e.hasChildren()&&e.expanded&&m.exists(e.childStore)){const r=e.childStore;if(r.isPixelInRange(t))return r.getRowIndexAtPixel(t)}return null}createNodeIdPrefix(e){const t=[];let o=e;for(;o&&o.level>=0;)o.key===""?t.push(st):t.push(o.key),o=o.parent;if(t.length>0)return t.reverse().join("-")}checkOpenByDefault(e){return this.expansionService.checkOpenByDefault(e)}};a([V("valueService")],A.prototype,"valueService",2),a([V("columnModel")],A.prototype,"columnModel",2),a([V("ssrmNodeManager")],A.prototype,"nodeManager",2),a([V("beans")],A.prototype,"beans",2),a([V("expansionService")],A.prototype,"expansionService",2),A=a([et("ssrmBlockUtils")],A);import{Bean as rt,PreDestroy as it}from"@ag-grid-community/core";var X=class{constructor(){this.rowNodes={}}addRowNode(e){const t=e.id;this.rowNodes[t]&&(console.warn(`AG Grid: Duplicate node id ${e.id}. Row ID's are provided via the getRowId() callback. Please modify the getRowId() callback code to provide unique row id values.`),console.warn("first instance",this.rowNodes[t].data),console.warn("second instance",e.data)),this.rowNodes[t]=e}removeNode(e){const t=e.id;this.rowNodes[t]&&(this.rowNodes[t]=void 0)}clear(){this.rowNodes={}}};a([it],X.prototype,"clear",1),X=a([rt("ssrmNodeManager")],X);import{Autowired as H,Bean as nt,BeanStub as lt,Events as ae,PostConstruct as dt,ServerSideTransactionResultStatus as F}from"@ag-grid-community/core";var I=class extends lt{constructor(){super(...arguments),this.asyncTransactions=[]}postConstruct(){this.gos.isRowModelType("serverSide")}applyTransactionAsync(e,t){this.asyncTransactionsTimeout==null&&this.scheduleExecuteAsync(),this.asyncTransactions.push({transaction:e,callback:t})}scheduleExecuteAsync(){const e=this.gos.getAsyncTransactionWaitMillis();this.asyncTransactionsTimeout=window.setTimeout(()=>{this.executeAsyncTransactions()},e)}executeAsyncTransactions(){if(!this.asyncTransactions)return;const e=[],t=[],o=[];let s=!1;if(this.asyncTransactions.forEach(r=>{let i;if(this.serverSideRowModel.executeOnStore(r.transaction.route,l=>{i=l.applyTransaction(r.transaction)})?i==null&&(i={status:F.StoreNotFound}):i={status:F.StoreNotStarted},t.push(i),i.status==F.StoreLoading){o.push(r);return}r.callback&&e.push(()=>r.callback(i)),i.status===F.Applied&&(s=!0)}),e.length>0&&window.setTimeout(()=>{e.forEach(r=>r())},0),this.asyncTransactionsTimeout=void 0,this.asyncTransactions=o,s&&(this.valueCache.onDataChanged(),this.eventService.dispatchEvent({type:ae.EVENT_STORE_UPDATED})),t.length>0){const r={type:ae.EVENT_ASYNC_TRANSACTIONS_FLUSHED,results:t};this.eventService.dispatchEvent(r)}}flushAsyncTransactions(){this.asyncTransactionsTimeout!=null&&clearTimeout(this.asyncTransactionsTimeout),this.executeAsyncTransactions()}applyTransaction(e){let t;if(this.serverSideRowModel.executeOnStore(e.route,s=>{t=s.applyTransaction(e)}))if(t){if(this.valueCache.onDataChanged(),t.remove){const s=t.remove.map(r=>r.id);this.selectionService.deleteSelectionStateFromParent(e.route||[],s)}return this.eventService.dispatchEvent({type:ae.EVENT_STORE_UPDATED}),t}else return{status:F.StoreNotFound};else return{status:F.StoreNotStarted}}};a([H("rowNodeBlockLoader")],I.prototype,"rowNodeBlockLoader",2),a([H("valueCache")],I.prototype,"valueCache",2),a([H("rowModel")],I.prototype,"serverSideRowModel",2),a([H("rowRenderer")],I.prototype,"rowRenderer",2),a([H("selectionService")],I.prototype,"selectionService",2),a([dt],I.prototype,"postConstruct",1),I=a([nt("ssrmTransactionManager")],I);import{_ as Z,Autowired as ce,BeanStub as at,Events as Ne,PostConstruct as ct,RowNode as ht,Bean as ut}from"@ag-grid-community/core";var T=class extends at{postConstruct(){this.gos.isRowModelType("serverSide")&&this.addManagedListener(this.eventService,Ne.EVENT_ROW_GROUP_OPENED,this.onRowGroupOpened.bind(this))}onRowGroupOpened(e){const t=e.node;if(t.expanded){if(t.master)this.createDetailNode(t);else if(Z.missing(t.childStore)){const s=this.serverSideRowModel.getParams();t.childStore=this.createBean(this.storeFactory.createStore(s,t))}}else this.gos.get("purgeClosedRowNodes")&&Z.exists(t.childStore)&&(t.childStore=this.destroyBean(t.childStore));const o={type:Ne.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(o)}createDetailNode(e){if(Z.exists(e.detailNode))return e.detailNode;const t=new ht(this.beans);t.detail=!0,t.selectable=!1,t.parent=e,Z.exists(e.id)&&(t.id="detail_"+e.id),t.data=e.data,t.level=e.level+1;const o=200,s=this.gos.getRowHeightForNode(t).height;return t.rowHeight=s||o,e.detailNode=t,t}};a([ce("rowModel")],T.prototype,"serverSideRowModel",2),a([ce("ssrmStoreFactory")],T.prototype,"storeFactory",2),a([ce("beans")],T.prototype,"beans",2),a([ct],T.prototype,"postConstruct",1),T=a([ut("ssrmExpandListener")],T);import{Autowired as he,Bean as gt,BeanStub as ft,Events as pt,PostConstruct as St}from"@ag-grid-community/core";var B=class extends ft{postConstruct(){this.gos.isRowModelType("serverSide")&&this.addManagedListener(this.eventService,pt.EVENT_SORT_CHANGED,this.onSortChanged.bind(this))}onSortChanged(){const e=this.serverSideRowModel.getParams();if(!e)return;const t=this.sortController.getSortModel(),o=e.sortModel,s=this.findChangedColumnsInSort(t,o),r=this.listenerUtils.isSortingWithValueColumn(s),i=this.listenerUtils.isSortingWithSecondaryColumn(s),n={valueColChanged:r,secondaryColChanged:i,changedColumns:s};this.serverSideRowModel.refreshAfterSort(t,n)}findChangedColumnsInSort(e,t){let o=[];[e,t].forEach(i=>{if(i){const n=i.map(d=>d.colId);o=o.concat(n)}});const s=(i,n)=>{const d=i?i.sort:null,l=n?n.sort:null;return d!==l},r=(i,n)=>{const d=i?t.indexOf(i):-1,l=n?e.indexOf(n):-1;return d!==l};return o.filter(i=>{const n=t.find(l=>l.colId===i),d=e.find(l=>l.colId===i);return s(n,d)||r(n,d)})}};a([he("sortController")],B.prototype,"sortController",2),a([he("rowModel")],B.prototype,"serverSideRowModel",2),a([he("ssrmListenerUtils")],B.prototype,"listenerUtils",2),a([St],B.prototype,"postConstruct",1),B=a([gt("ssrmSortService")],B);import{Autowired as ue,Bean as wt,BeanStub as vt,Events as Ce,PostConstruct as Rt}from"@ag-grid-community/core";var L=class extends vt{postConstruct(){this.gos.isRowModelType("serverSide")&&(this.addManagedListener(this.eventService,Ce.EVENT_ADVANCED_FILTER_ENABLED_CHANGED,()=>this.onFilterChanged(!0)),this.addManagedListener(this.eventService,Ce.EVENT_FILTER_CHANGED,()=>this.onFilterChanged()))}onFilterChanged(e){const t=this.serverSideRowModel.getParams();if(!t)return;const o=t.filterModel;let s,r;if(this.filterManager.isAdvancedFilterEnabled()){s=this.filterManager.getAdvancedFilterModel();const l=e?Object.keys(o??{}):this.getAdvancedFilterColumns(o),c=this.getAdvancedFilterColumns(s);l.forEach(h=>c.add(h)),r=Array.from(c)}else if(s=this.filterManager.getFilterModel(),e){const l=this.getAdvancedFilterColumns(o);Object.keys(s).forEach(c=>l.add(c)),r=Array.from(l)}else r=this.findChangedColumns(o,s);const i=this.listenerUtils.isSortingWithValueColumn(r),n=this.listenerUtils.isSortingWithSecondaryColumn(r),d={valueColChanged:i,secondaryColChanged:n,changedColumns:r};this.serverSideRowModel.refreshAfterFilter(s,d)}findChangedColumns(e,t){const o={};Object.keys(e).forEach(r=>o[r]=!0),Object.keys(t).forEach(r=>o[r]=!0);const s=[];return Object.keys(o).forEach(r=>{const i=JSON.stringify(e[r]),n=JSON.stringify(t[r]);i!=n&&s.push(r)}),s}getAdvancedFilterColumns(e){const t=new Set;if(!e)return t;const o=s=>{s.filterType==="join"?s.conditions.forEach(r=>o(r)):t.add(s.colId)};return o(e),t}};a([ue("rowModel")],L.prototype,"serverSideRowModel",2),a([ue("filterManager")],L.prototype,"filterManager",2),a([ue("ssrmListenerUtils")],L.prototype,"listenerUtils",2),a([Rt],L.prototype,"postConstruct",1),L=a([wt("ssrmFilterListener")],L);import{_ as ye,Autowired as me,Bean as Nt}from"@ag-grid-community/core";var z=class{createStore(e,t){const o=this.getStoreParams(e,t),s=o.suppressInfiniteScroll?S:C;return new s(e,o,t)}getStoreParams(e,t){const o=this.getLevelSpecificParams(t),s=this.isInfiniteScroll(o),r=this.getBlockSize(s,o),i=this.getMaxBlocksInCache(s,e,o);return{suppressInfiniteScroll:!s,cacheBlockSize:r,maxBlocksInCache:i}}getMaxBlocksInCache(e,t,o){if(!e)return;const s=o&&o.maxBlocksInCache!=null?o.maxBlocksInCache:this.gos.get("maxBlocksInCache");if(s!=null&&s>=0){if(t.dynamicRowHeight){ye.warnOnce("Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.");return}if(this.columnModel.isAutoRowHeightActive()){ye.warnOnce("Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.");return}return s}}getBlockSize(e,t){if(!e)return;const o=t&&t.cacheBlockSize!=null?t.cacheBlockSize:this.gos.get("cacheBlockSize");return o!=null&&o>0?o:100}getLevelSpecificParams(e){const t=this.gos.getCallback("getServerSideGroupLevelParams");if(!t)return;const o={level:e.level+1,parentRowNode:e.level>=0?e:void 0,rowGroupColumns:this.columnModel.getRowGroupColumns(),pivotColumns:this.columnModel.getPivotColumns(),pivotMode:this.columnModel.isPivotMode()};return t(o)}isInfiniteScroll(e){return!(e&&e.suppressInfiniteScroll!=null?e.suppressInfiniteScroll:this.isSuppressServerSideInfiniteScroll())}isSuppressServerSideInfiniteScroll(){return this.gos.get("suppressServerSideInfiniteScroll")}};a([me("gridOptionsService")],z.prototype,"gos",2),a([me("columnModel")],z.prototype,"columnModel",2),z=a([Nt("ssrmStoreFactory")],z);import{Autowired as Ct,Bean as yt}from"@ag-grid-community/core";var ee=class{isSortingWithValueColumn(e){const t=this.columnModel.getValueColumns().map(o=>o.getColId());for(let o=0;o<e.length;o++)if(t.indexOf(e[o])>-1)return!0;return!1}isSortingWithSecondaryColumn(e){if(!this.columnModel.getSecondaryColumns())return!1;const t=this.columnModel.getSecondaryColumns().map(o=>o.getColId());for(let o=0;o<e.length;o++)if(t.indexOf(e[o])>-1)return!0;return!1}};a([Ct("columnModel")],ee.prototype,"columnModel",2),ee=a([yt("ssrmListenerUtils")],ee);import{Autowired as mt,Bean as Et,BeanStub as It,Events as P,PostConstruct as xt}from"@ag-grid-community/core";import{Autowired as At,BeanStub as bt,Events as Mt,PostConstruct as Dt}from"@ag-grid-community/core";var te=class extends bt{constructor(){super(...arguments),this.selectedState={selectAll:!1,toggledNodes:new Set},this.lastSelected=null,this.selectAllUsed=!1,this.selectedNodes={}}init(){this.rowSelection=this.gos.get("rowSelection"),this.addManagedPropertyListener("rowSelection",e=>{this.rowSelection=e.currentValue})}getSelectedState(){return{selectAll:this.selectedState.selectAll,toggledNodes:[...this.selectedState.toggledNodes]}}setSelectedState(e){const t={selectAll:!1,toggledNodes:new Set};if(typeof e!="object"){console.error("AG Grid: The provided selection state should be an object.");return}if("selectAll"in e&&typeof e.selectAll=="boolean")t.selectAll=e.selectAll;else{console.error("AG Grid: Select all status should be of boolean type.");return}if("toggledNodes"in e&&Array.isArray(e.toggledNodes))e.toggledNodes.forEach(o=>{typeof o=="string"?t.toggledNodes.add(o):console.warn(`AG Grid: Provided ids must be of string type. Invalid id provided: ${o}`)});else{console.error("AG Grid: `toggledNodes` must be an array of string ids.");return}this.selectedState=t}deleteSelectionStateFromParent(e,t){if(this.selectedState.toggledNodes.size===0)return!1;let o=!1;return t.forEach(s=>{this.selectedState.toggledNodes.delete(s)&&(o=!0)}),o}setNodesSelected(e){if(e.nodes.length===0)return 0;const t=e.clearSelection&&e.newValue&&!e.rangeSelect;if(this.rowSelection!=="multiple"||t){if(e.nodes.length>1)throw new Error("AG Grid: cannot select multiple rows when rowSelection is set to 'single'");const s=e.nodes[0];return e.newValue?(this.selectedNodes={[s.id]:s},this.selectedState={selectAll:!1,toggledNodes:new Set([s.id])}):(this.selectedNodes={},this.selectedState={selectAll:!1,toggledNodes:new Set}),this.lastSelected=s.id,1}const o=s=>{e.newValue?this.selectedNodes[s.id]=s:delete this.selectedNodes[s.id];const r=s.selectable;if(e.newValue===this.selectedState.selectAll||!r){this.selectedState.toggledNodes.delete(s.id);return}this.selectedState.toggledNodes.add(s.id)};if(e.rangeSelect&&this.lastSelected){if(e.nodes.length>1)throw new Error("AG Grid: cannot select multiple rows when using rangeSelect");const s=e.nodes[0],r=this.rowModel.getRowNode(this.lastSelected);return this.rowModel.getNodesInRangeForSelection(s,r??null).forEach(o),this.lastSelected=s.id,1}return e.nodes.forEach(o),this.lastSelected=e.nodes[e.nodes.length-1].id,1}processNewRow(e){this.selectedNodes[e.id]&&(this.selectedNodes[e.id]=e)}isNodeSelected(e){const t=this.selectedState.toggledNodes.has(e.id);return this.selectedState.selectAll?!t:t}getSelectedNodes(){return this.selectAllUsed&&console.warn("AG Grid: getSelectedNodes and getSelectedRows functions cannot be used with select all functionality with the server-side row model.\n                Use `api.getServerSideSelectionState()` instead."),Object.values(this.selectedNodes)}getSelectedRows(){return this.getSelectedNodes().map(e=>e.data)}getSelectionCount(){return this.selectedState.selectAll?-1:this.selectedState.toggledNodes.size}clearOtherNodes(e,t){const o=this.selectedState.selectAll?1:this.selectedState.toggledNodes.size-1;this.selectedState={selectAll:!1,toggledNodes:new Set([e.id])},this.rowModel.forEachNode(r=>{r!==e&&r.selectThisNode(!1,void 0,t)});const s={type:Mt.EVENT_SELECTION_CHANGED,source:t};return this.eventService.dispatchEvent(s),o}isEmpty(){var e;return!this.selectedState.selectAll&&!((e=this.selectedState.toggledNodes)!=null&&e.size)}selectAllRowNodes(e){this.selectedState={selectAll:!0,toggledNodes:new Set},this.selectedNodes={},this.selectAllUsed=!0}deselectAllRowNodes(e){this.selectedState={selectAll:!1,toggledNodes:new Set},this.selectedNodes={}}getSelectAllState(e,t){return this.selectedState.selectAll?this.selectedState.toggledNodes.size>0?null:!0:this.selectedState.toggledNodes.size>0?null:!1}};a([At("rowModel")],te.prototype,"rowModel",2),a([Dt],te.prototype,"init",1);import{Autowired as j,BeanStub as Tt,PostConstruct as Bt,Events as Ee}from"@ag-grid-community/core";var b=class extends Tt{constructor(){super(...arguments),this.selectedState={selectAllChildren:!1,toggledNodes:new Map},this.lastSelected=null}init(){this.addManagedListener(this.eventService,Ee.EVENT_MODEL_UPDATED,()=>this.removeRedundantState()),this.addManagedListener(this.eventService,Ee.EVENT_COLUMN_ROW_GROUP_CHANGED,()=>this.selectionService.reset("rowGroupChanged"))}getSelectedState(){const e=this.gos.get("treeData"),t=(o,s,r)=>{const i={nodeId:r};if((e||s<=this.columnModel.getRowGroupColumns().length)&&(i.selectAllChildren=o.selectAllChildren),o.toggledNodes.size){const n=[];o.toggledNodes.forEach((d,l)=>{const c=t(d,s+1,l);n.push(c)}),i.toggledNodes=n}return i};return t(this.selectedState,0)}setSelectedState(e){const t=(o,s)=>{var r,i;if(typeof o!="object")throw new Error("AG Grid: Each provided state object must be an object.");if("selectAllChildren"in o&&typeof o.selectAllChildren!="boolean")throw new Error("AG Grid: `selectAllChildren` must be a boolean value or undefined.");if("toggledNodes"in o){if(!Array.isArray(o.toggledNodes))throw new Error("AG Grid: `toggledNodes` must be an array.");if(!o.toggledNodes.every(h=>typeof h=="object"&&"nodeId"in h&&typeof h.nodeId=="string"))throw new Error("AG Grid: Every `toggledNode` requires an associated string id.")}const n=(r=o.selectAllChildren)!=null?r:!s,d=(i=o.toggledNodes)==null?void 0:i.map(c=>[c.nodeId,t(c,n)]);if(d?.some(([c,h])=>n===h.selectAllChildren&&h.toggledNodes.size===0))throw new Error(`
                    AG Grid: AG Grid: Row selection state could not be parsed due to invalid data. Ensure all child state has toggledNodes or does not conform with the parent rule.
                    Please rebuild the selection state and reapply it.
                `);return{selectAllChildren:n,toggledNodes:new Map(d)}};try{this.selectedState=t(e,!!e.selectAllChildren)}catch(o){console.error(o.message)}}deleteSelectionStateFromParent(e,t){let o=this.selectedState;const s=[...e];for(;o&&s.length;)o=o.toggledNodes.get(s.pop());if(!o)return!1;let r=!1;return t.forEach(i=>{o?.toggledNodes.delete(i)&&(r=!0)}),r&&this.removeRedundantState(),r}setNodesSelected(e){const t=e,{nodes:o}=t,s=we(t,["nodes"]);if(o.length===0)return 0;if(e.rangeSelect){if(o.length>1)throw new Error("AG Grid: cannot select multiple rows when using rangeSelect");const r=o[0],n=this.rowModel.getNodesInRangeForSelection(r,this.lastSelected).map(this.getRouteToNode).sort((l,c)=>c.length-l.length),d=new Set;return n.forEach(l=>{d.has(l[l.length-1])||(l.forEach(c=>d.add(c)),this.recursivelySelectNode(l,this.selectedState,se({node:r},s)))}),this.removeRedundantState(),this.lastSelected=r,1}return e.nodes.forEach(r=>{const i=this.getRouteToNode(r);this.recursivelySelectNode(i,this.selectedState,be(se({},s),{node:r}))}),this.removeRedundantState(),this.lastSelected=e.nodes[e.nodes.length-1],1}isNodeSelected(e){const t=this.getRouteToNode(e);return this.isNodePathSelected(t,this.selectedState)}isNodePathSelected([e,...t],o){if(t.length===0){const s=o.toggledNodes.has(e.id);if(e.hasChildren()){const r=o.toggledNodes.get(e.id);if(r&&r.toggledNodes.size)return}return o.selectAllChildren?!s:s}if(o.toggledNodes.has(e.id)){const s=o.toggledNodes.get(e.id);if(s)return this.isNodePathSelected(t,s)}return!!o.selectAllChildren}getRouteToNode(e){const t=[];let o=e;for(;o.parent;)t.push(o),o=o.parent;return t.reverse()}removeRedundantState(){if(this.filterManager.isAnyFilterPresent())return;const e=(t=this.selectedState,o,s)=>{if(t.toggledNodes.forEach((n,d)=>{e(n,d,t)}),o){const n=this.rowModel.getRowNode(o),d=n?.childStore;if(d?.isLastRowIndexKnown()&&t.toggledNodes.size>=d.getRowCount()){for(const h of t.toggledNodes.entries()){const[u,g]=h;if(g.toggledNodes.size>0||!this.rowModel.getRowNode(u))return}t.selectAllChildren=!t.selectAllChildren,t.toggledNodes.clear()}}const r=t.toggledNodes.size===0,i=s?.selectAllChildren===t.selectAllChildren;r&&i&&s?.toggledNodes.delete(o)};e()}recursivelySelectNode([e,...t],o,s){if(!e)return;if(!t.length){const d=e.selectable;if(o.selectAllChildren===s.newValue||!d){o.toggledNodes.delete(e.id);return}const c={selectAllChildren:s.newValue,toggledNodes:new Map};o.toggledNodes.set(e.id,c);return}const i=o.toggledNodes.has(e.id),n=i?o.toggledNodes.get(e.id):{selectAllChildren:o.selectAllChildren,toggledNodes:new Map};i||o.toggledNodes.set(e.id,n),this.recursivelySelectNode(t,n,s),o.selectAllChildren===n.selectAllChildren&&n.toggledNodes.size===0&&o.toggledNodes.delete(e.id)}getSelectedNodes(){console.warn("AG Grid: `getSelectedNodes` and `getSelectedRows` functions cannot be used with `groupSelectsChildren` and the server-side row model.\n            Use `api.getServerSideSelectionState()` instead.");const e=[];return this.rowModel.forEachNode(t=>{t.isSelected()&&e.push(t)}),e}processNewRow(e){}getSelectedRows(){return this.getSelectedNodes().map(e=>e.data)}getSelectionCount(){return-1}isEmpty(){var e;return!this.selectedState.selectAllChildren&&!((e=this.selectedState.toggledNodes)!=null&&e.size)}selectAllRowNodes(e){this.selectedState={selectAllChildren:!0,toggledNodes:new Map}}deselectAllRowNodes(e){this.selectedState={selectAllChildren:!1,toggledNodes:new Map}}getSelectAllState(e,t){return this.selectedState.selectAllChildren?this.selectedState.toggledNodes.size>0?null:!0:this.selectedState.toggledNodes.size>0?null:!1}};a([j("rowModel")],b.prototype,"rowModel",2),a([j("columnModel")],b.prototype,"columnModel",2),a([j("filterManager")],b.prototype,"filterManager",2),a([j("rowModel")],b.prototype,"serverSideRowModel",2),a([j("selectionService")],b.prototype,"selectionService",2),a([Bt],b.prototype,"init",1);var K=class extends It{init(){const e=this.gos.get("groupSelectsChildren");this.addManagedPropertyListener("groupSelectsChildren",o=>{this.destroyBean(this.selectionStrategy);const s=o.currentValue?b:te;this.selectionStrategy=this.createManagedBean(new s),this.shotgunResetNodeSelectionState();const r={type:P.EVENT_SELECTION_CHANGED,source:"api"};this.eventService.dispatchEvent(r)}),this.addManagedPropertyListener("rowSelection",()=>this.deselectAllRowNodes({source:"api"}));const t=e?b:te;this.selectionStrategy=this.createManagedBean(new t)}getSelectionState(){return this.selectionStrategy.getSelectedState()}setSelectionState(e,t){if(Array.isArray(e))return;this.selectionStrategy.setSelectedState(e),this.shotgunResetNodeSelectionState();const o={type:P.EVENT_SELECTION_CHANGED,source:t};this.eventService.dispatchEvent(o)}setNodesSelected(e){const t=e,{nodes:o}=t,s=we(t,["nodes"]),r=this.gos.get("rowSelection");if(o.length>1&&r!=="multiple")return console.warn("AG Grid: cannot multi select while rowSelection='single'"),0;if(o.length>1&&e.rangeSelect)return console.warn("AG Grid: cannot use range selection when multi selecting rows"),0;const i=se({nodes:o.filter(l=>l.selectable)},s);if(!i.nodes.length)return 0;const n=this.selectionStrategy.setNodesSelected(i);this.shotgunResetNodeSelectionState(i.source);const d={type:P.EVENT_SELECTION_CHANGED,source:i.source};return this.eventService.dispatchEvent(d),n}deleteSelectionStateFromParent(e,t){if(!this.selectionStrategy.deleteSelectionStateFromParent(e,t))return;this.shotgunResetNodeSelectionState();const s={type:P.EVENT_SELECTION_CHANGED,source:"api"};this.eventService.dispatchEvent(s)}shotgunResetNodeSelectionState(e){this.rowModel.forEachNode(t=>{if(t.stub)return;const o=this.selectionStrategy.isNodeSelected(t);o!==t.isSelected()&&t.selectThisNode(o,void 0,e)})}getSelectedNodes(){return this.selectionStrategy.getSelectedNodes()}getSelectedRows(){return this.selectionStrategy.getSelectedRows()}getSelectionCount(){return this.selectionStrategy.getSelectionCount()}syncInRowNode(e,t){this.selectionStrategy.processNewRow(e);const o=this.selectionStrategy.isNodeSelected(e);if(o!=!1&&!e.selectable){this.selectionStrategy.setNodesSelected({nodes:[e],newValue:!1,source:"api"}),this.shotgunResetNodeSelectionState();const s={type:P.EVENT_SELECTION_CHANGED,source:"api"};this.eventService.dispatchEvent(s);return}e.setSelectedInitialValue(o)}reset(){this.selectionStrategy.deselectAllRowNodes({source:"api"})}isEmpty(){return this.selectionStrategy.isEmpty()}hasNodesToSelect(e=!1,t=!1){return!0}selectAllRowNodes(e){(e.justCurrentPage||e.justFiltered)&&console.warn("AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'"),this.selectionStrategy.selectAllRowNodes(e),this.rowModel.forEachNode(o=>{o.stub||o.selectThisNode(!0,void 0,e.source)});const t={type:P.EVENT_SELECTION_CHANGED,source:e.source};this.eventService.dispatchEvent(t)}deselectAllRowNodes(e){(e.justCurrentPage||e.justFiltered)&&console.warn("AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'"),this.selectionStrategy.deselectAllRowNodes(e),this.rowModel.forEachNode(o=>{o.stub||o.selectThisNode(!1,void 0,e.source)});const t={type:P.EVENT_SELECTION_CHANGED,source:e.source};this.eventService.dispatchEvent(t)}getSelectAllState(e,t){return this.selectionStrategy.getSelectAllState(e,t)}updateGroupsFromChildrenSelections(e,t){return!1}getBestCostNodeSelection(){console.warn("AG Grid: calling gridApi.getBestCostNodeSelection() is only possible when using rowModelType=`clientSide`.")}filterFromSelection(){}};a([mt("rowModel")],K.prototype,"rowModel",2),a([xt],K.prototype,"init",1),K=a([Et("selectionService")],K);var Lt="31.3.2";import{Autowired as Pt,Bean as kt,Events as Gt,ExpansionService as Ft}from"@ag-grid-community/core";var oe=class extends Ft{constructor(){super(...arguments),this.queuedRowIds=new Set}postConstruct(){super.postConstruct(),this.addManagedListener(this.eventService,Gt.EVENT_COLUMN_ROW_GROUP_CHANGED,()=>{this.queuedRowIds.clear()})}checkOpenByDefault(e){if(!e.isExpandable())return;if(this.queuedRowIds.has(e.id)){this.queuedRowIds.delete(e.id),e.setExpanded(!0);return}const t=this.gos.getCallback("isServerSideGroupOpenByDefault");if(!t)return;const o={data:e.data,rowNode:e};t(o)&&e.setExpanded(!0)}expandRows(e){e.forEach(t=>{const o=this.serverSideRowModel.getRowNode(t);o?o.setExpanded(!0):this.queuedRowIds.add(t)})}expandAll(e){this.serverSideRowModel.expandAll(e)}onGroupExpandedOrCollapsed(){}};a([Pt("rowModel")],oe.prototype,"serverSideRowModel",2),oe=a([kt("expansionService")],oe);var _t={version:Lt,moduleName:Me.ServerSideRowModelModule,rowModel:"serverSide",beans:[v,T,B,G,A,X,I,L,z,ee,K,oe,E],dependantModules:[De]};export{_t as ServerSideRowModelModule};
