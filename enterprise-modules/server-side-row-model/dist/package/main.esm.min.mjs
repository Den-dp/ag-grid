import{ModuleNames as I,RowModelHelperService as $,_CsrmSsrmSharedApiModule as W,_RowNodeBlockModule as J,_SsrmInfiniteSharedApiModule as Q}from"@ag-grid-community/core";import{EnterpriseCoreModule as X}from"@ag-grid-enterprise/core";import{BeanStub as Z,RowNode as Y,_doOnce as ee,_exists as p,_missing as L,_warnOnce as R}from"@ag-grid-community/core";var te="ag-Grid-MissingKey",se=class extends Z{constructor(){super(...arguments),this.beanName="ssrmBlockUtils"}wireBeans(e){this.valueService=e.valueService,this.showRowGroupColsService=e.showRowGroupColsService,this.nodeManager=e.ssrmNodeManager,this.beans=e,this.expansionService=e.expansionService}createRowNode(e){const t=new Y(this.beans),s=e.rowHeight!=null?e.rowHeight:this.gos.getRowHeightAsNumber();return t.setRowHeight(s),t.group=e.group,t.leafGroup=e.leafGroup,t.level=e.level,t.uiLevel=e.level,t.parent=e.parent,t.stub=!0,t.__needsRefreshWhenVisible=!1,t.group&&(t.expanded=!1,t.field=e.field,t.rowGroupColumn=e.rowGroupColumn),t}destroyRowNodes(e){e&&e.forEach(t=>this.destroyRowNode(t))}destroyRowNode(e,t=!1){e.childStore&&!t&&(this.destroyBean(e.childStore),e.childStore=null),e.sibling&&!e.footer&&this.destroyRowNode(e.sibling,!1),e.clearRowTopAndRowIndex(),e.id!=null&&this.nodeManager.removeNode(e)}setTreeGroupInfo(e){e.updateHasChildren();const t=this.gos.get("getServerSideGroupKey");e.hasChildren()&&t!=null&&(e.key=t(e.data)),!e.hasChildren()&&e.childStore!=null&&(this.destroyBean(e.childStore),e.childStore=null,e.expanded=!1)}setRowGroupInfo(e){e.key=this.valueService.getValue(e.rowGroupColumn,e),(e.key===null||e.key===void 0)&&ee(()=>{R("null and undefined values are not allowed for server side row model keys"),e.rowGroupColumn&&R(`column = ${e.rowGroupColumn.getId()}`),R("data is "+e.data)},"ServerSideBlock-CannotHaveNullOrUndefinedForKey"),this.beans.gos.getGroupTotalRowCallback()({node:e})&&(e.createFooter(),e.sibling&&(e.sibling.uiLevel=e.uiLevel+1))}setMasterDetailInfo(e){const t=this.gos.get("isRowMaster");t!=null?e.master=t(e.data):e.master=!0}updateDataIntoRowNode(e,t){e.updateData(t),this.gos.get("treeData")?(this.setTreeGroupInfo(e),this.setChildCountIntoRowNode(e)):e.group?(this.setChildCountIntoRowNode(e),e.footer||(this.beans.gos.getGroupTotalRowCallback()({node:e})?e.sibling?e.sibling.updateData(t):e.createFooter():e.sibling&&e.destroyFooter())):this.gos.get("masterDetail")}setDataIntoRowNode(e,t,s,o){e.stub=!1;const i=this.gos.get("treeData");p(t)?(e.setDataAndId(t,s),i?this.setTreeGroupInfo(e):e.group?this.setRowGroupInfo(e):this.gos.get("masterDetail")&&this.setMasterDetailInfo(e)):(e.setDataAndId(void 0,void 0),e.key=null),(i||e.group)&&(this.setGroupDataIntoRowNode(e),this.setChildCountIntoRowNode(e)),p(t)&&(e.setRowHeight(this.gos.getRowHeightForNode(e,!1,o).height),e.sibling?.setRowHeight(this.gos.getRowHeightForNode(e.sibling,!1,o).height))}setChildCountIntoRowNode(e){const t=this.gos.get("getChildCount");t&&e.setAllChildrenCount(t(e.data))}setGroupDataIntoRowNode(e){const t=this.showRowGroupColsService?.getShowRowGroupCols()??[],s=this.gos.get("treeData");t.forEach(o=>{if(e.groupData==null&&(e.groupData={}),s)e.groupData[o.getColId()]=e.key;else if(o.isRowGroupDisplayed(e.rowGroupColumn.getId())){const i=this.valueService.getValue(e.rowGroupColumn,e);e.groupData[o.getColId()]=i}})}clearDisplayIndex(e){e.clearRowTopAndRowIndex(),e.hasChildren()&&p(e.childStore)&&e.childStore.clearDisplayIndexes(),e.master&&e.detailNode&&e.detailNode.clearRowTopAndRowIndex()}setDisplayIndex(e,t,s){if(e.setRowIndex(t.next()),e.setRowTop(s.value),s.value+=e.rowHeight,e.footer)return;if(e.master&&(e.expanded&&e.detailNode?(e.detailNode.setRowIndex(t.next()),e.detailNode.setRowTop(s.value),s.value+=e.detailNode.rowHeight):e.detailNode&&e.detailNode.clearRowTopAndRowIndex()),e.hasChildren()&&p(e.childStore)){const r=e.childStore;e.expanded?r.setDisplayIndexes(t,s):r.clearDisplayIndexes()}}binarySearchForDisplayIndex(e,t){let s=0,o=t.length-1;if(L(o)||L(s)){R(`error: topPointer = ${o}, bottomPointer = ${s}`);return}for(;;){const i=Math.floor((s+o)/2),r=t[i];if(r.rowIndex===e)return r;const n=r.master&&r.expanded,d=r.detailNode;if(n&&d&&d.rowIndex===e)return r.detailNode;const l=r.childStore;if(r.expanded&&l&&l.isDisplayIndexInStore(e))return l.getRowUsingDisplayIndex(e);if(r.rowIndex<e)s=i+1;else if(r.rowIndex>e)o=i-1;else{R(`error: unable to locate rowIndex = ${e} in cache`);return}}}extractRowBounds(e,t){const s=o=>({rowHeight:o.rowHeight,rowTop:o.rowTop});if(e.rowIndex===t)return s(e);if(e.hasChildren()&&e.expanded&&p(e.childStore)){const o=e.childStore;if(o.isDisplayIndexInStore(t))return o.getRowBounds(t)}else if(e.master&&e.expanded&&p(e.detailNode)&&e.detailNode.rowIndex===t)return s(e.detailNode)}getIndexAtPixel(e,t){if(e.isPixelInRange(t))return e.rowIndex;const s=e.master&&e.expanded,o=e.detailNode;if(s&&o&&o.isPixelInRange(t))return e.detailNode.rowIndex;if(e.hasChildren()&&e.expanded&&p(e.childStore)){const i=e.childStore;if(i.isPixelInRange(t))return i.getRowIndexAtPixel(t)}return null}createNodeIdPrefix(e){const t=[];let s=e;for(;s&&s.level>=0;)s.key===""?t.push(te):t.push(s.key),s=s.parent;if(t.length>0)return t.reverse().join("-")}checkOpenByDefault(e){return this.expansionService.checkOpenByDefault(e)}};import{BeanStub as oe,RowNode as ie,_exists as M,_missing as re}from"@ag-grid-community/core";var ne=class extends oe{constructor(){super(...arguments),this.beanName="ssrmExpandListener"}wireBeans(e){this.serverSideRowModel=e.rowModel,this.storeFactory=e.ssrmStoreFactory,this.beans=e}postConstruct(){this.gos.isRowModelType("serverSide")&&this.addManagedEventListeners({rowGroupOpened:this.onRowGroupOpened.bind(this)})}onRowGroupOpened(e){const t=e.node;if(t.expanded){if(t.master)this.createDetailNode(t);else if(re(t.childStore)){const o=this.serverSideRowModel.getParams();t.childStore=this.createBean(this.storeFactory.createStore(o,t))}}else this.gos.get("purgeClosedRowNodes")&&M(t.childStore)&&(t.childStore=this.destroyBean(t.childStore));const s={type:"storeUpdated"};this.eventService.dispatchEvent(s)}createDetailNode(e){if(M(e.detailNode))return e.detailNode;const t=new ie(this.beans);t.detail=!0,t.selectable=!1,t.parent=e,M(e.id)&&(t.id="detail_"+e.id),t.data=e.data,t.level=e.level+1;const s=200,o=this.gos.getRowHeightForNode(t).height;return t.rowHeight=o||s,e.detailNode=t,t}};import{BeanStub as le}from"@ag-grid-community/core";var de=class extends le{constructor(){super(...arguments),this.beanName="ssrmFilterListener"}wireBeans(e){this.serverSideRowModel=e.rowModel,this.filterManager=e.filterManager,this.listenerUtils=e.ssrmListenerUtils}postConstruct(){this.gos.isRowModelType("serverSide")&&this.addManagedEventListeners({advancedFilterEnabledChanged:()=>this.onFilterChanged(!0),filterChanged:()=>this.onFilterChanged()})}onFilterChanged(e){const t=this.serverSideRowModel.getParams();if(!t)return;const s=t.filterModel;let o,i;if(this.filterManager?.isAdvancedFilterEnabled()){o=this.filterManager.getAdvancedFilterModel();const l=e?Object.keys(s??{}):this.getAdvancedFilterColumns(s),a=this.getAdvancedFilterColumns(o);l.forEach(h=>a.add(h)),i=Array.from(a)}else if(o=this.filterManager?.getFilterModel()??{},e){const l=this.getAdvancedFilterColumns(s);Object.keys(o).forEach(a=>l.add(a)),i=Array.from(l)}else i=this.findChangedColumns(s,o);const r=this.listenerUtils.isSortingWithValueColumn(i),n=this.listenerUtils.isSortingWithSecondaryColumn(i),d={valueColChanged:r,secondaryColChanged:n,changedColumns:i};this.serverSideRowModel.refreshAfterFilter(o,d)}findChangedColumns(e,t){const s={};Object.keys(e).forEach(i=>s[i]=!0),Object.keys(t).forEach(i=>s[i]=!0);const o=[];return Object.keys(s).forEach(i=>{const r=JSON.stringify(e[i]),n=JSON.stringify(t[i]);r!=n&&o.push(i)}),o}getAdvancedFilterColumns(e){const t=new Set;if(!e)return t;const s=o=>{o.filterType==="join"?o.conditions.forEach(i=>s(i)):t.add(o.colId)};return s(e),t}};import{BeanStub as ae}from"@ag-grid-community/core";var he=class extends ae{constructor(){super(...arguments),this.beanName="ssrmListenerUtils"}wireBeans(e){this.pivotResultColsService=e.pivotResultColsService,this.funcColsService=e.funcColsService}isSortingWithValueColumn(e){const t=this.funcColsService.getValueColumns().map(s=>s.getColId());for(let s=0;s<e.length;s++)if(t.indexOf(e[s])>-1)return!0;return!1}isSortingWithSecondaryColumn(e){const t=this.pivotResultColsService.getPivotResultCols();if(!t)return!1;const s=t.list.map(o=>o.getColId());for(let o=0;o<e.length;o++)if(s.indexOf(e[o])>-1)return!0;return!1}};import{BeanStub as ce}from"@ag-grid-community/core";var ue=class extends ce{constructor(){super(...arguments),this.beanName="ssrmSortService"}wireBeans(e){this.sortController=e.sortController,this.serverSideRowModel=e.rowModel,this.listenerUtils=e.ssrmListenerUtils}postConstruct(){this.gos.isRowModelType("serverSide")&&this.addManagedEventListeners({sortChanged:this.onSortChanged.bind(this)})}onSortChanged(){const e=this.serverSideRowModel.getParams();if(!e)return;const t=this.sortController.getSortModel(),s=e.sortModel,o=this.findChangedColumnsInSort(t,s),i=this.listenerUtils.isSortingWithValueColumn(o),r=this.listenerUtils.isSortingWithSecondaryColumn(o),n={valueColChanged:i,secondaryColChanged:r,changedColumns:o};this.serverSideRowModel.refreshAfterSort(t,n)}findChangedColumnsInSort(e,t){let s=[];[e,t].forEach(r=>{if(r){const n=r.map(d=>d.colId);s=s.concat(n)}});const o=(r,n)=>{const d=r?r.sort:null,l=n?n.sort:null;return d!==l},i=(r,n)=>{const d=r?t.indexOf(r):-1,l=n?e.indexOf(n):-1;return d!==l};return s.filter(r=>{const n=t.find(l=>l.colId===r),d=e.find(l=>l.colId===r);return o(n,d)||i(n,d)})}};import{BeanStub as ge,_warnOnce as b}from"@ag-grid-community/core";var fe=class extends ge{constructor(){super(...arguments),this.beanName="ssrmNodeManager",this.rowNodes={}}addRowNode(e){const t=e.id;this.rowNodes[t]&&(b(`Duplicate node id ${e.id}. Row ID's are provided via the getRowId() callback. Please modify the getRowId() callback code to provide unique row id values.`),b("first instance",this.rowNodes[t].data),b("second instance",e.data)),this.rowNodes[t]=e}removeNode(e){const t=e.id;this.rowNodes[t]&&(this.rowNodes[t]=void 0)}destroy(){this.clear(),super.destroy()}clear(){this.rowNodes={},super.destroy()}};import{BeanStub as Se,ModuleNames as pe,ModuleRegistry as we,NumberSequence as F,RowNode as Re,_debounce as ve,_errorOnce as Ce,_jsonEquals as me,_warnOnce as P}from"@ag-grid-community/core";import{NumberSequence as N,RowNodeBlock as Ne,ServerSideTransactionResultStatus as v,_errorOnce as G,_getAllValuesInObject as xe,_insertIntoArray as ye,_missing as Ie,_missingOrEmpty as Me,_warnOnce as be}from"@ag-grid-community/core";var A=class extends Ne{constructor(e,t,s){super(0),this.nodeIdSequence=new N,this.info={},this.ssrmParams=e,this.parentRowNode=s,this.level=s.level+1,this.groupLevel=e.rowGroupCols?this.level<e.rowGroupCols.length:void 0,this.leafGroup=e.rowGroupCols?this.level===e.rowGroupCols.length-1:!1}wireBeans(e){this.storeUtils=e.ssrmStoreUtils,this.blockUtils=e.ssrmBlockUtils,this.funcColsService=e.funcColsService,this.rowNodeBlockLoader=e.rowNodeBlockLoader,this.rowNodeSorter=e.rowNodeSorter,this.sortController=e.sortController,this.selectionService=e.selectionService,this.nodeManager=e.ssrmNodeManager,this.filterManager=e.filterManager,this.transactionManager=e.ssrmTransactionManager,this.serverSideRowModel=e.rowModel}postConstruct(){if(this.usingTreeData=this.gos.get("treeData"),this.nodeIdPrefix=this.blockUtils.createNodeIdPrefix(this.parentRowNode),!this.usingTreeData&&this.groupLevel){const o=this.ssrmParams.rowGroupCols[this.level];this.groupField=o.field,this.rowGroupColumn=this.funcColsService.getRowGroupColumns()[this.level]}let e=1;const t=this.parentRowNode.level===-1,s=this.storeUtils.getServerSideInitialRowCount();t&&s!=null&&(e=s),this.initialiseRowNodes(e),this.rowNodeBlockLoader.addBlock(this),this.addDestroyFunc(()=>this.rowNodeBlockLoader.removeBlock(this)),this.postSortFunc=this.gos.getCallback("postSortRows"),s!=null&&this.eventService.dispatchEventOnce({type:"rowCountReady"})}destroy(){this.destroyRowNodes(),super.destroy()}destroyRowNodes(){this.blockUtils.destroyRowNodes(this.allRowNodes),this.allRowNodes=[],this.nodesAfterSort=[],this.nodesAfterFilter=[],this.allNodesMap={}}initialiseRowNodes(e,t=!1){this.destroyRowNodes();for(let s=0;s<e;s++){const o=this.blockUtils.createRowNode({field:this.groupField,group:this.groupLevel,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn});t&&(o.failedLoad=!0),this.allRowNodes.push(o),this.nodesAfterFilter.push(o),this.nodesAfterSort.push(o)}}getBlockStateJson(){return{id:this.nodeIdPrefix?this.nodeIdPrefix:"",state:this.getState()}}loadFromDatasource(){this.storeUtils.loadFromDatasource({startRow:void 0,endRow:void 0,parentBlock:this,parentNode:this.parentRowNode,storeParams:this.ssrmParams,success:this.success.bind(this,this.getVersion()),fail:this.pageLoadFailed.bind(this,this.getVersion())})}getStartRow(){return 0}getEndRow(){return this.nodesAfterSort.length}createDataNode(e,t){const s=this.blockUtils.createRowNode({field:this.groupField,group:this.groupLevel,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn});t!=null?ye(this.allRowNodes,s,t):this.allRowNodes.push(s);const o=this.prefixId(this.nodeIdSequence.next());return this.blockUtils.setDataIntoRowNode(s,e,o,void 0),this.nodeManager.addRowNode(s),this.blockUtils.checkOpenByDefault(s),this.allNodesMap[s.id]=s,s}prefixId(e){return this.nodeIdPrefix?this.nodeIdPrefix+"-"+e:e.toString()}processServerFail(){this.initialiseRowNodes(1,!0),this.fireStoreUpdatedEvent(),this.flushAsyncTransactions()}processServerResult(e){if(!this.isAlive())return;const t=e.groupLevelInfo;t&&Object.assign(this.info,t),e.pivotResultFields&&this.serverSideRowModel.generateSecondaryColumns(e.pivotResultFields);const s=this.allRowNodes.length>0?this.allNodesMap:void 0;this.allRowNodes=[],this.nodesAfterSort=[],this.nodesAfterFilter=[],this.allNodesMap={},e.rowData||be('"params.data" is missing from Server-Side Row Model success() callback. Please use the "data" attribute. If no data is returned, set an empty list.'),this.createOrRecycleNodes(s,e.rowData),s&&this.blockUtils.destroyRowNodes(xe(s)),this.level===0&&this.eventService.dispatchEventOnce({type:"rowCountReady"}),this.filterAndSortNodes(),this.fireStoreUpdatedEvent(),this.flushAsyncTransactions()}createOrRecycleNodes(e,t){if(!t)return;const s=i=>{if(!e)return;const r=this.gos.getRowIdCallback();if(!r)return;const n=this.parentRowNode.getGroupKeys(),d=this.level,l=r({data:i,parentKeys:n.length>0?n:void 0,level:d}),a=e[l];if(a)return delete e[l],a},o=(i,r)=>{this.allNodesMap[i.id]=i,this.blockUtils.updateDataIntoRowNode(i,r),this.allRowNodes.push(i)};t.forEach(i=>{const r=s(i);r?o(r,i):this.createDataNode(i)})}flushAsyncTransactions(){window.setTimeout(()=>this.transactionManager.flushAsyncTransactions(),0)}filterAndSortNodes(){this.filterRowNodes(),this.sortRowNodes()}sortRowNodes(){const e=this.storeUtils.isServerSideSortAllLevels()||this.storeUtils.isServerSideSortOnServer(),t=this.sortController.getSortOptions(),s=!t||t.length==0;if(e||s){this.nodesAfterSort=this.nodesAfterFilter;return}if(this.nodesAfterSort=this.rowNodeSorter.doFullSort(this.nodesAfterFilter,t),this.postSortFunc){const o={nodes:this.nodesAfterSort};this.postSortFunc(o)}}filterRowNodes(){const e=!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||this.storeUtils.isServerSideFilterOnServer(),t=this.groupLevel;if(e||t){this.nodesAfterFilter=this.allRowNodes;return}this.nodesAfterFilter=this.filterManager?this.allRowNodes.filter(s=>this.filterManager.doesRowPassFilter({rowNode:s})):this.allRowNodes}clearDisplayIndexes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.allRowNodes.forEach(e=>this.blockUtils.clearDisplayIndex(e))}getDisplayIndexEnd(){return this.displayIndexEnd}isDisplayIndexInStore(e){return this.getRowCount()===0?!1:e>=this.displayIndexStart&&e<this.displayIndexEnd}setDisplayIndexes(e,t){this.displayIndexStart=e.peek(),this.topPx=t.value;const s={};this.nodesAfterSort.forEach(o=>{this.blockUtils.setDisplayIndex(o,e,t),s[o.id]=!0}),this.allRowNodes.forEach(o=>{s[o.id]||this.blockUtils.clearDisplayIndex(o)}),this.displayIndexEnd=e.peek(),this.heightPx=t.value-this.topPx}forEachStoreDeep(e,t=new N){e(this,t.next()),this.allRowNodes.forEach(s=>{const o=s.childStore;o&&o.forEachStoreDeep(e,t)})}forEachNodeDeep(e,t=new N){this.allRowNodes.forEach(s=>{e(s,t.next());const o=s.childStore;o&&o.forEachNodeDeep(e,t)})}forEachNodeDeepAfterFilterAndSort(e,t=new N,s=!1){this.nodesAfterSort.forEach(o=>{e(o,t.next());const i=o.childStore;i&&i.forEachNodeDeepAfterFilterAndSort(e,t,s)}),s&&this.parentRowNode.sibling&&e(this.parentRowNode.sibling,t.next())}getRowUsingDisplayIndex(e){return this.isDisplayIndexInStore(e)?this.blockUtils.binarySearchForDisplayIndex(e,this.nodesAfterSort):void 0}getRowBounds(e){for(let t=0;t<this.nodesAfterSort.length;t++){const s=this.nodesAfterSort[t],o=this.blockUtils.extractRowBounds(s,e);if(o)return o}return null}isPixelInRange(e){return e>=this.topPx&&e<this.topPx+this.heightPx}getRowIndexAtPixel(e){if(e<=this.topPx)return this.nodesAfterSort[0].rowIndex;if(e>=this.topPx+this.heightPx){const r=this.nodesAfterSort[this.nodesAfterSort.length-1],n=r.rowTop+r.rowHeight;if(e>=n&&r.expanded){if(r.childStore&&r.childStore.getRowCount()>0)return r.childStore.getRowIndexAtPixel(e);if(r.detailNode)return r.detailNode.rowIndex}return r.rowIndex}let o=null;return this.nodesAfterSort.forEach(r=>{const n=this.blockUtils.getIndexAtPixel(r,e);n!=null&&(o=n)}),o??this.displayIndexEnd-1}getChildStore(e){return this.storeUtils.getChildStore(e,this,t=>this.allRowNodes.find(o=>o.key==t))}forEachChildStoreShallow(e){this.allRowNodes.forEach(t=>{const s=t.childStore;s&&e(s)})}refreshAfterFilter(e){const t=this.storeUtils.isServerSideFilterOnServer(),s=this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e);if(!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||t&&s){this.refreshStore(!0),this.sortRowNodes();return}this.filterRowNodes(),this.sortRowNodes(),this.forEachChildStoreShallow(i=>i.refreshAfterFilter(e))}refreshAfterSort(e){const t=this.storeUtils.isServerSideSortOnServer(),s=this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e);if(this.storeUtils.isServerSideSortAllLevels()||t&&s){this.refreshStore(!0),this.filterRowNodes();return}this.filterRowNodes(),this.sortRowNodes(),this.forEachChildStoreShallow(i=>i.refreshAfterSort(e))}applyTransaction(e){switch(this.getState()){case"failed":return{status:v.StoreLoadingFailed};case"loading":return{status:v.StoreLoading};case"needsLoading":return{status:v.StoreWaitingToLoad}}const t=this.gos.getCallback("isApplyServerSideTransaction");if(t){const i={transaction:e,parentNode:this.parentRowNode,groupLevelInfo:this.info};if(!t(i))return{status:v.Cancelled}}const s={status:v.Applied,remove:[],update:[],add:[]},o=[];return this.executeAdd(e,s),this.executeRemove(e,s,o),this.executeUpdate(e,s,o),this.filterAndSortNodes(),this.updateSelection(o),s}updateSelection(e){if(e.length>0){this.selectionService.setNodesSelected({newValue:!1,nodes:e,suppressFinishActions:!0,clearSelection:!1,source:"rowDataChanged"});const s={type:"selectionChanged",source:"rowDataChanged"};this.eventService.dispatchEvent(s)}}executeAdd(e,t){const{add:s,addIndex:o}=e;if(Me(s))return;typeof o=="number"&&o>=0?s.reverse().forEach(r=>{const n=this.createDataNode(r,o);t.add.push(n)}):s.forEach(r=>{const n=this.createDataNode(r);t.add.push(n)})}executeRemove(e,t,s){const{remove:o}=e;if(o==null)return;const i={};o.forEach(r=>{const n=this.lookupRowNode(r);n&&(n.isSelected()&&s.push(n),n.clearRowTopAndRowIndex(),i[n.id]=!0,delete this.allNodesMap[n.id],t.remove.push(n),this.nodeManager.removeNode(n))}),this.allRowNodes=this.allRowNodes.filter(r=>!i[r.id])}executeUpdate(e,t,s){const{update:o}=e;o?.forEach(i=>{const r=this.lookupRowNode(i);r&&(this.blockUtils.updateDataIntoRowNode(r,i),!r.selectable&&r.isSelected()&&s.push(r),t.update.push(r))})}lookupRowNode(e){const t=this.gos.getRowIdCallback();if(t!=null){const s=this.parentRowNode.getGroupKeys(),o=t({data:e,parentKeys:s.length>0?s:void 0,level:this.level}),i=this.allNodesMap[o];return i||(G(`could not find row id=${o}, data item was not found for this id`),null)}else{const s=this.allRowNodes.find(o=>o.data===e);return s||(G("could not find data item as object was not found",e),null)}}addStoreStates(e){e.push({suppressInfiniteScroll:!0,route:this.parentRowNode.getGroupKeys(),rowCount:this.allRowNodes.length,info:this.info}),this.forEachChildStoreShallow(t=>t.addStoreStates(e))}refreshStore(e){if(e){const t=this.nodesAfterSort?this.nodesAfterSort.length:1;this.initialiseRowNodes(t)}this.scheduleLoad(),this.fireStoreUpdatedEvent()}retryLoads(){this.getState()==="failed"&&(this.initialiseRowNodes(1),this.scheduleLoad()),this.forEachChildStoreShallow(e=>e.retryLoads())}scheduleLoad(){this.setStateWaitingToLoad(),this.rowNodeBlockLoader.checkBlockToLoad()}fireStoreUpdatedEvent(){const e={type:"storeUpdated"};this.eventService.dispatchEvent(e)}getRowCount(){return this.nodesAfterSort.length}getTopLevelRowDisplayedIndex(e){return this.nodesAfterSort[e].rowIndex}isLastRowIndexKnown(){return this.getState()=="loaded"}getRowNodesInRange(e,t){const s=[];let o=!1;return Ie(e)&&(o=!0),this.nodesAfterSort.forEach(r=>{const n=r===e||r===t;(o||n)&&s.push(r),n&&(o=!o)}),o?[]:s}getStoreBounds(){return{topPx:this.topPx,heightPx:this.heightPx}}};import{BeanStub as Ae,NumberSequence as x,ServerSideTransactionResultStatus as E,_warnOnce as Ee}from"@ag-grid-community/core";import{BeanStub as ke,_warnOnce as Be}from"@ag-grid-community/core";import{BeanStub as De}from"@ag-grid-community/core";var k=class extends De{constructor(){super(...arguments),this.beanName="lazyBlockLoadingService",this.cacheLoadingNodesMap=new Map,this.isCheckQueued=!1,this.nextBlockToLoad=void 0}wireBeans(e){this.rowNodeBlockLoader=e.rowNodeBlockLoader,this.rowRenderer=e.rowRenderer,this.rowModel=e.rowModel}postConstruct(){this.addManagedListeners(this.rowNodeBlockLoader,{blockLoaded:()=>this.queueLoadCheck()})}subscribe(e){this.cacheLoadingNodesMap.set(e,new Set)}unsubscribe(e){this.cacheLoadingNodesMap.delete(e)}queueLoadCheck(){this.isCheckQueued||(this.isCheckQueued=!0,window.queueMicrotask(()=>{this.queueLoadAction(),this.isCheckQueued=!1}))}queueLoadAction(){const e=this.getBlockToLoad();if(!e)return;const t=this.nextBlockToLoad&&this.nextBlockToLoad.cache===e.cache&&this.nextBlockToLoad.index===e.index;if(!t&&(!this.nextBlockToLoad||!t)){this.nextBlockToLoad=e,window.clearTimeout(this.loaderTimeout);const s=Number(this.nextBlockToLoad.index),o=this.nextBlockToLoad.cache,i=e.index+e.cache.getBlockSize();this.loaderTimeout=window.setTimeout(()=>{o.isAlive()&&(this.loaderTimeout=void 0,this.attemptLoad(o,s,i),this.nextBlockToLoad=void 0)},this.gos.get("blockLoadDebounceMillis"))}}attemptLoad(e,t,s){const o=this.rowNodeBlockLoader.getAvailableLoadingCount();o!=null&&o===0||(this.rowNodeBlockLoader.registerLoads(1),this.executeLoad(e,t,s),this.queueLoadCheck())}executeLoad(e,t,s){const o=e.getSsrmParams(),i={startRow:t,endRow:s,rowGroupCols:o.rowGroupCols,valueCols:o.valueCols,pivotCols:o.pivotCols,pivotMode:o.pivotMode,groupKeys:e.store.getParentNode().getGroupKeys(),filterModel:o.filterModel,sortModel:o.sortModel},r=this.cacheLoadingNodesMap.get(e),n=()=>{for(let c=0;c<s-t;c++)r.delete(t+c)},d=()=>{for(let c=0;c<s-t;c++)r.add(t+c)},l=c=>{this.rowNodeBlockLoader.loadComplete(),e.onLoadSuccess(t,s-t,c),n()},a=()=>{this.rowNodeBlockLoader.loadComplete(),e.onLoadFailed(t,s-t),n()},h=this.gos.addGridCommonParams({request:i,success:l,fail:a,parentNode:e.store.getParentNode()});d(),e.getSsrmParams().datasource?.getRows(h)}getBlockToLoad(){const e=this.rowRenderer.getFirstVirtualRenderedRow(),t=this.rowRenderer.getLastVirtualRenderedRow();for(let d=e;d<=t;d++){const l=this.rowModel.getRow(d);if(!l)continue;const a=l.parent&&l.parent.childStore;if(!a||!(a instanceof C))continue;const h=a.getCache(),c=h.getNodes().getBy("node",l);if(!(!c||this.cacheLoadingNodesMap.get(h)?.has(c.index))&&(l.__needsRefreshWhenVisible||l.stub&&!l.failedLoad))return{cache:h,index:h.getBlockStartIndex(c.index)}}let s=null,o=null,i=Number.MAX_SAFE_INTEGER;for(const d of this.cacheLoadingNodesMap.keys())d.getNodesToRefresh().forEach(a=>{if(a.rowIndex==null){o=a,s=d;return}const h=d.getNodes().getBy("node",a);if(!h||this.cacheLoadingNodesMap.get(d)?.has(h.index))return;const g=Math.abs(e-a.rowIndex),u=Math.abs(a.rowIndex-t);g<i&&(o=a,i=g,s=d),u<i&&(o=a,i=u,s=d)});if(!s)return;const r=s,n=r.getNodes().getBy("node",o)?.index;return n==null?void 0:{cache:r,index:r.getBlockStartIndex(n)}}isRowLoading(e,t){return this.cacheLoadingNodesMap.get(e)?.has(t)??!1}};k.DEFAULT_BLOCK_SIZE=100;var Te=class{constructor(...e){if(e.length<1)throw new Error("AG Grid: At least one index must be provided.");this.indexes=e,this.maps=new Map(this.indexes.map(t=>[t,new Map]))}getSize(){return this.maps.get(this.indexes[0]).size}getBy(e,t){const s=this.maps.get(e);if(!s)throw new Error(`AG Grid: ${String(e)} not found`);return s.get(t)}set(e){this.indexes.forEach(t=>{const s=this.maps.get(t);if(!s)throw new Error(`AG Grid: ${String(t)} not found`);s.set(e[t],e)})}delete(e){this.indexes.forEach(t=>{const s=this.maps.get(t);if(!s)throw new Error(`AG Grid: ${String(t)} not found`);s.delete(e[t])})}clear(){this.maps.forEach(e=>e.clear())}getIterator(e){const t=this.maps.get(e);if(!t)throw new Error(`AG Grid: ${String(e)} not found`);return t.values()}forEach(e){const t=this.getIterator(this.indexes[0]);let s;for(;(s=t.next())&&!s.done;)e(s.value)}find(e){const t=this.getIterator(this.indexes[0]);let s;for(;(s=t.next())&&!s.done;)if(e(s.value))return s.value}filter(e){const t=this.getIterator(this.indexes[0]);let s;const o=[];for(;(s=t.next())&&!s.done;)e(s.value)&&o.push(s.value);return o}},B=class extends ke{constructor(e,t,s){super(),this.live=!0,this.removedNodeCache=new Map,this.store=e,this.numberOfRows=t,this.isLastRowKnown=!1,this.storeParams=s}wireBeans(e){this.rowRenderer=e.rowRenderer,this.blockUtils=e.ssrmBlockUtils,this.focusService=e.focusService,this.nodeManager=e.ssrmNodeManager,this.serverSideRowModel=e.rowModel,this.rowNodeSorter=e.rowNodeSorter,this.sortController=e.sortController,this.lazyBlockLoadingService=e.lazyBlockLoadingService}postConstruct(){this.lazyBlockLoadingService.subscribe(this),this.nodeMap=new Te("index","id","node"),this.nodeDisplayIndexMap=new Map,this.nodesToRefresh=new Set,this.defaultNodeIdPrefix=this.blockUtils.createNodeIdPrefix(this.store.getParentNode()),this.getRowIdFunc=this.gos.getRowIdCallback(),this.isMasterDetail=this.gos.get("masterDetail")}destroy(){this.lazyBlockLoadingService.unsubscribe(this),this.numberOfRows=0,this.nodeMap.forEach(e=>this.blockUtils.destroyRowNode(e.node)),this.nodeMap.clear(),this.nodeDisplayIndexMap.clear(),this.nodesToRefresh.clear(),this.live=!1,super.destroy()}getRowByDisplayIndex(e){if(!this.store.isDisplayIndexInStore(e))return;const t=this.nodeDisplayIndexMap.get(e);if(t)return(t.stub||t.__needsRefreshWhenVisible)&&this.lazyBlockLoadingService.queueLoadCheck(),t;if(e===this.store.getDisplayIndexStart())return this.createStubNode(0,e);const s=this.nodeDisplayIndexMap.get(e-1);if(s){if(this.isMasterDetail&&s.master&&s.expanded)return s.detailNode;if(s.expanded&&s.childStore?.isDisplayIndexInStore(e))return s.childStore?.getRowUsingDisplayIndex(e);const d=this.nodeMap.getBy("node",s);return this.createStubNode(d.index+1,e)}const o=this.getSurroundingNodesByDisplayIndex(e);if(o==null){const d=this.store.getRowCount()-(this.store.getDisplayIndexEnd()-e);return this.createStubNode(d,e)}const{previousNode:i,nextNode:r}=o;if(i&&i.node.expanded&&i.node.childStore?.isDisplayIndexInStore(e))return i.node.childStore?.getRowUsingDisplayIndex(e);if(r){const d=r.node.rowIndex-e,l=r.index-d;return this.createStubNode(l,e)}const n=this.store.getRowCount()-(this.store.getDisplayIndexEnd()-e);return this.createStubNode(n,e)}createStubNode(e,t){const s=this.store.getRowBounds(t),o=this.createRowAtIndex(e,null,i=>{i.setRowIndex(t),i.setRowTop(s.rowTop),this.nodeDisplayIndexMap.set(t,i)});return this.lazyBlockLoadingService.queueLoadCheck(),o}getRowByStoreIndex(e){return this.nodeMap.getBy("index",e)?.node}skipDisplayIndexes(e,t,s){if(e===0)return;const o=this.gos.getRowHeightAsNumber();t.skip(e),s.value+=e*o}setDisplayIndexes(e,t){this.nodeDisplayIndexMap.clear();const s={};this.nodeMap.forEach(r=>{s[r.index]=r.node});let o=-1;for(const r in s){const n=s[r],d=Number(r),l=d-1-o;this.skipDisplayIndexes(l,e,t),this.blockUtils.setDisplayIndex(n,e,t),this.nodeDisplayIndexMap.set(n.rowIndex,n),o=d}const i=this.numberOfRows-1-o;this.skipDisplayIndexes(i,e,t),this.purgeExcessRows()}getRowCount(){return this.numberOfRows}setRowCount(e,t){if(e<0)throw new Error("AG Grid: setRowCount can only accept a positive row count.");this.numberOfRows=e,t!=null&&(this.isLastRowKnown=t,t===!1&&(this.numberOfRows+=1)),this.fireStoreUpdatedEvent()}getNodes(){return this.nodeMap}getNodeCachedByDisplayIndex(e){return this.nodeDisplayIndexMap.get(e)??null}getNodesToRefresh(){return this.nodesToRefresh}getSurroundingNodesByDisplayIndex(e){let t,s;return this.nodeMap.forEach(o=>{if(e>o.node.rowIndex){(s==null||s.node.rowIndex<o.node.rowIndex)&&(s=o);return}if(t==null||t.node.rowIndex>o.node.rowIndex){t=o;return}}),!s&&!t?null:{previousNode:s,nextNode:t}}getDisplayIndexFromStoreIndex(e){const t=this.nodeMap.getBy("index",e);if(t)return t.node.rowIndex;let s,o;if(this.nodeMap.forEach(n=>{if(e>n.index){(o==null||o.index<n.index)&&(o=n);return}if(s==null||s.index>n.index){s=n;return}}),!s)return this.store.getDisplayIndexEnd()-(this.numberOfRows-e);if(!o)return this.store.getDisplayIndexStart()+e;const i=e-o.index;return(o.node.childStore?.getDisplayIndexEnd()??o.node.rowIndex)+i}createRowAtIndex(e,t,s){const o=this.nodeMap.getBy("index",e);if(o){const{node:r}=o;if(r.__needsRefreshWhenVisible=!1,this.doesNodeMatch(t,r))return this.blockUtils.updateDataIntoRowNode(r,t),this.nodesToRefresh.delete(r),r;if(this.getRowIdFunc==null&&r.hasChildren()&&r.expanded)return this.nodesToRefresh.delete(r),r;this.destroyRowAtIndex(e)}if(t&&this.getRowIdFunc!=null){const r=this.getRowId(t),n=r&&this.removedNodeCache?.get(r);if(n)return this.removedNodeCache?.delete(r),this.blockUtils.updateDataIntoRowNode(n,t),this.nodeMap.set({id:n.id,node:n,index:e}),this.nodesToRefresh.delete(n),n.__needsRefreshWhenVisible=!1,n;const d=this.nodeMap.getBy("id",r);if(d){this.nodeMap.delete(d);const{node:l,index:a}=d;return this.blockUtils.updateDataIntoRowNode(l,t),this.nodeMap.set({id:l.id,node:l,index:e}),this.nodesToRefresh.delete(l),l.__needsRefreshWhenVisible=!1,this.getBlockStartIndex(a)===this.getBlockStartIndex(e)||this.markBlockForVerify(a),l}}const i=this.blockUtils.createRowNode(this.store.getRowDetails());if(t!=null){const r=this.getPrefixedId(this.store.getIdSequence().next());this.blockUtils.setDataIntoRowNode(i,t,r,void 0),this.serverSideRowModel.setPaused(!0),this.blockUtils.checkOpenByDefault(i),this.serverSideRowModel.setPaused(!1),this.nodeManager.addRowNode(i)}return this.nodeMap.set({id:i.id,node:i,index:e}),s&&s(i),i}getBlockStates(){const e={},t={};this.nodeMap.forEach(({node:r,index:n})=>{const d=this.getBlockStartIndex(n);!r.stub&&!r.failedLoad&&(e[d]=(e[d]??0)+1);let l="loaded";r.failedLoad?l="failed":this.lazyBlockLoadingService.isRowLoading(this,d)?l="loading":(this.nodesToRefresh.has(r)||r.stub)&&(l="needsLoading"),t[d]||(t[d]=new Set),t[d].add(l)});const s={loading:4,failed:3,needsLoading:2,loaded:1},o=this.blockUtils.createNodeIdPrefix(this.store.getParentNode()),i={};return Object.entries(t).forEach(([r,n])=>{const l=[...n].sort((c,g)=>(s[c]??0)-(s[g]??0))[0],a=Number(r)/this.getBlockSize(),h=o?`${o}-${a}`:String(a);i[h]={blockNumber:a,startRow:Number(r),endRow:Number(r)+this.getBlockSize(),pageStatus:l,loadedRowCount:e[r]??0}}),i}destroyRowAtIndex(e){const t=this.nodeMap.getBy("index",e);t&&(this.nodeMap.delete(t),this.nodeDisplayIndexMap.delete(t.node.rowIndex),this.nodesToRefresh.size>0?this.removedNodeCache.set(t.node.id,t.node):this.blockUtils.destroyRowNode(t.node),this.nodesToRefresh.delete(t.node))}getSsrmParams(){return this.store.getSsrmParams()}getPrefixedId(e){return this.defaultNodeIdPrefix?this.defaultNodeIdPrefix+"-"+e:e.toString()}markBlockForVerify(e){const[t,s]=this.getBlockBounds(e);this.nodeMap.filter(i=>i.index>=t&&i.index<s).forEach(({node:i})=>{i.__needsRefreshWhenVisible=!0})}doesNodeMatch(e,t){if(t.stub)return!1;const s=this.getRowId(e);return s===null?t.data===e:t.id===s}purgeStubsOutsideOfViewport(){const e=this.rowRenderer.getFirstVirtualRenderedRow(),t=this.rowRenderer.getLastVirtualRenderedRow(),s=this.getBlockStartIndex(e),[,o]=this.getBlockBounds(t);this.nodeMap.forEach(i=>{this.lazyBlockLoadingService.isRowLoading(this,i.index)||i.node.failedLoad||i.node.stub&&(i.index<s||i.index>o)&&this.destroyRowAtIndex(i.index)})}getBlocksDistanceFromRow(e,t){const s={};return e.forEach(({node:o,index:i})=>{const[r,n]=this.getBlockBounds(i);if(r in s)return;const d=Math.abs(o.rowIndex-t);let l;const a=this.nodeMap.getBy("index",[n-1]);a&&(l=Math.abs(a.node.rowIndex-t));const h=l==null||d<l?d:l;s[r]=h}),Object.entries(s)}purgeExcessRows(){if(this.purgeStubsOutsideOfViewport(),this.store.getDisplayIndexEnd()==null||this.storeParams.maxBlocksInCache==null)return;const e=this.rowRenderer.getFirstVirtualRenderedRow(),t=this.rowRenderer.getLastVirtualRenderedRow(),s=new Set,o=new Set;this.nodeMap.forEach(({index:u,node:f})=>{const S=this.getBlockStartIndex(u);s.add(S),f.rowIndex>=e&&f.rowIndex<=t&&o.add(S)});const i=Math.max(o.size,this.storeParams.maxBlocksInCache??0),n=s.size-i;if(n<=0)return;let d=Number.MAX_SAFE_INTEGER,l=Number.MIN_SAFE_INTEGER;o.forEach(u=>{d>u&&(d=u),l<u&&(l=u)});const a=this.nodeMap.filter(({node:u,index:f})=>{const S=this.getBlockStartIndex(f);return!(S>=d&&S<=l)&&!this.isNodeCached(u)});if(a.length===0)return;const h=e+(t-e)/2,c=this.getBlocksDistanceFromRow(a,h),g=this.getBlockSize();c.sort((u,f)=>Math.sign(f[1]-u[1]));for(let u=0;u<Math.min(n,c.length);u++){const f=Number(c[u][0]);for(let S=f;S<f+g;S++){const m=this.nodeMap.getBy("index",S);!m||this.isNodeCached(m.node)||this.destroyRowAtIndex(S)}}}isNodeFocused(e){const t=this.focusService.getFocusCellToUseAfterRefresh();return!t||t.rowPinned!=null?!1:t.rowIndex===e.rowIndex}isNodeCached(e){return e.isExpandable()&&e.expanded||this.isNodeFocused(e)}extractDuplicateIds(e){if(this.getRowIdFunc==null)return[];const t=new Set,s=new Set;return e.forEach(o=>{const i=this.getRowId(o);if(t.has(i)){s.add(i);return}t.add(i)}),[...s]}onLoadSuccess(e,t,s){if(!this.live)return;const o=s.groupLevelInfo;if(this.store.setStoreInfo(o),this.getRowIdFunc!=null){const n=this.extractDuplicateIds(s.rowData);if(n.length>0){const d=n.join(", ");Be(`Unable to display rows as duplicate row ids (${d}) were returned by the getRowId callback. Please modify the getRowId callback to provide unique ids.`),this.onLoadFailed(e,t);return}}s.pivotResultFields&&this.serverSideRowModel.generateSecondaryColumns(s.pivotResultFields);const i=this.nodesToRefresh.size>0;if(s.rowData.forEach((n,d)=>{const l=e+d,a=this.nodeMap.getBy("index",l);if(a?.node?.stub){this.createRowAtIndex(l,n);return}if(a&&this.doesNodeMatch(n,a.node)){this.blockUtils.updateDataIntoRowNode(a.node,n),this.nodesToRefresh.delete(a.node),a.node.__needsRefreshWhenVisible=!1;return}this.createRowAtIndex(l,n)}),s.rowCount!=null&&s.rowCount!==-1)this.numberOfRows=s.rowCount,this.isLastRowKnown=!0;else if(t>s.rowData.length)this.numberOfRows=e+s.rowData.length,this.isLastRowKnown=!0;else if(!this.isLastRowKnown){const n=e+s.rowData.length+1;n>this.numberOfRows&&(this.numberOfRows=n)}this.isLastRowKnown&&this.nodeMap.filter(d=>d.index>=this.numberOfRows).forEach(d=>this.destroyRowAtIndex(d.index)),this.fireStoreUpdatedEvent();const r=this.nodesToRefresh.size===0;i&&r&&this.fireRefreshFinishedEvent()}fireRefreshFinishedEvent(){this.nodesToRefresh.size===0&&(this.removedNodeCache.forEach(t=>{this.blockUtils.destroyRowNode(t)}),this.removedNodeCache=new Map,this.store.fireRefreshFinishedEvent())}isStoreFullyLoaded(){const e=this.isLastRowKnown,t=this.nodeMap.getSize()===this.numberOfRows;if(!e||!t||this.nodesToRefresh.size>0)return;let s=-1;return this.nodeMap.find(i=>(s+=1,!!(i.index!==s||i.node.__needsRefreshWhenVisible||i.node.stub)))==null}isLastRowIndexKnown(){return this.isLastRowKnown}onLoadFailed(e,t){if(!this.live)return;const s=this.nodesToRefresh.size>0;for(let i=e;i<e+t&&i<this.getRowCount();i++){let{node:r}=this.nodeMap.getBy("index",i)??{};r&&this.nodesToRefresh.delete(r),(!r||!r.stub)&&(r&&!r.stub&&this.destroyRowAtIndex(i),r=this.createRowAtIndex(i)),r.__needsRefreshWhenVisible=!1,r.failedLoad=!0}const o=this.nodesToRefresh.size===0;s&&o&&this.fireRefreshFinishedEvent(),this.fireStoreUpdatedEvent()}markNodesForRefresh(){this.nodeMap.forEach(e=>{e.node.stub&&!e.node.failedLoad||this.nodesToRefresh.add(e.node)}),this.lazyBlockLoadingService.queueLoadCheck(),this.isLastRowKnown&&this.numberOfRows===0&&(this.numberOfRows=1,this.isLastRowKnown=!1,this.fireStoreUpdatedEvent())}isNodeInCache(e){return!!this.nodeMap.getBy("id",e)}fireStoreUpdatedEvent(){this.live&&this.store.fireStoreUpdatedEvent()}getRowId(e){if(this.getRowIdFunc==null)return null;const{level:t}=this.store.getRowDetails(),s=this.store.getParentNode().getGroupKeys();return this.getRowIdFunc({data:e,parentKeys:s.length>0?s:void 0,level:t})}getOrderedNodeMap(){const e={};return this.nodeMap.forEach(t=>e[t.index]=t),e}clearDisplayIndexes(){this.nodeDisplayIndexMap.clear()}clientSideSortRows(){const e=this.sortController.getSortOptions();if(!e.some(i=>i.sort!=null))return;const s=new Array(this.nodeMap.getSize());this.nodeMap.forEach(i=>s[i.index]=i.node),this.nodeMap.clear(),this.rowNodeSorter.doFullSort(s,e).forEach((i,r)=>{this.nodeMap.set({id:i.id,node:i,index:r})})}updateRowNodes(e){if(this.getRowIdFunc==null)throw new Error("AG Grid: Transactions can only be applied when row ids are supplied.");const t=[];return e.forEach(s=>{const o=this.getRowId(s),i=this.nodeMap.getBy("id",o);i&&(this.blockUtils.updateDataIntoRowNode(i.node,s),t.push(i.node))}),t}insertRowNodes(e,t){const s=this.store.getRowCount()-(this.store.getParentNode().sibling?1:0),o=t==null&&this.isLastRowKnown?s:t;if(o==null||s<o)return[];if(this.getRowIdFunc==null)throw new Error("AG Grid: Transactions can only be applied when row ids are supplied.");const i={};e.forEach(l=>{const a=this.getRowId(l);a&&this.isNodeInCache(a)||(i[a]=l)});const r=Object.values(i),n=r.length;if(n===0)return[];const d=this.nodeMap.filter(l=>l.index>=o);return d.forEach(l=>this.nodeMap.delete(l)),d.forEach(l=>{this.nodeMap.set({node:l.node,index:l.index+n,id:l.id})}),this.numberOfRows+=n,r.map((l,a)=>this.createRowAtIndex(o+a,l))}removeRowNodes(e){if(this.getRowIdFunc==null)throw new Error("AG Grid: Transactions can only be applied when row ids are supplied.");const t=[],s=[];let o=0;const i=[...e],r=this.getOrderedNodeMap();let n=-1;for(const d in r){n+=1;const l=r[d],a=i.findIndex(c=>c===l.id);if(a!==-1){i.splice(a,1),this.destroyRowAtIndex(Number(d)),t.push(l.node),o+=1;continue}if(o===0)continue;const h=Number(d);n!==h&&s.push(l.node),this.nodeMap.delete(r[d]),this.nodeMap.set({id:l.id,node:l.node,index:h-o})}return this.numberOfRows-=this.isLastRowIndexKnown()?e.length:o,i.length>0&&s.length>0&&(s.forEach(d=>d.__needsRefreshWhenVisible=!0),this.lazyBlockLoadingService.queueLoadCheck()),t}getBlockSize(){return this.storeParams.cacheBlockSize||k.DEFAULT_BLOCK_SIZE}getBlockStartIndex(e){const t=this.getBlockSize();return e-e%t}getBlockBounds(e){const t=this.getBlockStartIndex(e),s=this.getBlockSize();return[t,t+s]}},C=class extends Ae{constructor(e,t,s){super(),this.idSequence=new x,this.ssrmParams=e,this.parentRowNode=s,this.storeParams=t,this.level=s.level+1,this.group=e.rowGroupCols?this.level<e.rowGroupCols.length:!1,this.leafGroup=e.rowGroupCols?this.level===e.rowGroupCols.length-1:!1,this.info={}}wireBeans(e){this.blockUtils=e.ssrmBlockUtils,this.storeUtils=e.ssrmStoreUtils,this.selectionService=e.selectionService,this.funcColsService=e.funcColsService}postConstruct(){let e=1;if(this.level===0&&(e=this.storeUtils.getServerSideInitialRowCount()??1,this.eventService.dispatchEventOnce({type:"rowCountReady"})),this.cache=this.createManagedBean(new B(this,e,this.storeParams)),!this.gos.get("treeData")&&this.group){const s=this.ssrmParams.rowGroupCols[this.level];this.groupField=s.field,this.rowGroupColumn=this.funcColsService.getRowGroupColumns()[this.level]}}destroy(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.destroyBean(this.cache),super.destroy()}applyRowData(e,t,s){this.cache.onLoadSuccess(t,s,e)}applyTransaction(e){const t=this.gos.getRowIdCallback();if(!t)return Ee("getRowId callback must be implemented for transactions to work. Transaction was ignored."),{status:E.Cancelled};const s=this.gos.getCallback("isApplyServerSideTransaction");if(s){const h={transaction:e,parentNode:this.parentRowNode,groupLevelInfo:this.info};if(!s(h))return{status:E.Cancelled}}const o=this.cache.isStoreFullyLoaded();let i;e.update?.length&&(i=this.cache.updateRowNodes(e.update));let r;if(e.add?.length){let h=e.addIndex;h!=null&&h<0&&(h=void 0),r=this.cache.insertRowNodes(e.add,h)}let n;if(e.remove?.length){const h=e.remove.map(g=>t({level:this.level,parentKeys:this.parentRowNode.getGroupKeys(),data:g})),c=[...new Set(h)];n=this.cache.removeRowNodes(c)}const d=this.gos.get("serverSideEnableClientSideSort"),l=i?.length||r?.length;return o&&d&&l&&this.cache.clientSideSortRows(),this.updateSelectionAfterTransaction(i,n),{status:E.Applied,update:i,add:r,remove:n}}updateSelectionAfterTransaction(e,t){const s=[];e?.forEach(o=>{o.isSelected()&&!o.selectable&&s.push(o)}),t?.forEach(o=>{o.isSelected()&&s.push(o)}),s.length&&this.selectionService.setNodesSelected({newValue:!1,clearSelection:!1,nodes:s,source:"rowDataChanged"})}clearDisplayIndexes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.cache.getNodes().forEach(e=>this.blockUtils.clearDisplayIndex(e.node)),this.parentRowNode.sibling&&this.blockUtils.clearDisplayIndex(this.parentRowNode.sibling),this.cache.clearDisplayIndexes()}getDisplayIndexStart(){return this.displayIndexStart}getDisplayIndexEnd(){return this.displayIndexEnd}getRowCount(){return this.parentRowNode.sibling?this.cache.getRowCount()+1:this.cache.getRowCount()}setRowCount(e,t){this.cache.setRowCount(e,t)}isDisplayIndexInStore(e){return this.cache.getRowCount()===0?!1:this.displayIndexStart<=e&&e<this.getDisplayIndexEnd()}setDisplayIndexes(e,t){this.displayIndexStart=e.peek(),this.topPx=t.value;const s=this.parentRowNode.level>-1&&this.gos.getGroupTotalRowCallback()({node:this.parentRowNode});s||this.parentRowNode.destroyFooter(),s==="top"&&(this.parentRowNode.createFooter(),this.blockUtils.setDisplayIndex(this.parentRowNode.sibling,e,t)),this.cache.setDisplayIndexes(e,t),s==="bottom"&&(this.parentRowNode.createFooter(),this.blockUtils.setDisplayIndex(this.parentRowNode.sibling,e,t)),this.displayIndexEnd=e.peek(),this.heightPx=t.value-this.topPx}forEachStoreDeep(e,t=new x){e(this,t.next()),this.cache.getNodes().forEach(s=>{const o=s.node.childStore;o&&o.forEachStoreDeep(e,t)})}forEachNodeDeep(e,t=new x){this.cache.getNodes().forEach(s=>{e(s.node,t.next());const o=s.node.childStore;o&&o.forEachNodeDeep(e,t)})}forEachNodeDeepAfterFilterAndSort(e,t=new x,s=!1){const o=this.parentRowNode.level>-1&&this.gos.getGroupTotalRowCallback()({node:this.parentRowNode});o==="top"&&e(this.parentRowNode.sibling,t.next());const i=this.cache.getOrderedNodeMap();for(const r in i){const n=i[r];e(n.node,t.next());const d=n.node.childStore;d&&d.forEachNodeDeepAfterFilterAndSort(e,t,s)}o==="bottom"&&e(this.parentRowNode.sibling,t.next())}retryLoads(){this.cache.getNodes().forEach(({node:e})=>{e.failedLoad&&(e.failedLoad=!1,e.__needsRefreshWhenVisible=!0,e.stub=!0)}),this.forEachChildStoreShallow(e=>e.retryLoads()),this.fireStoreUpdatedEvent()}getRowUsingDisplayIndex(e){return this.parentRowNode.sibling&&e===this.parentRowNode.sibling.rowIndex?this.parentRowNode.sibling:this.cache.getRowByDisplayIndex(e)}getRowBounds(e){if(!this.isDisplayIndexInStore(e))return null;const t=this.cache.getNodeCachedByDisplayIndex(e);if(t){const d=this.blockUtils.extractRowBounds(t,e);if(d)return d}const{previousNode:s,nextNode:o}=this.cache.getSurroundingNodesByDisplayIndex(e)??{};if(s){const d=this.blockUtils.extractRowBounds(s.node,e);if(d!=null)return d}const i=this.gos.getRowHeightAsNumber();if(o){const d=(o.node.rowIndex-e)*i;return{rowTop:o.node.rowTop-d,rowHeight:i}}const r=this.topPx+this.heightPx,n=(this.getDisplayIndexEnd()-e)*i;return{rowTop:r-n,rowHeight:i}}isPixelInRange(e){return e>=this.topPx&&e<this.topPx+this.heightPx}getRowIndexAtPixel(e){if(e<this.topPx)return this.getDisplayIndexStart();if(e>=this.topPx+this.heightPx)return this.getDisplayIndexEnd()-1;if(this.parentRowNode.sibling&&e>this.parentRowNode.sibling.rowTop&&e<this.parentRowNode.sibling.rowTop+this.parentRowNode.sibling.rowHeight)return this.parentRowNode.sibling.rowIndex;let t=Number.MAX_SAFE_INTEGER,s=null,o=Number.MAX_SAFE_INTEGER,i=null;if(this.cache.getNodes().forEach(({node:l})=>{const a=Math.abs(e-l.rowTop);if(l.rowTop<e){a<t&&(t=a,s=l);return}a<o&&(o=a,i=l)}),s=s,i=i,s){const l=this.blockUtils.getIndexAtPixel(s,e);if(l!=null)return l}const r=this.gos.getRowHeightAsNumber();if(i){const l=i.rowTop,a=Math.ceil((l-e)/r);return i.rowIndex-a}const n=this.topPx+this.heightPx,d=Math.floor((n-e)/r);return this.getDisplayIndexEnd()-d}getChildStore(e){return this.storeUtils.getChildStore(e,this,t=>{const s=this.cache.getNodes().find(o=>o.node.key==t);return s?s.node:null})}forEachChildStoreShallow(e){this.cache.getNodes().forEach(({node:t})=>{t.childStore&&e(t.childStore)})}refreshAfterSort(e){if(this.storeUtils.isServerSideSortAllLevels()||this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e)){const s=this.cache.isStoreFullyLoaded(),o=this.gos.get("serverSideEnableClientSideSort");if(!(s&&o)){const r=this.cache.getRowCount();this.destroyBean(this.cache),this.cache=this.createManagedBean(new B(this,r,this.storeParams));return}this.cache.clientSideSortRows()}this.forEachChildStoreShallow(s=>s.refreshAfterSort(e))}refreshAfterFilter(e){if(!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e)){this.refreshStore(!0);return}this.forEachChildStoreShallow(s=>s.refreshAfterFilter(e))}refreshStore(e){if(e){this.destroyBean(this.cache),this.cache=this.createManagedBean(new B(this,1,this.storeParams)),this.fireStoreUpdatedEvent();return}this.cache.markNodesForRefresh()}getTopLevelRowDisplayedIndex(e){return this.cache.getDisplayIndexFromStoreIndex(e)??e}isLastRowIndexKnown(){return this.cache.isLastRowIndexKnown()}getRowNodesInRange(e,t){return this.cache.getNodes().filter(({node:s})=>s.rowIndex>=e.rowIndex&&s.rowIndex<=t.rowIndex).map(({node:s})=>s)}addStoreStates(e){e.push({suppressInfiniteScroll:!1,route:this.parentRowNode.getGroupKeys(),rowCount:this.getRowCount(),lastRowIndexKnown:this.isLastRowIndexKnown(),info:this.info,maxBlocksInCache:this.storeParams.maxBlocksInCache,cacheBlockSize:this.storeParams.cacheBlockSize}),this.forEachChildStoreShallow(t=>t.addStoreStates(e))}getIdSequence(){return this.idSequence}getParentNode(){return this.parentRowNode}getRowDetails(){return{field:this.groupField,group:this.group,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn}}getSsrmParams(){return this.ssrmParams}setStoreInfo(e){e&&Object.assign(this.info,e)}fireStoreUpdatedEvent(){const e={type:"storeUpdated"};this.eventService.dispatchEvent(e)}fireRefreshFinishedEvent(){const e={type:"storeRefreshed",route:this.parentRowNode.getRoute()};this.eventService.dispatchEvent(e)}getBlockStates(){return this.cache.getBlockStates()}getStoreBounds(){return{topPx:this.topPx,heightPx:this.heightPx}}getCache(){return this.cache}},Le=class extends Se{constructor(){super(...arguments),this.beanName="rowModel",this.onRowHeightChanged_debounced=ve(this.onRowHeightChanged.bind(this),100),this.pauseStoreUpdateListening=!1,this.started=!1,this.managingPivotResultColumns=!1}wireBeans(e){this.columnModel=e.columnModel,this.columnNameService=e.columnNameService,this.pivotResultColsService=e.pivotResultColsService,this.funcColsService=e.funcColsService,this.filterManager=e.filterManager,this.sortController=e.sortController,this.rowRenderer=e.rowRenderer,this.nodeManager=e.ssrmNodeManager,this.storeFactory=e.ssrmStoreFactory,this.beans=e,this.pivotColDefService=e.pivotColDefService}ensureRowHeightsValid(){return!1}start(){this.started=!0,this.updateDatasource()}destroyDatasource(){this.datasource&&(this.datasource.destroy&&this.datasource.destroy(),this.rowRenderer.datasourceChanged(),this.datasource=void 0)}postConstruct(){const e=this.resetRootStore.bind(this);this.addManagedEventListeners({newColumnsLoaded:this.onColumnEverything.bind(this),storeUpdated:this.onStoreUpdated.bind(this),columnValueChanged:e,columnPivotChanged:e,columnRowGroupChanged:e,columnPivotModeChanged:e}),this.addManagedPropertyListeners(["masterDetail","treeData","removePivotHeaderRowWhenSingleValueColumn","suppressServerSideInfiniteScroll","cacheBlockSize"],e),this.addManagedPropertyListener("rowHeight",()=>this.resetRowHeights()),this.verifyProps(),this.addManagedPropertyListener("serverSideDatasource",()=>this.updateDatasource())}updateDatasource(){const e=this.gos.get("serverSideDatasource");e&&this.setDatasource(e)}verifyProps(){this.gos.exists("initialGroupOrderComparator")&&P("initialGroupOrderComparator cannot be used with Server Side Row Model."),this.gos.isRowSelection()&&!this.gos.exists("getRowId")&&P("getRowId callback must be provided for Server Side Row Model selection to work correctly.")}setDatasource(e){this.started&&(this.destroyDatasource(),this.datasource=e,this.resetRootStore())}applyRowData(e,t,s){const o=this.getRootStore();if(!o)return;const i=o.getChildStore(s);i&&(i instanceof C?i.applyRowData(e,t,e.rowData.length):i instanceof A&&i.processServerResult(e))}isLastRowIndexKnown(){const e=this.getRootStore();return e?e.isLastRowIndexKnown():!1}onColumnEverything(){if(!this.storeParams){this.resetRootStore();return}const e=this.columnsToValueObjects(this.funcColsService.getRowGroupColumns()),t=this.columnsToValueObjects(this.funcColsService.getValueColumns()),s=this.columnsToValueObjects(this.funcColsService.getPivotColumns()),o=a=>{const h={};a.oldCols.forEach(u=>h[u.id]=u);const c=a.newCols.every(u=>{const f=h[u.id];return f&&delete h[u.id],f&&f.field===u.field&&f.aggFunc===u.aggFunc}),g=!a.allowRemovedColumns&&!!Object.values(h).length;return c&&!g},i=!me(this.storeParams.sortModel,this.sortController.getSortModel()),r=!o({oldCols:this.storeParams.rowGroupCols,newCols:e}),n=!o({oldCols:this.storeParams.pivotCols,newCols:s}),d=!!e?.length&&!o({oldCols:this.storeParams.valueCols,newCols:t,allowRemovedColumns:!0});if(i||r||n||d)this.resetRootStore();else{const a=this.createStoreParams();this.storeParams.rowGroupCols=a.rowGroupCols,this.storeParams.pivotCols=a.pivotCols,this.storeParams.valueCols=a.valueCols}}destroyRootStore(){!this.rootNode||!this.rootNode.childStore||(this.rootNode.childStore=this.destroyBean(this.rootNode.childStore),this.nodeManager.clear())}refreshAfterSort(e,t){this.storeParams&&(this.storeParams.sortModel=e);const s=this.getRootStore();s&&(s.refreshAfterSort(t),this.onStoreUpdated())}generateSecondaryColumns(e){if(!this.pivotColDefService){we.__assertRegistered(pe.RowGroupingModule,"pivotResultFields",this.gridId);return}const t=this.pivotColDefService.createColDefsFromFields(e);this.managingPivotResultColumns=!0,this.pivotResultColsService.setPivotResultCols(t,"rowModelUpdated")}resetRowHeights(){const e=this.resetRowHeightsForAllRowNodes(),t=this.gos.getRowHeightForNode(this.rootNode);if(this.rootNode.setRowHeight(t.height,t.estimated),this.rootNode.sibling){const s=this.gos.getRowHeightForNode(this.rootNode.sibling);this.rootNode.sibling.setRowHeight(s.height,s.estimated)}e&&this.onRowHeightChanged()}resetRowHeightsForAllRowNodes(){let e=!1;return this.forEachNode(t=>{const s=this.gos.getRowHeightForNode(t);t.setRowHeight(s.height,s.estimated);const o=t.detailNode;if(o){const i=this.gos.getRowHeightForNode(o);o.setRowHeight(i.height,i.estimated)}if(t.sibling){const i=this.gos.getRowHeightForNode(t.sibling);o.setRowHeight(i.height,i.estimated)}e=!0}),e}resetRootStore(){this.destroyRootStore(),this.rootNode=new Re(this.beans),this.rootNode.group=!0,this.rootNode.level=-1,this.datasource&&(this.storeParams=this.createStoreParams(),this.rootNode.childStore=this.createBean(this.storeFactory.createStore(this.storeParams,this.rootNode)),this.updateRowIndexesAndBounds()),this.managingPivotResultColumns&&(this.pivotResultColsService.setPivotResultCols(null,"api"),this.managingPivotResultColumns=!1),this.dispatchModelUpdated(!0)}columnsToValueObjects(e){return e.map(t=>({id:t.getId(),aggFunc:t.getAggFunc(),displayName:this.columnNameService.getDisplayNameForColumn(t,"model"),field:t.getColDef().field}))}createStoreParams(){const e=this.columnsToValueObjects(this.funcColsService.getRowGroupColumns()),t=this.columnsToValueObjects(this.funcColsService.getValueColumns()),s=this.columnsToValueObjects(this.funcColsService.getPivotColumns()),o=this.gos.isGetRowHeightFunction();return{valueCols:t,rowGroupCols:e,pivotCols:s,pivotMode:this.columnModel.isPivotMode(),filterModel:this.filterManager?.isAdvancedFilterEnabled()?this.filterManager?.getAdvancedFilterModel():this.filterManager?.getFilterModel()??{},sortModel:this.sortController.getSortModel(),datasource:this.datasource,lastAccessedSequence:new F,dynamicRowHeight:o}}getParams(){return this.storeParams}dispatchModelUpdated(e=!1){const t={type:"modelUpdated",animate:!e,keepRenderedRows:!e,newPage:!1,newData:!1};this.eventService.dispatchEvent(t)}onStoreUpdated(){this.pauseStoreUpdateListening||(this.updateRowIndexesAndBounds(),this.dispatchModelUpdated())}onRowHeightChangedDebounced(){this.onRowHeightChanged_debounced()}onRowHeightChanged(){this.updateRowIndexesAndBounds(),this.dispatchModelUpdated()}updateRowIndexesAndBounds(){const e=this.getRootStore();e&&e.setDisplayIndexes(new F,{value:0})}retryLoads(){const e=this.getRootStore();e&&(e.retryLoads(),this.onStoreUpdated())}getRow(e){const t=this.getRootStore();if(t)return t.getRowUsingDisplayIndex(e)}setPaused(e){this.pauseStoreUpdateListening=e}expandAll(e){this.pauseStoreUpdateListening=!0,this.forEachNode(t=>{t.stub||t.hasChildren()&&t.setExpanded(e)}),this.pauseStoreUpdateListening=!1,this.onStoreUpdated()}refreshAfterFilter(e,t){this.storeParams&&(this.storeParams.filterModel=e);const s=this.getRootStore();s&&(s.refreshAfterFilter(t),this.onStoreUpdated())}getRootStore(){if(this.rootNode&&this.rootNode.childStore)return this.rootNode.childStore}getRowCount(){const e=this.getRootStore();return e?e.getDisplayIndexEnd():0}getTopLevelRowCount(){const e=this.getRootStore();return e?e.getRowCount():1}getTopLevelRowDisplayedIndex(e){const t=this.getRootStore();return t?t.getTopLevelRowDisplayedIndex(e):e}getRowBounds(e){const t=this.getRootStore();return t?t.getRowBounds(e):{rowTop:0,rowHeight:this.gos.getRowHeightAsNumber()}}getBlockStates(){const e=this.getRootStore();if(!e)return;const t={};return e.forEachStoreDeep(s=>{if(s instanceof A){const{id:o,state:i}=s.getBlockStateJson();t[o]=i}else if(s instanceof C)Object.entries(s.getBlockStates()).forEach(([o,i])=>{t[o]=i});else throw new Error("AG Grid: Unsupported store type")}),t}getRowIndexAtPixel(e){const t=this.getRootStore();return e<=0||!t?0:t.getRowIndexAtPixel(e)}isEmpty(){return!1}isRowsToRender(){return this.getRootStore()!=null&&this.getRowCount()>0}getType(){return"serverSide"}forEachNode(e){const t=this.getRootStore();t&&t.forEachNodeDeep(e)}forEachNodeAfterFilterAndSort(e,t=!1){const s=this.getRootStore();s&&s.forEachNodeDeepAfterFilterAndSort(e,void 0,t)}executeOnStore(e,t){if(!this.started)return!1;const s=this.getRootStore();if(!s)return!0;const o=s.getChildStore(e);return o&&t(o),!0}refreshStore(e={}){const t=e.route?e.route:[];this.executeOnStore(t,s=>s.refreshStore(e.purge==!0))}getStoreState(){const e=[],t=this.getRootStore();return t&&t.addStoreStates(e),e}getNodesInRangeForSelection(e,t){const s=e.rowIndex,o=t.rowIndex;if(s===null&&o===null)return[];if(o===null)return e?[e]:[];if(s===null)return[t];const i=[],[r,n]=[s,o].sort((d,l)=>d-l);return this.forEachNode(d=>{const l=d.rowIndex;l==null||d.stub||l>=r&&l<=n&&i.push(d)}),i.length!==n-r+1?e?[e,t]:[]:i}getRowNode(e){let t;return this.forEachNode(s=>{s.id===e&&(t=s),s.detailNode&&s.detailNode.id===e&&(t=s.detailNode)}),t}isRowPresent(e){return!!this.getRowNode(e.id)}setRowCount(e,t){const s=this.getRootStore();if(s){if(s instanceof C){s.setRowCount(e,t);return}Ce("Infinite scrolling must be enabled in order to set the row count.")}}destroy(){this.destroyDatasource(),this.destroyRootStore(),super.destroy()}};import{_warnOnce as Fe}from"@ag-grid-community/core";function Pe(e){return e.selectionService.getSelectionState()}function Ge(e,t){e.selectionService.setSelectionState(t,"api")}function Oe(e,t){return e.ssrmTransactionManager?.applyTransaction(t)}function Ue(e,t){const s=t.startRow??0,o=t.route??[];if(s<0){Fe(`invalid value ${t.startRow} for startRow, the value should be >= 0`);return}e.rowModelHelperService?.getServerSideRowModel()?.applyRowData(t.successParams,s,o)}function _e(e,t,s){return e.ssrmTransactionManager?.applyTransactionAsync(t,s)}function Ve(e){e.rowModelHelperService?.getServerSideRowModel()?.retryLoads()}function He(e){return e.ssrmTransactionManager?.flushAsyncTransactions()}function ze(e,t){e.rowModelHelperService?.getServerSideRowModel()?.refreshStore(t)}function Ke(e){return e.rowModelHelperService?.getServerSideRowModel()?.getStoreState()??[]}import{ExpansionService as je}from"@ag-grid-community/core";var qe=class extends je{constructor(){super(...arguments),this.beanName="expansionService",this.queuedRowIds=new Set}wireBeans(e){super.wireBeans(e),this.serverSideRowModel=e.rowModel}postConstruct(){super.postConstruct(),this.addManagedEventListeners({columnRowGroupChanged:()=>{this.queuedRowIds.clear()}})}checkOpenByDefault(e){if(!e.isExpandable())return;if(this.queuedRowIds.has(e.id)){this.queuedRowIds.delete(e.id),e.setExpanded(!0);return}const t=this.gos.getCallback("isServerSideGroupOpenByDefault");if(!t)return;const s={data:e.data,rowNode:e};t(s)&&e.setExpanded(!0)}expandRows(e){e.forEach(t=>{const s=this.serverSideRowModel.getRowNode(t);s?s.setExpanded(!0):this.queuedRowIds.add(t)})}expandAll(e){this.serverSideRowModel.expandAll(e)}onGroupExpandedOrCollapsed(){}};import{BeanStub as $e,_warnOnce as y}from"@ag-grid-community/core";import{BeanStub as We,_errorOnce as O,_last as Je,_warnOnce as D,isSelectionUIEvent as Qe}from"@ag-grid-community/core";var U=class{constructor(){this.root=null,this.end=null,this.cachedRange=[]}init(e){this.rowModel=e}reset(){this.root=null,this.end=null,this.cachedRange.length=0}setRoot(e){this.root=e,this.end=null,this.cachedRange.length=0}setEndRange(e){this.end=e,this.cachedRange.length=0}getRoot(){return this.root}getRange(){if(this.cachedRange.length===0){const e=this.root?this.rowModel.getRowNode(this.root):void 0,t=this.end?this.rowModel.getRowNode(this.end):void 0;if(e==null||t==null)return this.cachedRange;this.cachedRange=this.rowModel.getNodesInRangeForSelection(e,t)}return this.cachedRange}isInRange(e){return this.root===null?!1:this.getRange().some(t=>t.id===e)}truncate(e){const t=this.getRange();if(t.length===0)return{keep:[],discard:[]};const s=t[0].id===this.root,o=t.findIndex(i=>i.id===e);if(o>-1){const i=t.slice(0,o),r=t.slice(o+1);return this.setEndRange(e),s?{keep:i,discard:r}:{keep:r,discard:i}}else return{keep:t,discard:[]}}extend(e,t=!1){if(this.root==null){const r=this.getRange().slice(),n=this.rowModel.getRowNode(e);return n&&(t&&n.depthFirstSearch(d=>!d.group&&r.push(d)),r.push(n)),this.setRoot(e),{keep:r,discard:[]}}const s=this.rowModel.getRowNode(e),o=this.rowModel.getRowNode(this.root);if(s==null)return{keep:this.getRange(),discard:[]};if(o==null)return{keep:this.getRange().concat(s),discard:[]};if(this.rowModel.getNodesInRangeForSelection(o,s).find(r=>r.id===this.end))return this.setEndRange(e),{keep:this.getRange(),discard:[]};{const r=this.getRange().slice();return this.setEndRange(e),{keep:this.getRange(),discard:r}}}},_=class extends We{constructor(){super(...arguments),this.selectionCtx=new U,this.selectedState={selectAll:!1,toggledNodes:new Set},this.selectAllUsed=!1,this.selectedNodes={}}wireBeans(e){this.rowModel=e.rowModel}postConstruct(){this.selectionCtx.init(this.rowModel),this.rowSelection=this.gos.get("rowSelection"),this.addManagedPropertyListener("rowSelection",e=>{this.rowSelection=e.currentValue})}getSelectedState(){return{selectAll:this.selectedState.selectAll,toggledNodes:[...this.selectedState.toggledNodes]}}setSelectedState(e){const t={selectAll:!1,toggledNodes:new Set};if(typeof e!="object"){O("The provided selection state should be an object.");return}if("selectAll"in e&&typeof e.selectAll=="boolean")t.selectAll=e.selectAll;else{O("Select all status should be of boolean type.");return}if("toggledNodes"in e&&Array.isArray(e.toggledNodes))e.toggledNodes.forEach(s=>{typeof s=="string"?t.toggledNodes.add(s):D(`Provided ids must be of string type. Invalid id provided: ${s}`)});else{D("`toggledNodes` must be an array of string ids.");return}this.selectedState=t}deleteSelectionStateFromParent(e,t){if(this.selectedState.toggledNodes.size===0)return!1;let s=!1;return t.forEach(o=>{this.selectedState.toggledNodes.delete(o)&&(s=!0)}),s}overrideSelectionValue(e,t){if(!Qe(t))return e;const s=this.selectionCtx.getRoot(),o=s?this.rowModel.getRowNode(s):null;return o?o.isSelected()??!1:!0}setNodesSelected(e){const{nodes:t,clearSelection:s,newValue:o,rangeSelect:i,source:r}=e;if(t.length===0)return 0;const n=s&&o&&!i;if(this.rowSelection!=="multiple"||n){if(t.length>1)throw new Error("AG Grid: cannot select multiple rows when rowSelection is set to 'single'");const l=t[0];return o&&l.selectable?(this.selectedNodes={[l.id]:l},this.selectedState={selectAll:!1,toggledNodes:new Set([l.id])}):(this.selectedNodes={},this.selectedState={selectAll:!1,toggledNodes:new Set}),l.selectable&&this.selectionCtx.setRoot(l.id),1}const d=(l,a=o)=>{a&&l.selectable?this.selectedNodes[l.id]=l:delete this.selectedNodes[l.id],a===this.selectedState.selectAll||!l.selectable?this.selectedState.toggledNodes.delete(l.id):this.selectedState.toggledNodes.add(l.id)};if(i){if(t.length>1)throw new Error("AG Grid: cannot select multiple rows when using rangeSelect");const l=t[0],a=this.overrideSelectionValue(o,r);if(this.selectionCtx.isInRange(l.id)){const h=this.selectionCtx.truncate(l.id);a&&h.discard.forEach(c=>d(c,!1)),h.keep.forEach(c=>d(c,a))}else if(this.selectionCtx.getRoot()!==l.id){const g=this.selectionCtx.extend(l.id);a&&g.discard.forEach(u=>d(u,!1)),g.keep.forEach(u=>d(u,a))}return 1}return t.forEach(l=>d(l)),this.selectionCtx.setRoot(Je(t).id),1}processNewRow(e){this.selectedNodes[e.id]&&(this.selectedNodes[e.id]=e)}isNodeSelected(e){const t=this.selectedState.toggledNodes.has(e.id);return this.selectedState.selectAll?!t:t}getSelectedNodes(){return this.selectAllUsed&&D("getSelectedNodes and getSelectedRows functions cannot be used with select all functionality with the server-side row model.\n                Use `api.getServerSideSelectionState()` instead."),Object.values(this.selectedNodes)}getSelectedRows(){return this.getSelectedNodes().map(e=>e.data)}getSelectionCount(){return this.selectedState.selectAll?-1:this.selectedState.toggledNodes.size}clearOtherNodes(e,t){const s=this.selectedState.selectAll?1:this.selectedState.toggledNodes.size-1;this.selectedState={selectAll:!1,toggledNodes:new Set([e.id])},this.rowModel.forEachNode(i=>{i!==e&&i.selectThisNode(!1,void 0,t)});const o={type:"selectionChanged",source:t};return this.eventService.dispatchEvent(o),s}isEmpty(){return!this.selectedState.selectAll&&!this.selectedState.toggledNodes?.size}selectAllRowNodes(){this.selectedState={selectAll:!0,toggledNodes:new Set},this.selectedNodes={},this.selectAllUsed=!0,this.selectionCtx.reset()}deselectAllRowNodes(){this.selectedState={selectAll:!1,toggledNodes:new Set},this.selectedNodes={},this.selectionCtx.reset()}getSelectAllState(){return this.selectedState.selectAll?this.selectedState.toggledNodes.size>0?null:!0:this.selectedState.toggledNodes.size>0?null:!1}};import{BeanStub as Xe,_errorOnce as Ze,_last as V,_warnOnce as Ye,isSelectionUIEvent as et}from"@ag-grid-community/core";var H=class extends Xe{constructor(){super(...arguments),this.selectionCtx=new U,this.selectedState={selectAllChildren:!1,toggledNodes:new Map}}wireBeans(e){this.rowModel=e.rowModel,this.funcColsService=e.funcColsService,this.filterManager=e.filterManager,this.selectionService=e.selectionService}postConstruct(){this.addManagedEventListeners({modelUpdated:()=>this.removeRedundantState(),columnRowGroupChanged:()=>this.selectionService.reset("rowGroupChanged")}),this.selectionCtx.init(this.rowModel)}getSelectedState(){const e=this.gos.get("treeData"),t=(s,o,i)=>{const r={nodeId:i};if((e||o<=this.funcColsService.getRowGroupColumns().length)&&(r.selectAllChildren=s.selectAllChildren),s.toggledNodes.size){const n=[];s.toggledNodes.forEach((d,l)=>{const a=t(d,o+1,l);n.push(a)}),r.toggledNodes=n}return r};return t(this.selectedState,0)}setSelectedState(e){const t=(s,o)=>{if(typeof s!="object")throw new Error("AG Grid: Each provided state object must be an object.");if("selectAllChildren"in s&&typeof s.selectAllChildren!="boolean")throw new Error("AG Grid: `selectAllChildren` must be a boolean value or undefined.");if("toggledNodes"in s){if(!Array.isArray(s.toggledNodes))throw new Error("AG Grid: `toggledNodes` must be an array.");if(!s.toggledNodes.every(l=>typeof l=="object"&&"nodeId"in l&&typeof l.nodeId=="string"))throw new Error("AG Grid: Every `toggledNode` requires an associated string id.")}const i=s.selectAllChildren??!o,r=s.toggledNodes?.map(d=>[d.nodeId,t(d,i)]);if(r?.some(([,d])=>i===d.selectAllChildren&&d.toggledNodes.size===0))throw new Error(`
                    AG Grid: AG Grid: Row selection state could not be parsed due to invalid data. Ensure all child state has toggledNodes or does not conform with the parent rule.
                    Please rebuild the selection state and reapply it.
                `);return{selectAllChildren:i,toggledNodes:new Map(r)}};try{this.selectedState=t(e,!!e.selectAllChildren)}catch(s){Ze(s.message)}}deleteSelectionStateFromParent(e,t){let s=this.selectedState;const o=[...e];for(;s&&o.length;)s=s.toggledNodes.get(o.pop());if(!s)return!1;let i=!1;return t.forEach(r=>{s?.toggledNodes.delete(r)&&(i=!0)}),i&&this.removeRedundantState(),i}overrideSelectionValue(e,t){if(!et(t))return e;const s=this.selectionCtx.getRoot(),o=s?this.rowModel.getRowNode(s):null;return o?o.isSelected()??!1:!0}setNodesSelected({nodes:e,newValue:t,rangeSelect:s,clearSelection:o,source:i}){if(e.length===0)return 0;if(s){if(e.length>1)throw new Error("AG Grid: cannot select multiple rows when using rangeSelect");const n=e[0],d=this.overrideSelectionValue(t,i);if(this.selectionCtx.isInRange(n.id)){const l=this.selectionCtx.truncate(n.id);return d&&this.selectRange(l.discard,!1),this.selectRange(l.keep,d),1}else if(this.selectionCtx.getRoot()!==n.id){const h=this.selectionCtx.extend(n.id,!0);return d&&this.selectRange(h.discard,!1),this.selectRange(h.keep,d),1}return 1}const r=o&&t&&!s;if(this.gos.get("rowSelection")!=="multiple"||r){if(e.length>1)throw new Error("AG Grid: cannot select multiple rows when rowSelection is set to 'single'");this.deselectAllRowNodes()}return e.forEach(n=>{const d=this.getRouteToNode(n);this.recursivelySelectNode(d,this.selectedState,t)}),this.removeRedundantState(),this.selectionCtx.setRoot(V(e).id),1}selectRange(e,t){const s=e.map(this.getRouteToNode).sort((i,r)=>r.length-i.length),o=new Set;s.forEach(i=>{o.has(V(i))||(i.forEach(r=>o.add(r)),this.recursivelySelectNode(i,this.selectedState,t))}),this.removeRedundantState()}isNodeSelected(e){const t=this.getRouteToNode(e);return this.isNodePathSelected(t,this.selectedState)}isNodePathSelected([e,...t],s){if(t.length===0){const o=s.toggledNodes.has(e.id);if(e.hasChildren()){const i=s.toggledNodes.get(e.id);if(i&&i.toggledNodes.size)return}return s.selectAllChildren?!o:o}if(s.toggledNodes.has(e.id)){const o=s.toggledNodes.get(e.id);if(o)return this.isNodePathSelected(t,o)}return s.selectAllChildren}getRouteToNode(e){const t=[];let s=e;for(;s.parent;)t.push(s),s=s.parent;return t.reverse()}removeRedundantState(){if(this.filterManager?.isAnyFilterPresent())return;const e=(t=this.selectedState,s,o)=>{if(t.toggledNodes.forEach((n,d)=>{e(n,d,t)}),s){const d=this.rowModel.getRowNode(s)?.childStore;if(d?.isLastRowIndexKnown()&&t.toggledNodes.size>=d.getRowCount()){for(const h of t.toggledNodes.entries()){const[c,g]=h;if(g.toggledNodes.size>0||!this.rowModel.getRowNode(c))return}t.selectAllChildren=!t.selectAllChildren,t.toggledNodes.clear()}}const i=t.toggledNodes.size===0,r=o?.selectAllChildren===t.selectAllChildren;i&&r&&o?.toggledNodes.delete(s)};e()}recursivelySelectNode([e,...t],s,o){if(!e)return;if(!t.length){const d=e.selectable;if(s.selectAllChildren===o||!d){s.toggledNodes.delete(e.id);return}const a={selectAllChildren:o,toggledNodes:new Map};s.toggledNodes.set(e.id,a);return}const r=s.toggledNodes.has(e.id),n=s.toggledNodes.get(e.id)??{selectAllChildren:s.selectAllChildren,toggledNodes:new Map};r||s.toggledNodes.set(e.id,n),this.recursivelySelectNode(t,n,o),s.selectAllChildren===n.selectAllChildren&&n.toggledNodes.size===0&&s.toggledNodes.delete(e.id)}getSelectedNodes(){Ye("`getSelectedNodes` and `getSelectedRows` functions cannot be used with `groupSelectsChildren` and the server-side row model.\n            Use `api.getServerSideSelectionState()` instead.");const e=[];return this.rowModel.forEachNode(t=>{t.isSelected()&&e.push(t)}),e}processNewRow(){}getSelectedRows(){return this.getSelectedNodes().map(e=>e.data)}getSelectionCount(){return-1}isEmpty(){return!this.selectedState.selectAllChildren&&!this.selectedState.toggledNodes?.size}selectAllRowNodes(){this.selectedState={selectAllChildren:!0,toggledNodes:new Map},this.selectionCtx.reset()}deselectAllRowNodes(){this.selectedState={selectAllChildren:!1,toggledNodes:new Map},this.selectionCtx.reset()}getSelectAllState(){return this.selectedState.selectAllChildren?this.selectedState.toggledNodes.size>0?null:!0:this.selectedState.toggledNodes.size>0?null:!1}},tt=class extends $e{constructor(){super(...arguments),this.beanName="selectionService"}wireBeans(e){this.rowModel=e.rowModel}postConstruct(){const e=this.gos.get("groupSelectsChildren");this.addManagedPropertyListener("groupSelectsChildren",s=>{this.destroyBean(this.selectionStrategy);const o=s.currentValue?H:_;this.selectionStrategy=this.createManagedBean(new o),this.shotgunResetNodeSelectionState(),this.dispatchSelectionChanged("api")}),this.addManagedPropertyListener("rowSelection",()=>this.deselectAllRowNodes({source:"api"}));const t=e?H:_;this.selectionStrategy=this.createManagedBean(new t)}getSelectionState(){return this.selectionStrategy.getSelectedState()}setSelectionState(e,t){Array.isArray(e)||(this.selectionStrategy.setSelectedState(e),this.shotgunResetNodeSelectionState(),this.dispatchSelectionChanged(t))}setNodesSelected(e){const{nodes:t,...s}=e,o=this.gos.get("rowSelection");if(t.length>1&&o!=="multiple")return y("cannot multi select while rowSelection='single'"),0;if(t.length>1&&e.rangeSelect)return y("cannot use range selection when multi selecting rows"),0;const i={nodes:t.filter(n=>n.selectable),...s};if(!i.nodes.length)return 0;const r=this.selectionStrategy.setNodesSelected(i);return this.shotgunResetNodeSelectionState(i.source),this.dispatchSelectionChanged(i.source),r}deleteSelectionStateFromParent(e,t){this.selectionStrategy.deleteSelectionStateFromParent(e,t)&&(this.shotgunResetNodeSelectionState(),this.dispatchSelectionChanged("api"))}shotgunResetNodeSelectionState(e){this.rowModel.forEachNode(t=>{if(t.stub)return;const s=this.selectionStrategy.isNodeSelected(t);s!==t.isSelected()&&t.selectThisNode(s,void 0,e)})}getSelectedNodes(){return this.selectionStrategy.getSelectedNodes()}getSelectedRows(){return this.selectionStrategy.getSelectedRows()}getSelectionCount(){return this.selectionStrategy.getSelectionCount()}syncInRowNode(e){this.selectionStrategy.processNewRow(e);const t=this.selectionStrategy.isNodeSelected(e);if(t!=!1&&!e.selectable){this.selectionStrategy.setNodesSelected({nodes:[e],newValue:!1,source:"api"}),this.shotgunResetNodeSelectionState(),this.dispatchSelectionChanged("api");return}e.setSelectedInitialValue(t)}reset(){this.selectionStrategy.deselectAllRowNodes({source:"api"})}isEmpty(){return this.selectionStrategy.isEmpty()}hasNodesToSelect(){return!0}selectAllRowNodes(e){z(e),this.selectionStrategy.selectAllRowNodes(e),this.rowModel.forEachNode(t=>{t.stub||t.selectThisNode(!0,void 0,e.source)}),this.dispatchSelectionChanged(e.source)}deselectAllRowNodes(e){z(e),this.selectionStrategy.deselectAllRowNodes(e),this.rowModel.forEachNode(t=>{t.stub||t.selectThisNode(!1,void 0,e.source)}),this.dispatchSelectionChanged(e.source)}getSelectAllState(e,t){return this.selectionStrategy.getSelectAllState(e,t)}updateGroupsFromChildrenSelections(){return!1}getBestCostNodeSelection(){y("calling gridApi.getBestCostNodeSelection() is only possible when using rowModelType=`clientSide`.")}filterFromSelection(){}dispatchSelectionChanged(e){const t={type:"selectionChanged",source:e};this.eventService.dispatchEvent(t)}};function z(e){(e.justCurrentPage||e.justFiltered)&&y("selecting just filtered only works when gridOptions.rowModelType='clientSide'")}import{BeanStub as st,_warnOnce as K}from"@ag-grid-community/core";var ot=class extends st{constructor(){super(...arguments),this.beanName="ssrmStoreFactory"}wireBeans(e){this.columnModel=e.columnModel,this.funcColsService=e.funcColsService}createStore(e,t){const s=this.getStoreParams(e,t),o=s.suppressInfiniteScroll?A:C;return new o(e,s,t)}getStoreParams(e,t){const s=this.getLevelSpecificParams(t),o=this.isInfiniteScroll(s),i=this.getBlockSize(o,s),r=this.getMaxBlocksInCache(o,e,s);return{suppressInfiniteScroll:!o,cacheBlockSize:i,maxBlocksInCache:r}}getMaxBlocksInCache(e,t,s){if(!e)return;const o=s&&s.maxBlocksInCache!=null?s.maxBlocksInCache:this.gos.get("maxBlocksInCache");if(o!=null&&o>=0){if(t.dynamicRowHeight){K("Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.");return}if(this.columnModel.isAutoRowHeightActive()){K("Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.");return}return o}}getBlockSize(e,t){if(!e)return;const s=t&&t.cacheBlockSize!=null?t.cacheBlockSize:this.gos.get("cacheBlockSize");return s!=null&&s>0?s:100}getLevelSpecificParams(e){const t=this.gos.getCallback("getServerSideGroupLevelParams");if(!t)return;const s={level:e.level+1,parentRowNode:e.level>=0?e:void 0,rowGroupColumns:this.funcColsService.getRowGroupColumns(),pivotColumns:this.funcColsService.getPivotColumns(),pivotMode:this.columnModel.isPivotMode()};return t(s)}isInfiniteScroll(e){return!(e&&e.suppressInfiniteScroll!=null?e.suppressInfiniteScroll:this.isSuppressServerSideInfiniteScroll())}isSuppressServerSideInfiniteScroll(){return this.gos.get("suppressServerSideInfiniteScroll")}};import{BeanStub as it,_missingOrEmpty as rt,_warnOnce as j}from"@ag-grid-community/core";var nt=class extends it{constructor(){super(...arguments),this.beanName="ssrmStoreUtils"}wireBeans(e){this.columnModel=e.columnModel,this.serverSideRowModel=e.rowModel,this.storeFactory=e.ssrmStoreFactory}loadFromDatasource(e){const{storeParams:t,parentBlock:s,parentNode:o}=e,i=o.getGroupKeys();if(!t.datasource)return;const r={startRow:e.startRow,endRow:e.endRow,rowGroupCols:t.rowGroupCols,valueCols:t.valueCols,pivotCols:t.pivotCols,pivotMode:t.pivotMode,groupKeys:i,filterModel:t.filterModel,sortModel:t.sortModel},n=this.gos.addGridCommonParams({success:e.success,fail:e.fail,request:r,parentNode:e.parentNode});window.setTimeout(()=>{if(!t.datasource||!s.isAlive()){e.fail();return}t.datasource.getRows(n)},0)}getChildStore(e,t,s){if(rt(e))return t;const o=e[0],i=s(o);if(i){if(e.length===1&&!i.childStore){const d=this.serverSideRowModel.getParams();i.childStore=this.createBean(this.storeFactory.createStore(d,i))}const r=e.slice(1,e.length),n=i.childStore;return n?n.getChildStore(r):null}return null}isServerRefreshNeeded(e,t,s){if(s.valueColChanged||s.secondaryColChanged)return!0;const o=e.level+1;if(!(o<t.length))return!0;const n=t[o].id;return s.changedColumns.indexOf(n)>-1?!0:this.columnModel.getCols().filter(h=>h.getColDef().showRowGroup&&s.changedColumns.includes(h.getId())).map(h=>h.getColDef().showRowGroup).some(h=>h===!0||h===n)}getServerSideInitialRowCount(){return this.gos.get("serverSideInitialRowCount")}assertRowModelIsServerSide(e){return this.gos.isRowModelType("serverSide")?!0:(j(`The '${e}' property can only be used with the Server Side Row Model.`),!1)}assertNotTreeData(e){return this.gos.get("treeData")?(j(`The '${e}' property cannot be used while using tree data.`),!1):!0}isServerSideSortAllLevels(){return this.gos.get("serverSideSortAllLevels")&&this.assertRowModelIsServerSide("serverSideSortAllLevels")}isServerSideOnlyRefreshFilteredGroups(){return this.gos.get("serverSideOnlyRefreshFilteredGroups")&&this.assertRowModelIsServerSide("serverSideOnlyRefreshFilteredGroups")}isServerSideSortOnServer(){return this.gos.get("serverSideSortOnServer")&&this.assertRowModelIsServerSide("serverSideSortOnServer")&&this.assertNotTreeData("serverSideSortOnServer")}isServerSideFilterOnServer(){return this.gos.get("serverSideFilterOnServer")&&this.assertRowModelIsServerSide("serverSideFilterOnServer")&&this.assertNotTreeData("serverSideFilterOnServer")}};import{BeanStub as lt,ServerSideTransactionResultStatus as w}from"@ag-grid-community/core";var dt=class extends lt{constructor(){super(...arguments),this.beanName="ssrmTransactionManager",this.asyncTransactions=[]}wireBeans(e){this.valueCache=e.valueCache,this.serverSideRowModel=e.rowModel,this.selectionService=e.selectionService}postConstruct(){this.gos.isRowModelType("serverSide")}applyTransactionAsync(e,t){this.asyncTransactionsTimeout==null&&this.scheduleExecuteAsync(),this.asyncTransactions.push({transaction:e,callback:t})}scheduleExecuteAsync(){const e=this.gos.getAsyncTransactionWaitMillis();this.asyncTransactionsTimeout=window.setTimeout(()=>{this.executeAsyncTransactions()},e)}executeAsyncTransactions(){if(!this.asyncTransactions)return;const e=[],t=[],s=[];let o=!1;if(this.asyncTransactions.forEach(i=>{let r;if(this.serverSideRowModel.executeOnStore(i.transaction.route,l=>{r=l.applyTransaction(i.transaction)})?r==null&&(r={status:w.StoreNotFound}):r={status:w.StoreNotStarted},t.push(r),r.status==w.StoreLoading){s.push(i);return}i.callback&&e.push(()=>i.callback(r)),r.status===w.Applied&&(o=!0)}),e.length>0&&window.setTimeout(()=>{e.forEach(i=>i())},0),this.asyncTransactionsTimeout=void 0,this.asyncTransactions=s,o&&(this.valueCache.onDataChanged(),this.eventService.dispatchEvent({type:"storeUpdated"})),t.length>0){const i={type:"asyncTransactionsFlushed",results:t};this.eventService.dispatchEvent(i)}}flushAsyncTransactions(){this.asyncTransactionsTimeout!=null&&clearTimeout(this.asyncTransactionsTimeout),this.executeAsyncTransactions()}applyTransaction(e){let t;if(this.serverSideRowModel.executeOnStore(e.route,o=>{t=o.applyTransaction(e)}))if(t){if(this.valueCache.onDataChanged(),t.remove){const o=t.remove.map(i=>i.id);this.selectionService.deleteSelectionStateFromParent(e.route||[],o)}return this.eventService.dispatchEvent({type:"storeUpdated"}),t}else return{status:w.StoreNotFound};else return{status:w.StoreNotStarted}}},T="32.0.0",q={version:T,moduleName:`${I.ServerSideRowModelModule}-core`,rowModel:"serverSide",beans:[Le,ne,ue,nt,se,fe,dt,de,ot,he,tt,qe,k],dependantModules:[X,J]},at={version:T,moduleName:`${I.ServerSideRowModelModule}-api`,beans:[$],apiFunctions:{getServerSideSelectionState:Pe,setServerSideSelectionState:Ge,applyServerSideTransaction:Oe,applyServerSideTransactionAsync:_e,applyServerSideRowData:Ue,retryServerSideLoads:Ve,flushServerSideAsyncTransactions:He,refreshServerSide:ze,getServerSideGroupLevelState:Ke},dependantModules:[q,W,Q]},ht={version:T,moduleName:I.ServerSideRowModelModule,dependantModules:[q,at]};export{ht as ServerSideRowModelModule};
