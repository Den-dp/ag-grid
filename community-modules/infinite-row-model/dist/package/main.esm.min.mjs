var B=Object.defineProperty,y=Object.getOwnPropertyDescriptor,r=(s,e,t,o)=>{for(var i=o>1?void 0:o?y(e,t):e,n=s.length-1,c;n>=0;n--)(c=s[n])&&(i=(o?c(e,t,i):c(i))||i);return o&&i&&B(e,t,i),i},N=(s,e)=>(t,o)=>e(t,o,s);import{ModuleNames as b}from"@ag-grid-community/core";import{_ as I,Autowired as f,Bean as P,BeanStub as x,Events as d,NumberSequence as A,PostConstruct as D,PreDestroy as L}from"@ag-grid-community/core";import{Autowired as v,BeanStub as M,Events as T,NumberSequence as m,PreDestroy as _,Qualifier as O,_ as R}from"@ag-grid-community/core";import{_ as E,PostConstruct as H,PreDestroy as F,RowNode as k,RowNodeBlock as U,Autowired as K}from"@ag-grid-community/core";var p=class extends U{constructor(s,e,t){super(s),this.parentCache=e,this.params=t,this.startRow=s*t.blockSize,this.endRow=this.startRow+t.blockSize}postConstruct(){this.createRowNodes()}getBlockStateJson(){return{id:""+this.getId(),state:{blockNumber:this.getId(),startRow:this.getStartRow(),endRow:this.getEndRow(),pageStatus:this.getState()}}}setDataAndId(s,e,t){E.exists(e)?s.setDataAndId(e,t.toString()):s.setDataAndId(void 0,void 0)}loadFromDatasource(){const s=this.createLoadParams();if(E.missing(this.params.datasource.getRows)){console.warn("AG Grid: datasource is missing getRows method");return}window.setTimeout(()=>{this.params.datasource.getRows(s)},0)}processServerFail(){}createLoadParams(){return{startRow:this.getStartRow(),endRow:this.getEndRow(),successCallback:this.pageLoaded.bind(this,this.getVersion()),failCallback:this.pageLoadFailed.bind(this,this.getVersion()),sortModel:this.params.sortModel,filterModel:this.params.filterModel,context:this.gos.getGridCommonParams().context}}forEachNode(s,e,t){this.rowNodes.forEach((o,i)=>{this.startRow+i<t&&s(o,e.next())})}getLastAccessed(){return this.lastAccessed}getRow(s,e=!1){e||(this.lastAccessed=this.params.lastAccessedSequence.next());const t=s-this.startRow;return this.rowNodes[t]}getStartRow(){return this.startRow}getEndRow(){return this.endRow}createRowNodes(){this.rowNodes=[];for(let s=0;s<this.params.blockSize;s++){const e=this.startRow+s,t=new k(this.beans);t.setRowHeight(this.params.rowHeight),t.uiLevel=0,t.setRowIndex(e),t.setRowTop(this.params.rowHeight*e),this.rowNodes.push(t)}}processServerResult(s){this.rowNodes.forEach((t,o)=>{const i=s.rowData?s.rowData[o]:void 0;!t.id&&t.alreadyRendered&&i&&(this.rowNodes[o]=new k(this.beans),this.rowNodes[o].setRowIndex(t.rowIndex),this.rowNodes[o].setRowTop(t.rowTop),this.rowNodes[o].setRowHeight(t.rowHeight),t.clearRowTopAndRowIndex()),this.setDataAndId(this.rowNodes[o],i,this.startRow+o)});const e=s.rowCount!=null&&s.rowCount>=0?s.rowCount:void 0;this.parentCache.pageLoaded(this,e)}destroyRowNodes(){this.rowNodes.forEach(s=>{s.clearRowTopAndRowIndex()})}};r([K("beans")],p.prototype,"beans",2),r([H],p.prototype,"postConstruct",1),r([F],p.prototype,"destroyRowNodes",1);var l=class S extends M{constructor(e){super(),this.lastRowIndexKnown=!1,this.blocks={},this.blockCount=0,this.rowCount=e.initialRowCount,this.params=e}setBeans(e){this.logger=e.create("InfiniteCache")}getRow(e,t=!1){const o=Math.floor(e/this.params.blockSize);let i=this.blocks[o];if(!i){if(t)return;i=this.createBlock(o)}return i.getRow(e)}createBlock(e){const t=this.createBean(new p(e,this,this.params));return this.blocks[t.getId()]=t,this.blockCount++,this.purgeBlocksIfNeeded(t),this.params.rowNodeBlockLoader.addBlock(t),t}refreshCache(){if(this.blockCount==0){this.purgeCache();return}this.getBlocksInOrder().forEach(t=>t.setStateWaitingToLoad()),this.params.rowNodeBlockLoader.checkBlockToLoad()}destroyAllBlocks(){this.getBlocksInOrder().forEach(e=>this.destroyBlock(e))}getRowCount(){return this.rowCount}isLastRowIndexKnown(){return this.lastRowIndexKnown}pageLoaded(e,t){this.isAlive()&&(this.logger.log(`onPageLoaded: page = ${e.getId()}, lastRow = ${t}`),this.checkRowCount(e,t),this.onCacheUpdated())}purgeBlocksIfNeeded(e){const t=this.getBlocksInOrder().filter(a=>a!=e),o=(a,u)=>u.getLastAccessed()-a.getLastAccessed();t.sort(o);const i=this.params.maxBlocksInCache>0,n=i?this.params.maxBlocksInCache-1:null,c=S.MAX_EMPTY_BLOCKS_TO_KEEP-1;t.forEach((a,u)=>{const w=a.getState()===p.STATE_WAITING_TO_LOAD&&u>=c,g=i?u>=n:!1;if(w||g){if(this.isBlockCurrentlyDisplayed(a)||this.isBlockFocused(a))return;this.removeBlockFromCache(a)}})}isBlockFocused(e){const t=this.focusService.getFocusCellToUseAfterRefresh();if(!t||t.rowPinned!=null)return!1;const o=e.getStartRow(),i=e.getEndRow();return t.rowIndex>=o&&t.rowIndex<i}isBlockCurrentlyDisplayed(e){const t=e.getStartRow(),o=e.getEndRow()-1;return this.rowRenderer.isRangeInRenderedViewport(t,o)}removeBlockFromCache(e){e&&this.destroyBlock(e)}checkRowCount(e,t){if(typeof t=="number"&&t>=0)this.rowCount=t,this.lastRowIndexKnown=!0;else if(!this.lastRowIndexKnown){const i=(e.getId()+1)*this.params.blockSize+this.params.overflowSize;this.rowCount<i&&(this.rowCount=i)}}setRowCount(e,t){this.rowCount=e,R.exists(t)&&(this.lastRowIndexKnown=t),this.lastRowIndexKnown||this.rowCount%this.params.blockSize===0&&this.rowCount++,this.onCacheUpdated()}forEachNodeDeep(e){const t=new m;this.getBlocksInOrder().forEach(o=>o.forEachNode(e,t,this.rowCount))}getBlocksInOrder(){const e=(o,i)=>o.getId()-i.getId();return R.getAllValuesInObject(this.blocks).sort(e)}destroyBlock(e){delete this.blocks[e.getId()],this.destroyBean(e),this.blockCount--,this.params.rowNodeBlockLoader.removeBlock(e)}onCacheUpdated(){if(this.isAlive()){this.destroyAllBlocksPastVirtualRowCount();const e={type:T.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(e)}}destroyAllBlocksPastVirtualRowCount(){const e=[];this.getBlocksInOrder().forEach(t=>{t.getId()*this.params.blockSize>=this.rowCount&&e.push(t)}),e.length>0&&e.forEach(t=>this.destroyBlock(t))}purgeCache(){this.getBlocksInOrder().forEach(e=>this.removeBlockFromCache(e)),this.lastRowIndexKnown=!1,this.rowCount===0&&(this.rowCount=this.params.initialRowCount),this.onCacheUpdated()}getRowNodesInRange(e,t){const o=[];let i=-1,n=!1;const c=new m;R.missing(e)&&(n=!0);let a=!1;return this.getBlocksInOrder().forEach(w=>{if(!a){if(n&&i+1!==w.getId()){a=!0;return}i=w.getId(),w.forEachNode(g=>{const C=g===e||g===t;(n||C)&&o.push(g),C&&(n=!n)},c,this.rowCount)}}),a||n?[]:o}};l.MAX_EMPTY_BLOCKS_TO_KEEP=2,r([v("rowRenderer")],l.prototype,"rowRenderer",2),r([v("focusService")],l.prototype,"focusService",2),r([N(0,O("loggerFactory"))],l.prototype,"setBeans",1),r([_],l.prototype,"destroyAllBlocks",1);var V=l,h=class extends x{getRowBounds(s){return{rowHeight:this.rowHeight,rowTop:this.rowHeight*s}}ensureRowHeightsValid(s,e,t,o){return!1}init(){this.gos.isRowModelType("infinite")&&(this.rowHeight=this.gos.getRowHeightAsNumber(),this.addEventListeners(),this.addDestroyFunc(()=>this.destroyCache()),this.verifyProps())}verifyProps(){this.gos.exists("initialGroupOrderComparator")&&I.warnOnce("initialGroupOrderComparator cannot be used with Infinite Row Model as sorting is done on the server side")}start(){this.setDatasource(this.gos.get("datasource"))}destroyDatasource(){this.datasource&&(this.getContext().destroyBean(this.datasource),this.rowRenderer.datasourceChanged(),this.datasource=null)}addEventListeners(){this.addManagedListener(this.eventService,d.EVENT_FILTER_CHANGED,this.onFilterChanged.bind(this)),this.addManagedListener(this.eventService,d.EVENT_SORT_CHANGED,this.onSortChanged.bind(this)),this.addManagedListener(this.eventService,d.EVENT_NEW_COLUMNS_LOADED,this.onColumnEverything.bind(this)),this.addManagedListener(this.eventService,d.EVENT_STORE_UPDATED,this.onCacheUpdated.bind(this)),this.addManagedPropertyListener("datasource",()=>this.setDatasource(this.gos.get("datasource"))),this.addManagedPropertyListener("cacheBlockSize",()=>this.resetCache()),this.addManagedPropertyListener("rowHeight",()=>{this.rowHeight=this.gos.getRowHeightAsNumber(),this.cacheParams.rowHeight=this.rowHeight,this.updateRowHeights()})}onFilterChanged(){this.reset()}onSortChanged(){this.reset()}onColumnEverything(){let s;this.cacheParams?s=this.isSortModelDifferent():s=!0,s&&this.reset()}isSortModelDifferent(){return!I.jsonEquals(this.cacheParams.sortModel,this.sortController.getSortModel())}getType(){return"infinite"}setDatasource(s){this.destroyDatasource(),this.datasource=s,s&&this.reset()}isEmpty(){return!this.infiniteCache}isRowsToRender(){return!!this.infiniteCache}getNodesInRangeForSelection(s,e){return this.infiniteCache?this.infiniteCache.getRowNodesInRange(s,e):[]}reset(){if(!this.datasource)return;this.gos.getCallback("getRowId")!=null||this.selectionService.reset("rowDataChanged"),this.resetCache()}createModelUpdatedEvent(){return{type:d.EVENT_MODEL_UPDATED,newPage:!1,newPageSize:!1,newData:!1,keepRenderedRows:!0,animate:!1}}resetCache(){this.destroyCache(),this.cacheParams={datasource:this.datasource,filterModel:this.filterManager.getFilterModel(),sortModel:this.sortController.getSortModel(),rowNodeBlockLoader:this.rowNodeBlockLoader,initialRowCount:this.gos.get("infiniteInitialRowCount"),maxBlocksInCache:this.gos.get("maxBlocksInCache"),rowHeight:this.gos.getRowHeightAsNumber(),overflowSize:this.gos.get("cacheOverflowSize"),blockSize:this.gos.get("cacheBlockSize"),lastAccessedSequence:new A},this.infiniteCache=this.createBean(new V(this.cacheParams)),this.eventService.dispatchEventOnce({type:d.EVENT_ROW_COUNT_READY});const s=this.createModelUpdatedEvent();this.eventService.dispatchEvent(s)}updateRowHeights(){this.forEachNode(e=>{e.setRowHeight(this.rowHeight),e.setRowTop(this.rowHeight*e.rowIndex)});const s=this.createModelUpdatedEvent();this.eventService.dispatchEvent(s)}destroyCache(){this.infiniteCache&&(this.infiniteCache=this.destroyBean(this.infiniteCache))}onCacheUpdated(){const s=this.createModelUpdatedEvent();this.eventService.dispatchEvent(s)}getRow(s){if(this.infiniteCache&&!(s>=this.infiniteCache.getRowCount()))return this.infiniteCache.getRow(s)}getRowNode(s){let e;return this.forEachNode(t=>{t.id===s&&(e=t)}),e}forEachNode(s){this.infiniteCache&&this.infiniteCache.forEachNodeDeep(s)}getTopLevelRowCount(){return this.getRowCount()}getTopLevelRowDisplayedIndex(s){return s}getRowIndexAtPixel(s){if(this.rowHeight!==0){const e=Math.floor(s/this.rowHeight),t=this.getRowCount()-1;return e>t?t:e}return 0}getRowCount(){return this.infiniteCache?this.infiniteCache.getRowCount():0}isRowPresent(s){return!!this.getRowNode(s.id)}refreshCache(){this.infiniteCache&&this.infiniteCache.refreshCache()}purgeCache(){this.infiniteCache&&this.infiniteCache.purgeCache()}isLastRowIndexKnown(){return this.infiniteCache?this.infiniteCache.isLastRowIndexKnown():!1}setRowCount(s,e){this.infiniteCache&&this.infiniteCache.setRowCount(s,e)}};r([f("filterManager")],h.prototype,"filterManager",2),r([f("sortController")],h.prototype,"sortController",2),r([f("selectionService")],h.prototype,"selectionService",2),r([f("rowRenderer")],h.prototype,"rowRenderer",2),r([f("rowNodeBlockLoader")],h.prototype,"rowNodeBlockLoader",2),r([D],h.prototype,"init",1),r([L],h.prototype,"destroyDatasource",1),h=r([P("rowModel")],h);var z="31.3.4",G={version:z,moduleName:b.InfiniteRowModelModule,rowModel:"infinite",beans:[h]};export{G as InfiniteRowModelModule};
