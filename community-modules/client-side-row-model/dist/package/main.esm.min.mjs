import{ModuleNames as v,RowModelHelperService as L,_CsrmSsrmSharedApiModule as _}from"@ag-grid-community/core";import{BeanStub as U,ChangedPath as B,ClientSideRowModelSteps as h,RowHighlightPosition as T,RowNode as x,_debounce as V,_errorOnce as F,_exists as M,_insertIntoArray as W,_last as Y,_missing as S,_missingOrEmpty as j,_removeFromArray as $}from"@ag-grid-community/core";import{RowNode as K,_cloneObject as Q,_errorOnce as N,_missingOrEmpty as D,_sortRowNodesByOrder as q,_warnOnce as P}from"@ag-grid-community/core";var X="ROOT_NODE_ID",y=0,z=class{constructor(e,t,o,s,r,i){this.nextId=0,this.rowCountReady=!1,this.allNodesMap={},this.rootNode=e,this.gos=t,this.eventService=o,this.funcColsService=s,this.beans=i,this.selectionService=r,this.rootNode.group=!0,this.rootNode.level=-1,this.rootNode.id=X,this.rootNode.allLeafChildren=[],this.rootNode.childrenAfterGroup=[],this.rootNode.childrenAfterSort=[],this.rootNode.childrenAfterAggFilter=[],this.rootNode.childrenAfterFilter=[]}getCopyOfNodesMap(){return Q(this.allNodesMap)}getRowNode(e){return this.allNodesMap[e]}setRowData(e){if(typeof e=="string"){P("rowData must be an array.");return}this.rowCountReady=!0,this.dispatchRowDataUpdateStartedEvent(e);const t=this.rootNode,o=this.rootNode.sibling;t.childrenAfterFilter=null,t.childrenAfterGroup=null,t.childrenAfterAggFilter=null,t.childrenAfterSort=null,t.childrenMapped=null,t.updateHasChildren(),this.nextId=0,this.allNodesMap={},e?t.allLeafChildren=e.map(s=>this.createNode(s,this.rootNode,y)):(t.allLeafChildren=[],t.childrenAfterGroup=[]),o&&(o.childrenAfterFilter=t.childrenAfterFilter,o.childrenAfterGroup=t.childrenAfterGroup,o.childrenAfterAggFilter=t.childrenAfterAggFilter,o.childrenAfterSort=t.childrenAfterSort,o.childrenMapped=t.childrenMapped,o.allLeafChildren=t.allLeafChildren)}updateRowData(e,t){this.rowCountReady=!0,this.dispatchRowDataUpdateStartedEvent(e.add);const o={remove:[],update:[],add:[]},s=[];return this.executeRemove(e,o,s),this.executeUpdate(e,o,s),this.executeAdd(e,o),this.updateSelection(s,"rowDataChanged"),t&&q(this.rootNode.allLeafChildren,t),o}isRowCountReady(){return this.rowCountReady}dispatchRowDataUpdateStartedEvent(e){const t={type:"rowDataUpdateStarted",firstRowData:e?.length?e[0]:null};this.eventService.dispatchEvent(t)}updateSelection(e,t){const o=e.length>0;if(o&&this.selectionService.setNodesSelected({newValue:!1,nodes:e,suppressFinishActions:!0,source:t}),this.selectionService.updateGroupsFromChildrenSelections(t),o){const s={type:"selectionChanged",source:t};this.eventService.dispatchEvent(s)}}executeAdd(e,t){const{add:o,addIndex:s}=e;if(D(o))return;const r=o.map(n=>this.createNode(n,this.rootNode,y)),i=this.rootNode.allLeafChildren;if(typeof s=="number"&&s>=0){const n=i.length;let a=s;if(this.gos.get("treeData")&&s>0&&n>0){for(let d=0;d<n;d++)if(i[d]?.rowIndex==s-1){a=d+1;break}}const c=i.slice(0,a),g=i.slice(a,i.length);this.rootNode.allLeafChildren=[...c,...r,...g]}else this.rootNode.allLeafChildren=[...i,...r];this.rootNode.sibling&&(this.rootNode.sibling.allLeafChildren=i),t.add=r}executeRemove(e,t,o){const{remove:s}=e;if(D(s))return;const r={};s.forEach(i=>{const n=this.lookupRowNode(i);n&&(n.isSelected()&&o.push(n),n.clearRowTopAndRowIndex(),r[n.id]=!0,delete this.allNodesMap[n.id],t.remove.push(n))}),this.rootNode.allLeafChildren=this.rootNode.allLeafChildren?.filter(i=>!r[i.id])??null,this.rootNode.sibling&&(this.rootNode.sibling.allLeafChildren=this.rootNode.allLeafChildren)}executeUpdate(e,t,o){const{update:s}=e;D(s)||s.forEach(r=>{const i=this.lookupRowNode(r);i&&(i.updateData(r),!i.selectable&&i.isSelected()&&o.push(i),this.setMasterForRow(i,r,y,!1),t.update.push(i))})}lookupRowNode(e){const t=this.gos.getRowIdCallback();let o;if(t){const s=t({data:e,level:0});if(o=this.allNodesMap[s],!o)return N(`could not find row id=${s}, data item was not found for this id`),null}else if(o=this.rootNode.allLeafChildren?.find(s=>s.data===e),!o)return N("could not find data item as object was not found",e),N("Consider using getRowId to help the Grid find matching row data"),null;return o||null}createNode(e,t,o){const s=new K(this.beans);return s.group=!1,this.setMasterForRow(s,e,o,!0),t&&(s.parent=t),s.level=o,s.setDataAndId(e,this.nextId.toString()),this.allNodesMap[s.id]&&P(`duplicate node id '${s.id}' detected from getRowId callback, this could cause issues in your grid.`),this.allNodesMap[s.id]=s,this.nextId++,s}setMasterForRow(e,t,o,s){if(this.gos.get("treeData"))e.setMaster(!1),s&&(e.expanded=!1);else{if(this.gos.get("masterDetail")){const n=this.gos.get("isRowMaster");n?e.setMaster(n(t)):e.setMaster(!0)}else e.setMaster(!1);if(s){const n=this.funcColsService.getRowGroupColumns(),a=n?n.length:0,l=o+a;e.expanded=e.master?this.isExpanded(l):!1}}}isExpanded(e){const t=this.gos.get("groupDefaultExpanded");return t===-1?!0:e<t}},J=class extends U{constructor(){super(...arguments),this.beanName="rowModel",this.onRowHeightChanged_debounced=V(this.onRowHeightChanged.bind(this),100),this.rowsToDisplay=[],this.hasStarted=!1,this.shouldSkipSettingDataOnStart=!1,this.isRefreshingModel=!1,this.rowCountReady=!1}wireBeans(e){this.beans=e,this.columnModel=e.columnModel,this.funcColsService=e.funcColsService,this.selectionService=e.selectionService,this.valueCache=e.valueCache,this.environment=e.environment,this.filterStage=e.filterStage,this.sortStage=e.sortStage,this.flattenStage=e.flattenStage,this.groupStage=e.groupStage,this.aggregationStage=e.aggregationStage,this.pivotStage=e.pivotStage,this.filterAggregatesStage=e.filterAggregatesStage}postConstruct(){const e=this.refreshModel.bind(this,{step:h.EVERYTHING}),t=!this.gos.get("suppressAnimationFrame"),o=this.refreshModel.bind(this,{step:h.EVERYTHING,afterColumnsChanged:!0,keepRenderedRows:!0,animate:t});this.addManagedEventListeners({newColumnsLoaded:o,columnRowGroupChanged:e,columnValueChanged:this.onValueChanged.bind(this),columnPivotChanged:this.refreshModel.bind(this,{step:h.PIVOT}),filterChanged:this.onFilterChanged.bind(this),sortChanged:this.onSortChanged.bind(this),columnPivotModeChanged:e,gridStylesChanged:this.onGridStylesChanges.bind(this),gridReady:this.onGridReady.bind(this)}),this.addPropertyListeners(),this.rootNode=new x(this.beans),this.nodeManager=new z(this.rootNode,this.gos,this.eventService,this.funcColsService,this.selectionService,this.beans)}addPropertyListeners(){const e=new Set(["treeData","masterDetail"]),t=new Set(["groupDefaultExpanded","groupAllowUnbalanced","initialGroupOrderComparator","groupHideOpenParents","groupDisplayType"]),o=new Set(["excludeChildrenWhenTreeDataFiltering"]),s=new Set(["removePivotHeaderRowWhenSingleValueColumn","pivotRowTotals","pivotColumnGroupTotals","suppressExpandablePivotGroups"]),r=new Set(["getGroupRowAgg","alwaysAggregateAtRootLevel","groupIncludeTotalFooter","suppressAggFilteredOnly","grandTotalRow"]),i=new Set(["postSortRows","groupDisplayType","accentedSort"]),n=new Set([]),a=new Set(["groupRemoveSingleChildren","groupRemoveLowestSingleChildren","groupIncludeFooter","groupTotalRow"]),l=[...e,...t,...o,...s,...s,...r,...i,...n,...a];this.addManagedPropertyListeners(l,c=>{const g=c.changeSet?.properties;if(!g)return;const d=u=>g.some(R=>u.has(R));if(d(e)){this.setRowData(this.rootNode.allLeafChildren.map(u=>u.data));return}if(d(t)){this.refreshModel({step:h.EVERYTHING});return}if(d(o)){this.refreshModel({step:h.FILTER});return}if(d(s)){this.refreshModel({step:h.PIVOT});return}if(d(r)){this.refreshModel({step:h.AGGREGATE});return}if(d(i)){this.refreshModel({step:h.SORT});return}if(d(n)){this.refreshModel({step:h.FILTER_AGGREGATES});return}d(a)&&this.refreshModel({step:h.MAP})}),this.addManagedPropertyListener("rowHeight",()=>this.resetRowHeights())}start(){this.hasStarted=!0,this.shouldSkipSettingDataOnStart?this.dispatchUpdateEventsAndRefresh():this.setInitialData()}setInitialData(){const e=this.gos.get("rowData");e&&(this.shouldSkipSettingDataOnStart=!0,this.setRowData(e))}ensureRowHeightsValid(e,t,o,s){let r,i=!1;do{r=!1;const n=this.getRowIndexAtPixel(e),a=this.getRowIndexAtPixel(t),l=Math.max(n,o),c=Math.min(a,s);for(let g=l;g<=c;g++){const d=this.getRow(g);if(d.rowHeightEstimated){const u=this.gos.getRowHeightForNode(d);d.setRowHeight(u.height),r=!0,i=!0}}r&&this.setRowTopAndRowIndex()}while(r);return i}setRowTopAndRowIndex(){const e=this.environment.getDefaultRowHeight();let t=0;const o=new Set,s=this.gos.isDomLayout("normal");for(let r=0;r<this.rowsToDisplay.length;r++){const i=this.rowsToDisplay[r];if(i.id!=null&&o.add(i.id),i.rowHeight==null){const n=this.gos.getRowHeightForNode(i,s,e);i.setRowHeight(n.height,n.estimated)}i.setRowTop(t),i.setRowIndex(r),t+=i.rowHeight}return o}clearRowTopAndRowIndex(e,t){const o=e.isActive(),s=i=>{i&&i.id!=null&&!t.has(i.id)&&i.clearRowTopAndRowIndex()},r=i=>{if(s(i),s(i.detailNode),s(i.sibling),i.hasChildren()&&i.childrenAfterGroup){const n=i.level==-1;o&&!n&&!i.expanded||i.childrenAfterGroup.forEach(r)}};r(this.rootNode)}ensureRowsAtPixel(e,t,o=0){const s=this.getRowIndexAtPixel(t),r=this.getRow(s),i=!this.gos.get("suppressAnimationFrame");return r===e[0]?!1:(e.forEach(n=>{$(this.rootNode.allLeafChildren,n)}),e.forEach((n,a)=>{W(this.rootNode.allLeafChildren,n,Math.max(s+o,0)+a)}),this.refreshModel({step:h.EVERYTHING,keepRenderedRows:!0,keepEditingRows:!0,animate:i}),!0)}highlightRowAtPixel(e,t){const o=t!=null?this.getRowIndexAtPixel(t):null,s=o!=null?this.getRow(o):null;if(!s||!e||s===e||t==null){this.lastHighlightedRow&&(this.lastHighlightedRow.setHighlighted(null),this.lastHighlightedRow=null);return}const r=this.getHighlightPosition(t,s);this.lastHighlightedRow&&this.lastHighlightedRow!==s&&(this.lastHighlightedRow.setHighlighted(null),this.lastHighlightedRow=null),s.setHighlighted(r),this.lastHighlightedRow=s}getHighlightPosition(e,t){if(!t){const r=this.getRowIndexAtPixel(e);if(t=this.getRow(r||0),!t)return T.Below}const{rowTop:o,rowHeight:s}=t;return e-o<s/2?T.Above:T.Below}getLastHighlightedRowNode(){return this.lastHighlightedRow}isLastRowIndexKnown(){return!0}getRowCount(){return this.rowsToDisplay?this.rowsToDisplay.length:0}getTopLevelRowCount(){if(this.rowsToDisplay&&this.rowsToDisplay[0]===this.rootNode)return 1;const t=this.rootNode.sibling?1:0,o=this.rootNode.childrenAfterAggFilter;return(o?o.length:0)+t}getTopLevelRowDisplayedIndex(e){if(this.rowsToDisplay&&this.rowsToDisplay[0]===this.rootNode)return e;let o=e;if(this.rowsToDisplay[0].footer){if(e===0)return 0;o-=1}let s=this.rootNode.childrenAfterSort[o];if(this.gos.get("groupHideOpenParents"))for(;s.expanded&&s.childrenAfterSort&&s.childrenAfterSort.length>0;)s=s.childrenAfterSort[0];return s.rowIndex}getRowBounds(e){if(S(this.rowsToDisplay))return null;const t=this.rowsToDisplay[e];return t?{rowTop:t.rowTop,rowHeight:t.rowHeight}:null}onRowGroupOpened(){const e=this.gos.isAnimateRows();this.refreshModel({step:h.MAP,keepRenderedRows:!0,animate:e})}onFilterChanged(e){if(e.afterDataChange)return;const t=this.gos.isAnimateRows(),s=e.columns.length===0||e.columns.some(r=>r.isPrimary())?h.FILTER:h.FILTER_AGGREGATES;this.refreshModel({step:s,keepRenderedRows:!0,animate:t})}onSortChanged(){const e=this.gos.isAnimateRows();this.refreshModel({step:h.SORT,keepRenderedRows:!0,animate:e,keepEditingRows:!0})}getType(){return"clientSide"}onValueChanged(){this.columnModel.isPivotActive()?this.refreshModel({step:h.PIVOT}):this.refreshModel({step:h.AGGREGATE})}createChangePath(e){const t=j(e),o=new B(!1,this.rootNode);return(t||this.gos.get("treeData"))&&o.setInactive(),o}isSuppressModelUpdateAfterUpdateTransaction(e){if(!this.gos.get("suppressModelUpdateAfterUpdateTransaction")||e.rowNodeTransactions==null)return!1;const t=e.rowNodeTransactions.filter(s=>s.add!=null&&s.add.length>0||s.remove!=null&&s.remove.length>0);return t==null||t.length==0}buildRefreshModelParams(e){let t=h.EVERYTHING;const o={everything:h.EVERYTHING,group:h.EVERYTHING,filter:h.FILTER,map:h.MAP,aggregate:h.AGGREGATE,sort:h.SORT,pivot:h.PIVOT};if(M(e)&&(t=o[e]),S(t)){F(`invalid step ${e}, available steps are ${Object.keys(o).join(", ")}`);return}const s=!this.gos.get("suppressAnimationFrame");return{step:t,keepRenderedRows:!0,keepEditingRows:!0,animate:s}}refreshModel(e){if(!this.hasStarted||this.isRefreshingModel||this.columnModel.isChangeEventsDispatching())return;const t=typeof e=="object"&&"step"in e?e:this.buildRefreshModelParams(e);if(!t||this.isSuppressModelUpdateAfterUpdateTransaction(t))return;const o=this.createChangePath(t.rowNodeTransactions);switch(this.isRefreshingModel=!0,t.step){case h.EVERYTHING:this.doRowGrouping(t.rowNodeTransactions,t.rowNodeOrder,o,!!t.afterColumnsChanged);case h.FILTER:this.doFilter(o);case h.PIVOT:this.doPivot(o);case h.AGGREGATE:this.doAggregate(o);case h.FILTER_AGGREGATES:this.doFilterAggregates(o);case h.SORT:this.doSort(t.rowNodeTransactions,o);case h.MAP:this.doRowsToDisplay()}const s=this.setRowTopAndRowIndex();this.clearRowTopAndRowIndex(o,s),this.isRefreshingModel=!1;const r={type:"modelUpdated",animate:t.animate,keepRenderedRows:t.keepRenderedRows,newData:t.newData,newPage:!1,keepUndoRedoStack:t.keepUndoRedoStack};this.eventService.dispatchEvent(r)}isEmpty(){const e=S(this.rootNode.allLeafChildren)||this.rootNode.allLeafChildren.length===0;return S(this.rootNode)||e||!this.columnModel.isReady()}isRowsToRender(){return M(this.rowsToDisplay)&&this.rowsToDisplay.length>0}getNodesInRangeForSelection(e,t){let o=!1,s=!1;const r=[],i=this.gos.get("groupSelectsChildren");return this.forEachNodeAfterFilterAndSort(n=>{if(s)return;if(o&&(n===t||n===e)&&(s=!0,n.group&&i)){r.push(...n.allLeafChildren);return}if(!o){if(n!==t&&n!==e)return;o=!0}if(!n.group||!i){r.push(n);return}}),r}setDatasource(e){F("should never call setDatasource on clientSideRowController")}getTopLevelNodes(){return this.rootNode?this.rootNode.childrenAfterGroup:null}getRootNode(){return this.rootNode}getRow(e){return this.rowsToDisplay[e]}isRowPresent(e){return this.rowsToDisplay.indexOf(e)>=0}getRowIndexAtPixel(e){if(this.isEmpty()||this.rowsToDisplay.length===0)return-1;let t=0,o=this.rowsToDisplay.length-1;if(e<=0)return 0;if(Y(this.rowsToDisplay).rowTop<=e)return this.rowsToDisplay.length-1;let r=-1,i=-1;for(;;){const n=Math.floor((t+o)/2),a=this.rowsToDisplay[n];if(this.isRowInPixel(a,e)||(a.rowTop<e?t=n+1:a.rowTop>e&&(o=n-1),r===t&&i===o))return n;r=t,i=o}}isRowInPixel(e,t){const o=e.rowTop,s=e.rowTop+e.rowHeight;return o<=t&&s>t}forEachLeafNode(e){this.rootNode.allLeafChildren&&this.rootNode.allLeafChildren.forEach((t,o)=>e(t,o))}forEachNode(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterGroup||[]],callback:e,recursionType:0,index:0,includeFooterNodes:t})}forEachNodeAfterFilter(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterAggFilter||[]],callback:e,recursionType:1,index:0,includeFooterNodes:t})}forEachNodeAfterFilterAndSort(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterSort||[]],callback:e,recursionType:2,index:0,includeFooterNodes:t})}forEachPivotNode(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[this.rootNode],callback:e,recursionType:3,index:0,includeFooterNodes:t})}recursivelyWalkNodesAndCallback(e){const{nodes:t,callback:o,recursionType:s,includeFooterNodes:r}=e;let{index:i}=e;const n=a=>{const l=t[0]?.parent;if(!l)return;const c=r&&this.gos.getGrandTotalRow(),g=this.gos.getGroupTotalRowCallback(),d=r&&g({node:l});if(l===this.rootNode){c===a&&(l.createFooter(),o(l.sibling,i++));return}d===a&&(l.createFooter(),o(l.sibling,i++))};n("top");for(let a=0;a<t.length;a++){const l=t[a];if(o(l,i++),l.hasChildren()&&!l.footer){let c=null;switch(s){case 0:c=l.childrenAfterGroup;break;case 1:c=l.childrenAfterAggFilter;break;case 2:c=l.childrenAfterSort;break;case 3:c=l.leafGroup?null:l.childrenAfterSort;break}c&&(i=this.recursivelyWalkNodesAndCallback({nodes:[...c],callback:o,recursionType:s,index:i,includeFooterNodes:r}))}}return n("bottom"),i}doAggregate(e){this.aggregationStage?.execute({rowNode:this.rootNode,changedPath:e})}doFilterAggregates(e){this.filterAggregatesStage?this.filterAggregatesStage.execute({rowNode:this.rootNode,changedPath:e}):this.rootNode.childrenAfterAggFilter=this.rootNode.childrenAfterFilter}expandOrCollapseAll(e){const t=this.gos.get("treeData"),o=this.columnModel.isPivotActive(),s=n=>{n&&n.forEach(a=>{const l=()=>{a.expanded=e,s(a.childrenAfterGroup)};if(t){M(a.childrenAfterGroup)&&l();return}if(o){!a.leafGroup&&l();return}a.group&&l()})};this.rootNode&&s(this.rootNode.childrenAfterGroup),this.refreshModel({step:h.MAP});const i={type:"expandOrCollapseAll",source:e?"expandAll":"collapseAll"};this.eventService.dispatchEvent(i)}doSort(e,t){this.sortStage.execute({rowNode:this.rootNode,rowNodeTransactions:e,changedPath:t})}doRowGrouping(e,t,o,s){if(this.groupStage){if(e?this.groupStage.execute({rowNode:this.rootNode,rowNodeTransactions:e,rowNodeOrder:t,changedPath:o}):this.groupStage.execute({rowNode:this.rootNode,changedPath:o,afterColumnsChanged:s}),this.gos.get("groupSelectsChildren")&&this.selectionService.updateGroupsFromChildrenSelections("rowGroupChanged",o)){const i={type:"selectionChanged",source:"rowGroupChanged"};this.eventService.dispatchEvent(i)}}else this.rootNode.childrenAfterGroup=this.rootNode.allLeafChildren,this.rootNode.sibling&&(this.rootNode.sibling.childrenAfterGroup=this.rootNode.childrenAfterGroup),this.rootNode.updateHasChildren();this.nodeManager.isRowCountReady()&&(this.rowCountReady=!0,this.eventService.dispatchEventOnce({type:"rowCountReady"}))}doFilter(e){this.filterStage.execute({rowNode:this.rootNode,changedPath:e})}doPivot(e){this.pivotStage?.execute({rowNode:this.rootNode,changedPath:e})}getCopyOfNodesMap(){return this.nodeManager.getCopyOfNodesMap()}getRowNode(e){if(typeof e=="string"&&e.indexOf(x.ID_PREFIX_ROW_GROUP)==0){let o;return this.forEachNode(s=>{s.id===e&&(o=s)}),o}return this.nodeManager.getRowNode(e)}setRowData(e){this.selectionService.reset("rowDataChanged"),this.nodeManager.setRowData(e),this.hasStarted&&this.dispatchUpdateEventsAndRefresh()}dispatchUpdateEventsAndRefresh(){const e={type:"rowDataUpdated"};this.eventService.dispatchEvent(e),this.refreshModel({step:h.EVERYTHING,newData:!0})}batchUpdateRowData(e,t){if(this.applyAsyncTransactionsTimeout==null){this.rowDataTransactionBatch=[];const o=this.gos.getAsyncTransactionWaitMillis();this.applyAsyncTransactionsTimeout=window.setTimeout(()=>{this.executeBatchUpdateRowData()},o)}this.rowDataTransactionBatch.push({rowDataTransaction:e,callback:t})}flushAsyncTransactions(){this.applyAsyncTransactionsTimeout!=null&&(clearTimeout(this.applyAsyncTransactionsTimeout),this.executeBatchUpdateRowData())}executeBatchUpdateRowData(){this.valueCache.onDataChanged();const e=[],t=[];let o=!1;if(this.rowDataTransactionBatch&&this.rowDataTransactionBatch.forEach(s=>{const r=this.nodeManager.updateRowData(s.rowDataTransaction,void 0);t.push(r),s.callback&&e.push(s.callback.bind(null,r)),typeof s.rowDataTransaction.addIndex=="number"&&(o=!0)}),this.commonUpdateRowData(t,void 0,o),e.length>0&&window.setTimeout(()=>{e.forEach(s=>s())},0),t.length>0){const s={type:"asyncTransactionsFlushed",results:t};this.eventService.dispatchEvent(s)}this.rowDataTransactionBatch=null,this.applyAsyncTransactionsTimeout=void 0}updateRowData(e,t){this.valueCache.onDataChanged();const o=this.nodeManager.updateRowData(e,t),s=typeof e.addIndex=="number";return this.commonUpdateRowData([o],t,s),o}createRowNodeOrder(){if(this.gos.get("suppressMaintainUnsortedOrder"))return;const t={};if(this.rootNode&&this.rootNode.allLeafChildren)for(let o=0;o<this.rootNode.allLeafChildren.length;o++){const s=this.rootNode.allLeafChildren[o];t[s.id]=o}return t}commonUpdateRowData(e,t,o){if(!this.hasStarted)return;const s=!this.gos.get("suppressAnimationFrame");o&&(t=this.createRowNodeOrder());const r={type:"rowDataUpdated"};this.eventService.dispatchEvent(r),this.refreshModel({step:h.EVERYTHING,rowNodeTransactions:e,rowNodeOrder:t,keepRenderedRows:!0,keepEditingRows:!0,animate:s})}doRowsToDisplay(){this.rowsToDisplay=this.flattenStage.execute({rowNode:this.rootNode})}onRowHeightChanged(){this.refreshModel({step:h.MAP,keepRenderedRows:!0,keepEditingRows:!0,keepUndoRedoStack:!0})}onRowHeightChangedDebounced(){this.onRowHeightChanged_debounced()}resetRowHeights(){const e=this.resetRowHeightsForAllRowNodes();this.rootNode.setRowHeight(this.rootNode.rowHeight,!0),this.rootNode.sibling&&this.rootNode.sibling.setRowHeight(this.rootNode.sibling.rowHeight,!0),e&&this.onRowHeightChanged()}resetRowHeightsForAllRowNodes(){let e=!1;return this.forEachNode(t=>{t.setRowHeight(t.rowHeight,!0);const o=t.detailNode;o&&o.setRowHeight(o.rowHeight,!0),t.sibling&&t.sibling.setRowHeight(t.sibling.rowHeight,!0),e=!0}),e}onGridStylesChanges(e){if(e.rowHeightChanged){if(this.columnModel.isAutoRowHeightActive())return;this.resetRowHeights()}}onGridReady(){this.hasStarted||this.setInitialData()}isRowDataLoaded(){return this.rowCountReady}};import{_warnOnce as Z}from"@ag-grid-community/core";function ee(e){e.expansionService.onGroupExpandedOrCollapsed()}function te(e,t){e.rowModelHelperService?.getClientSideRowModel()?.refreshModel(t)}function oe(e,t){e.rowModelHelperService?.getClientSideRowModel()?.forEachLeafNode(t)}function se(e,t){e.rowModelHelperService?.getClientSideRowModel()?.forEachNodeAfterFilter(t)}function ie(e,t){e.rowModelHelperService?.getClientSideRowModel()?.forEachNodeAfterFilterAndSort(t)}function re(e){if(e.columnModel.isAutoRowHeightActive()){Z("calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.");return}e.rowModelHelperService?.getClientSideRowModel()?.resetRowHeights()}function ne(e,t){return e.frameworkOverrides.wrapIncoming(()=>e.rowModelHelperService?.getClientSideRowModel()?.updateRowData(t))}function ae(e,t,o){e.frameworkOverrides.wrapIncoming(()=>e.rowModelHelperService?.getClientSideRowModel()?.batchUpdateRowData(t,o))}function le(e){e.frameworkOverrides.wrapIncoming(()=>e.rowModelHelperService?.getClientSideRowModel()?.flushAsyncTransactions())}function de(e){return e.selectionService.getBestCostNodeSelection()}import{BeanStub as he}from"@ag-grid-community/core";var ce=class extends he{constructor(){super(...arguments),this.beanName="filterStage"}wireBeans(e){this.filterManager=e.filterManager}execute(e){const{changedPath:t}=e;this.filter(t)}filter(e){const t=!!this.filterManager?.isChildFilterPresent();this.filterNodes(t,e)}filterNodes(e,t){const o=(s,r)=>{s.hasChildren()&&e&&!r?s.childrenAfterFilter=s.childrenAfterGroup.filter(i=>{const n=i.childrenAfterFilter&&i.childrenAfterFilter.length>0,a=i.data&&this.filterManager.doesRowPassFilter({rowNode:i});return n||a}):s.childrenAfterFilter=s.childrenAfterGroup,s.sibling&&(s.sibling.childrenAfterFilter=s.childrenAfterFilter)};if(this.doingTreeDataFiltering()){const s=(i,n)=>{if(i.childrenAfterGroup)for(let a=0;a<i.childrenAfterGroup.length;a++){const l=i.childrenAfterGroup[a],c=n||this.filterManager.doesRowPassFilter({rowNode:l});l.childrenAfterGroup?s(i.childrenAfterGroup[a],c):o(l,c)}o(i,n)},r=i=>s(i,!1);t.executeFromRootNode(r)}else{const s=r=>o(r,!1);t.forEachChangedNodeDepthFirst(s,!0)}}doingTreeDataFiltering(){return this.gos.get("treeData")&&!this.gos.get("excludeChildrenWhenTreeDataFiltering")}};import{BeanStub as ue,RowNode as ge,_exists as b,_missingOrEmpty as pe}from"@ag-grid-community/core";var fe=class extends ue{constructor(){super(...arguments),this.beanName="flattenStage"}wireBeans(e){this.beans=e,this.columnModel=e.columnModel}execute(e){const t=e.rowNode,o=[],s=this.columnModel.isPivotMode(),r=s&&t.leafGroup,i=r?[t]:t.childrenAfterSort,n=this.getFlattenDetails();this.recursivelyAddToRowsToDisplay(n,i,o,s,0);const a=o.length>0;if(!r&&a&&n.grandTotalRow){t.createFooter();const c=n.grandTotalRow==="top";this.addRowNodeToRowsToDisplay(n,t.sibling,o,0,c)}return o}getFlattenDetails(){const e=this.gos.get("groupRemoveSingleChildren");return{groupRemoveLowestSingleChildren:!e&&this.gos.get("groupRemoveLowestSingleChildren"),groupRemoveSingleChildren:e,isGroupMultiAutoColumn:this.gos.isGroupMultiAutoColumn(),hideOpenParents:this.gos.get("groupHideOpenParents"),grandTotalRow:this.gos.getGrandTotalRow(),groupTotalRow:this.gos.getGroupTotalRowCallback()}}recursivelyAddToRowsToDisplay(e,t,o,s,r){if(!pe(t))for(let i=0;i<t.length;i++){const n=t[i],a=n.hasChildren(),l=s&&!a,c=e.groupRemoveSingleChildren&&a&&n.childrenAfterGroup.length===1,g=e.groupRemoveLowestSingleChildren&&a&&n.leafGroup&&n.childrenAfterGroup.length===1,d=s&&n.leafGroup,u=e.hideOpenParents&&n.expanded&&!n.master&&!d;if(!l&&!u&&!c&&!g&&this.addRowNodeToRowsToDisplay(e,n,o,r),!(s&&n.leafGroup)){if(a){const f=c||g;if(n.expanded||f){const p=e.groupTotalRow({node:n});p||n.destroyFooter();const w=f?r:r+1;p==="top"&&(n.createFooter(),this.addRowNodeToRowsToDisplay(e,n.sibling,o,w)),this.recursivelyAddToRowsToDisplay(e,n.childrenAfterSort,o,s,w),p==="bottom"&&(n.createFooter(),this.addRowNodeToRowsToDisplay(e,n.sibling,o,w))}}else if(n.master&&n.expanded){const f=this.createDetailNode(n);this.addRowNodeToRowsToDisplay(e,f,o,r)}}}}addRowNodeToRowsToDisplay(e,t,o,s,r){r?o.unshift(t):o.push(t),t.setUiLevel(e.isGroupMultiAutoColumn?0:s)}createDetailNode(e){if(b(e.detailNode))return e.detailNode;const t=new ge(this.beans);return t.detail=!0,t.selectable=!1,t.parent=e,b(e.id)&&(t.id="detail_"+e.id),t.data=e.data,t.level=e.level+1,e.detailNode=t,t}};import{BeanStub as we,_errorOnce as H,_exists as Re,_iterateObject as Se,_missing as me}from"@ag-grid-community/core";var Ae=class extends we{constructor(){super(...arguments),this.beanName="immutableService"}wireBeans(e){this.rowModel=e.rowModel,this.selectionService=e.selectionService}postConstruct(){this.rowModel.getType()==="clientSide"&&(this.clientSideRowModel=this.rowModel,this.addManagedPropertyListener("rowData",()=>this.onRowDataUpdated()))}isActive(){const e=this.gos.exists("getRowId");return this.gos.get("resetRowDataOnUpdate")?!1:e}setRowData(e){const t=this.createTransactionForRowData(e);if(!t)return;const[o,s]=t;this.clientSideRowModel.updateRowData(o,s)}createTransactionForRowData(e){if(me(this.clientSideRowModel)){H("ImmutableService only works with ClientSideRowModel");return}const t=this.gos.getRowIdCallback();if(t==null){H("ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!");return}const o={remove:[],update:[],add:[]},s=this.clientSideRowModel.getCopyOfNodesMap(),i=this.gos.get("suppressMaintainUnsortedOrder")?void 0:{};return Re(e)&&e.forEach((n,a)=>{const l=t({data:n,level:0}),c=s[l];i&&(i[l]=a),c?(c.data!==n&&o.update.push(n),s[l]=void 0):o.add.push(n)}),Se(s,(n,a)=>{a&&o.remove.push(a.data)}),[o,i]}onRowDataUpdated(){const e=this.gos.get("rowData");e&&(this.isActive()?this.setRowData(e):(this.selectionService.reset("rowDataChanged"),this.clientSideRowModel.setRowData(e)))}};import{BeanStub as Ce,_errorOnce as ve,_missing as O,_warnOnce as Te}from"@ag-grid-community/core";var Me=class extends Ce{constructor(){super(...arguments),this.beanName="sortService"}wireBeans(e){this.columnModel=e.columnModel,this.funcColsService=e.funcColsService,this.rowNodeSorter=e.rowNodeSorter,this.showRowGroupColsService=e.showRowGroupColsService}sort(e,t,o,s,r,i){const n=this.gos.get("groupMaintainOrder"),a=this.columnModel.getCols().some(u=>u.isRowGroupActive());let l={};o&&s&&(l=this.calculateDirtyNodes(s));const c=this.columnModel.isPivotMode(),g=this.gos.getCallback("postSortRows"),d=u=>{this.pullDownGroupDataForHideOpenParents(u.childrenAfterAggFilter,!0);const R=c&&u.leafGroup;if(n&&a&&!u.leafGroup&&!i){const w=this.funcColsService.getRowGroupColumns()?.[u.level+1]?.getSort()===null,E=u.childrenAfterAggFilter.slice(0);if(u.childrenAfterSort&&!w){const m={};u.childrenAfterSort.forEach((A,C)=>{m[A.id]=C}),E.sort((A,C)=>(m[A.id]??0)-(m[C.id]??0))}u.childrenAfterSort=E}else!t||R?u.childrenAfterSort=u.childrenAfterAggFilter.slice(0):o?u.childrenAfterSort=this.doDeltaSort(u,l,r,e):u.childrenAfterSort=this.rowNodeSorter.doFullSort(u.childrenAfterAggFilter,e);if(u.sibling&&(u.sibling.childrenAfterSort=u.childrenAfterSort),this.updateChildIndexes(u),g){const p={nodes:u.childrenAfterSort};g(p)}};r&&r.forEachChangedNodeDepthFirst(d),this.updateGroupDataForHideOpenParents(r)}calculateDirtyNodes(e){const t={},o=s=>{s&&s.forEach(r=>t[r.id]=!0)};return e&&e.forEach(s=>{o(s.add),o(s.update),o(s.remove)}),t}doDeltaSort(e,t,o,s){const r=e.childrenAfterAggFilter,i=e.childrenAfterSort;if(!i)return this.rowNodeSorter.doFullSort(r,s);const n={},a=[];r.forEach(d=>{t[d.id]||!o.canSkip(d)?a.push(d):n[d.id]=!0});const l=i.filter(d=>n[d.id]),c=(d,u)=>({currentPos:u,rowNode:d}),g=a.map(c).sort((d,u)=>this.rowNodeSorter.compareRowNodes(s,d,u));return this.mergeSortedArrays(s,g,l.map(c)).map(({rowNode:d})=>d)}mergeSortedArrays(e,t,o){const s=[];let r=0,i=0;for(;r<t.length&&i<o.length;)this.rowNodeSorter.compareRowNodes(e,t[r],o[i])<0?s.push(t[r++]):s.push(o[i++]);for(;r<t.length;)s.push(t[r++]);for(;i<o.length;)s.push(o[i++]);return s}updateChildIndexes(e){if(O(e.childrenAfterSort))return;const t=e.childrenAfterSort;for(let o=0;o<t.length;o++){const s=t[o],r=o===0,i=o===e.childrenAfterSort.length-1;s.setFirstChild(r),s.setLastChild(i),s.setChildIndex(o)}}updateGroupDataForHideOpenParents(e){if(!this.gos.get("groupHideOpenParents"))return;if(this.gos.get("treeData"))return Te("The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them."),!1;const t=o=>{this.pullDownGroupDataForHideOpenParents(o.childrenAfterSort,!1),o.childrenAfterSort.forEach(s=>{s.hasChildren()&&t(s)})};e&&e.executeFromRootNode(o=>t(o))}pullDownGroupDataForHideOpenParents(e,t){!this.gos.get("groupHideOpenParents")||O(e)||e.forEach(o=>{(this.showRowGroupColsService?.getShowRowGroupCols()??[]).forEach(r=>{const i=r.getColDef().showRowGroup;if(typeof i!="string"){ve("groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");return}const n=i,a=this.columnModel.getColDefCol(n);if(a!==o.rowGroupColumn)if(t)o.setGroupValue(r.getId(),void 0);else{const c=o.getFirstChildOfFirstChild(a);c&&o.setGroupValue(r.getId(),c.key)}})})}};import{BeanStub as Ne,_exists as I}from"@ag-grid-community/core";var De=class extends Ne{constructor(){super(...arguments),this.beanName="sortStage"}wireBeans(e){this.sortService=e.sortService,this.sortController=e.sortController}execute(e){const t=this.sortController.getSortOptions(),o=I(t)&&t.length>0,s=o&&I(e.rowNodeTransactions)&&this.gos.get("deltaSort"),r=t.some(i=>this.gos.isColumnsSortingCoupledToGroup()?i.column.isPrimary()&&i.column.isRowGroupActive():!!i.column.getColDef().showRowGroup);this.sortService.sort(t,o,s,e.rowNodeTransactions,e.changedPath,r)}},G="32.0.0",k={version:G,moduleName:`${v.ClientSideRowModelModule}-core`,rowModel:"clientSide",beans:[J,ce,De,fe,Me,Ae]},ye={version:G,moduleName:`${v.ClientSideRowModelModule}-api`,beans:[L],apiFunctions:{onGroupExpandedOrCollapsed:ee,refreshClientSideRowModel:te,forEachLeafNode:oe,forEachNodeAfterFilter:se,forEachNodeAfterFilterAndSort:ie,resetRowHeights:re,applyTransaction:ne,applyTransactionAsync:ae,flushAsyncTransactions:le,getBestCostNodeSelection:de},dependantModules:[k,_]},Ge={version:G,moduleName:v.ClientSideRowModelModule,dependantModules:[k,ye]};export{Ge as ClientSideRowModelModule};
